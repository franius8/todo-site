{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-site/./src/dateconverter.ts","webpack://todo-site/./src/todo.ts","webpack://todo-site/./src/project.ts","webpack://todo-site/./src/idgenerator.ts","webpack://todo-site/./src/datefixer.ts","webpack://todo-site/./src/todomanipulator.ts","webpack://todo-site/./src/formgetter.ts","webpack://todo-site/./src/formhandler.ts","webpack://todo-site/./src/formbuilder.ts","webpack://todo-site/./src/dom-manipulator.ts","webpack://todo-site/./src/index.ts"],"sourcesContent":["const dateConverter = (() => {\n  const convertToString = (date: Date) => {\n    let result = '';\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  result = day + '.' + month + '.' + year;\n  return result;\n  }\n  const convertToInputFormat = (date: Date) => {\n    let result = '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    result = year + '-' + month + '-' + day;\n    return result;\n  }\n\n  const getDayDifference = (date: Date) => {\n    const toDoDate = date;\n    const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n    const timeDifference = toDoDate.getTime() - currentDate.getTime();\n    const dayDifference = Math.floor(timeDifference / (1000 * 3600 * 24));\n    return dayDifference;\n  }\n  return { convertToString, getDayDifference, convertToInputFormat };\n})();\n\nexport default dateConverter;\n","const toDo = (heading: string, text: string, date: Date, priority: string, id:number, projectiDs:number[], done = false) => {\n  const iD:number = id;\n  let doneStatus = done;\n  const markAsDone = () => doneStatus = !doneStatus;\n  const getDoneStatus = () => doneStatus;\n  return { heading, text, date, priority, iD, projectiDs, markAsDone, getDoneStatus };\n};\n\nexport default toDo;","import toDoManipulator from \"./todomanipulator\";\n\nconst Project = (iD: number, name:string, toDos:ToDo[], date: Date, priority: string) => {\n  let toDosAry = toDos;\n  const addToDo = (toDo:ToDo) => {\n    toDosAry.push(toDo)\n    toDoManipulator.updateProjectAry();\n  };\n  const clearToDos = () => {\n    toDosAry = [];\n    toDoManipulator.updateProjectAry();\n  };\n  const getToDos = () => toDosAry;\n  const setToDos = (toDos:ToDo[]) => toDosAry = toDos;\n  return { iD, name, date, priority, toDos, addToDo, clearToDos, getToDos, setToDos };\n}\n\nexport default Project;","const idGenerator = (() => {\n  const iDsAry:number[] = JSON.parse(localStorage.getItem(\"idsary\") || \"[]\");\n  const generateID = () => {\n    for (;;) {\n      const randID:number = Math.floor(Math.random() * (10000));\n      if (!iDsAry.includes(randID)) {\n        iDsAry.push(randID);\n        localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n        return randID;\n      }\n    }\n  }\n  const freeID = (id:number) => {\n    const index = iDsAry.indexOf(id);\n    iDsAry.splice(index, 1);\n    localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n  }\n  return { generateID, freeID }\n})();\n\nexport default idGenerator;\n","const dateFixer = (() => {\n  const fixDates = (dateString: string) => {\n    return new Date (dateString);\n  }\n  return { fixDates };\n})();\n\nexport default dateFixer;","import toDo from \"./todo\";\nimport Project from \"./project\";\nimport idGenerator from \"./idgenerator\";\nimport dateFixer from \"./datefixer\";\n\nconst toDoManipulator = (() => {\n\n  const toDoAry:ToDo[] = [];\n  const doneAry:ToDo[] = [];\n  const projectAry:Project[] = [];\n\n  const loadToDoAry = () => {\n    const rawToDoAry = JSON.parse(localStorage.getItem(\"todoary\") || \"[]\");\n    rawToDoAry.forEach((todo: ToDo) => {\n    todo.date = dateFixer.fixDates(todo.date);\n    toDoAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs));\n    });\n  }\n\n  const loadDoneAry = () => {\n    const rawDoneAry = JSON.parse(localStorage.getItem(\"doneary\") || \"[]\");\n    rawDoneAry.forEach((todo: ToDo) => {\n      todo.date = dateFixer.fixDates(todo.date);\n      doneAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs, true));\n      });\n  }\n\n  const loadProjectAry = () => {\n    const rawProjectAry = JSON.parse(localStorage.getItem(\"projectary\") || \"[]\");\n    rawProjectAry.forEach((project: RawProject) => {\n      project.date = dateFixer.fixDates(project.date);\n      project.toDos.forEach((todo: ToDo) => {\n        todo.date = dateFixer.fixDates(todo.date);\n        return todo;\n        });\n      projectAry.push(Project(project.iD, project.name, project.toDos, project.date, project.priority));\n      });\n  }\n\n  const loadArys = () => {\n    loadToDoAry();\n    loadDoneAry();\n    loadProjectAry();\n  }\n\n  const createToDo = (heading: string, text: string, date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newToDo:ToDo = toDo(heading, text, date, priority, iD, []);\n    toDoAry.push(newToDo);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    return newToDo;\n  }\n  const modifyToDo = (id:number, newHeading: string = null, newText: string = null, newDate: Date = null, newPriority: string = null) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (newHeading !== null) {\n      toDo.heading = newHeading;\n    }\n    if (newText !== null) {\n      toDo.text = newText;\n    }\n    if (newDate !== null) {\n      toDo.date = newDate;\n    }\n    if (newPriority !== null) {\n      toDo.priority = newPriority;\n    }\n  }\n  const deleteToDo = ( id:number ) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (toDo.projectiDs.length > 0) {\n      toDo.projectiDs.forEach((projectiD) => {\n        const project:Project = projectAry.find(x => x.iD === projectiD);\n        const index = project.getToDos().indexOf(toDo);\n        project.toDos.splice(index, 1);\n      });\n    }\n\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    toDoAry.splice(index, 1);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findTodDo = (id:number) => {\n    return toDoAry.find(x => x.iD === id);\n  }\n\n  const moveToDone = (id:number) => {\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    const doneToDo = toDoAry.splice(index, 1)[0];\n    console.log(doneToDo);\n    doneToDo.markAsDone();\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    doneAry.push(doneToDo);\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n  }\n  const createProject = (name:string, toDos:ToDo[], date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newProject:Project = Project(iD, name, toDos, date, priority);\n    projectAry.push(newProject);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    return newProject;\n  }\n\n  const modifyProject = (id:number, newName: string = null, newToDos:ToDo[] = null, newDate: Date = null, newPriority: string = null) => {\n    const project:Project = projectAry.find(x => x.iD === id);\n    if (newName !== null) {\n      project.name = newName;\n    }\n    if (newToDos !== null) {\n      project.setToDos(newToDos);\n    }\n    if (newDate !== null) {\n      project.date = newDate;\n    }\n    if (newPriority !== null) {\n      project.priority = newPriority;\n    }\n  }\n\n  const deleteProject = (id:number) => {\n    const index:number = projectAry.findIndex(x => x.iD === id);\n    projectAry.splice(index, 1);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findProject = (id:number) => {\n    return projectAry.find(x => x.iD === id);\n  }\n\n  const getToDoAry = () => toDoAry;\n  const getDoneAry = () => doneAry;\n  const getProjectAry = () => projectAry;\n  const updateProjectAry = () => {\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n  }\n  return { \n    createToDo, \n    modifyToDo, \n    deleteToDo, \n    getToDoAry, \n    loadArys, \n    getDoneAry, \n    moveToDone, \n    findTodDo, \n    createProject,\n    modifyProject, \n    getProjectAry,\n    deleteProject,\n    findProject,\n    updateProjectAry }\n})();\n\nexport default toDoManipulator;","const formGetter = (() => {\n\n  const getFormData = () => {\n    const toDoTitle:string = (<HTMLInputElement>(document.getElementById('todotitle'))).value;\n    const toDoContent:string = (<HTMLInputElement>(document.getElementById('todocontent'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(document.getElementById('tododate'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"todopriority\"]:checked'))).value;\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority]\n    return toDoData;\n  }\n  const getEditFormData = (e:SubmitEvent) => {\n    const target = e.target as HTMLFormElement;\n    const toDoTitle:string = (<HTMLInputElement>(target.querySelector('#todotitleedit'))).value;\n    const toDoContent:string = (<HTMLInputElement>(target.querySelector('#todocontentedit'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(target.querySelector('#tododateedit'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(target.querySelector('input[name=\"todopriorityedit\"]:checked'))).value;\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority];\n    return toDoData;\n  }\n  const getProjectFormData = () => {\n    const projectName:string = (<HTMLInputElement>(document.getElementById('projectname'))).value;\n    const projectDate:Date = new Date((<HTMLInputElement>(document.getElementById('projectdate'))).value);\n    const projectPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"projectpriority\"]:checked'))).value;\n    const projectData:[string, Date, string] = [projectName, projectDate, projectPriority];\n    return projectData;\n  }\n  const getProjectToDoData = (target:HTMLElement) => {\n    const projectToDoFields = target.querySelectorAll('input[name=\"projectcheckbox\"]:checked');\n    const projectToDoIdsAry:number[] = Array.from(projectToDoFields).map((field:HTMLInputElement) => Number(field.value));\n    console.log(projectToDoIdsAry);\n    return projectToDoIdsAry;\n  }\n  const getProjectEditFormData = (e:SubmitEvent) => {\n    const target = e.target as HTMLFormElement;\n    const projectName:string = (<HTMLInputElement>(target.querySelector('#projectnameedit'))).value;\n    const projectDate:Date = new Date((<HTMLInputElement>(target.querySelector('#projectdateedit'))).value);\n    const projectPriority:string = (<HTMLInputElement>(target.querySelector('input[name=\"projectpriorityedit\"]:checked'))).value;\n    const projectData:[string, Date, string] = [projectName, projectDate, projectPriority];\n    return projectData;\n  }\n  return { \n    getFormData, \n    getEditFormData, \n    getProjectFormData, \n    getProjectToDoData,\n    getProjectEditFormData \n  }\n})();\n\nexport default formGetter;","import formGetter from \"./formgetter\";\nimport domManipulator from \"./dom-manipulator\";\nimport toDoManipulator from \"./todomanipulator\";\n\nconst formHandler =(() => {\n  const handleFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const toDoData = formGetter.getFormData();\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createToDo(toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n  const handleEditFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const toDoDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const toDoData = formGetter.getEditFormData(e);\n    target.reset();\n    toDoManipulator.modifyToDo(Number(toDoDiv.id), toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n  const handleNewProjectFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const projectData = formGetter.getProjectFormData();\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createProject(projectData[0], [], projectData[1], projectData[2]);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n  const handleAddProjectToDosFormSubmission = (e:SubmitEvent, iD:number) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const projectToDoIds = formGetter.getProjectToDoData(target);\n    target.reset()\n    targetParent.style.display = 'none';\n    const project:Project = toDoManipulator.findProject(iD);\n    project.clearToDos();\n    projectToDoIds.forEach((toDoId) => {\n      project.addToDo(toDoManipulator.findTodDo(toDoId));\n  });\n  }\n  const handleProjectEditFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const projectDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const projectData = formGetter.getProjectEditFormData(e);\n    target.reset();\n    toDoManipulator.modifyProject(Number(projectDiv.id), projectData[0], null, projectData[1], projectData[2]);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  return {\n    handleFormSubmission, \n    handleEditFormSubmission, \n    handleNewProjectFormSubmission, \n    handleAddProjectToDosFormSubmission,\n    handleProjectEditFormSubmission\n  };\n})();\n\nexport default formHandler","import toDoManipulator from \"./todomanipulator\";\nimport formHandler from \"./formhandler\";\nimport dateConverter from \"./dateconverter\";\nimport domManipulator from \"./dom-manipulator\";\n\nconst formBuilder = (() => {\n  const toDoPriorities:string[] = ['Low', 'Standard', 'High'];\n  const projectPriorities:string[] = ['Normal', 'Urgent'];\n\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  const createCloseButton = (formDiv:HTMLDivElement) => {\n    const closeButtonDiv:HTMLDivElement = document.createElement('div');\n    closeButtonDiv.setAttribute('id', 'closebuttondiv');\n    const closeButton:HTMLButtonElement = document.createElement('button');\n    closeButton.setAttribute('id', 'closebutton');\n    closeButton.innerHTML = '<span class=\"material-symbols-outlined\">close</span>';\n    closeButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'none';\n      content.classList.remove('blurred');\n    });\n    closeButtonDiv.appendChild(closeButton);\n    return closeButtonDiv;\n  }\n  const labelCreator = (forElement: string, labelText: string) => {\n    const label:HTMLLabelElement = document.createElement('label');\n    label.setAttribute('for', forElement);\n    label.textContent = labelText;\n    return label;\n  }\n  const inputFieldCreator = (fieldType: string, fieldName: string, fieldValue = 'empty', required:boolean) => {\n    const field:HTMLInputElement = document.createElement('input');\n    field.setAttribute('type', fieldType);\n    field.setAttribute('name', fieldName);\n    field.setAttribute('id', fieldName);\n    if (required === true) {\n      field.setAttribute('required', 'true');\n    }\n    if (fieldValue !== 'empty') {\n      field.setAttribute('value', fieldValue);\n    }\n    return field;\n  }\n  const radioCreator = (radioName: string, radioOptions: string[], checkedValue:string = null) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('radiocontainer', 'Priority:'));\n    const radioDiv:HTMLDivElement = document.createElement('div');\n    radioDiv.classList.add('radiocontainer');\n    radioOptions.forEach((option) => {\n      const radioButton:HTMLInputElement = document.createElement('input');\n      radioButton.setAttribute('type', 'radio');\n      radioButton.setAttribute('name', radioName);\n      radioButton.setAttribute('value', option);\n      radioButton.setAttribute('id', option);\n      if (option === checkedValue) {\n        radioButton.setAttribute('checked', 'checked');\n      }\n      const radioLabel:HTMLLabelElement = document.createElement('label');\n      radioLabel.setAttribute('for', option);\n      radioLabel.textContent = option[0].toUpperCase() + option.substring(1);\n      radioDiv.appendChild(radioButton);\n      radioDiv.appendChild(radioLabel);\n    })\n    inputDiv.appendChild(radioDiv);\n    return inputDiv\n  }\n  const createSubmitButton = () => {\n    const submitButton:HTMLButtonElement = document.createElement('button');\n    submitButton.setAttribute('type', 'submit');\n    submitButton.setAttribute('id', 'todosubmit');\n    submitButton.textContent = 'Add';\n    return submitButton;\n  }\n  const inputCreator = (fieldType: string, fieldName: string, labelText: string, required = true) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator(fieldName, labelText));\n    inputDiv.appendChild(inputFieldCreator(fieldType, fieldName, 'empty', required));\n    return inputDiv;\n  }\n  const editInputCreator = (fieldType: string, fieldName: string, labelText: string, required = true, fieldValue: string) => {\n    const field:HTMLDivElement = inputCreator(fieldType, fieldName, labelText, required);\n    const inputField:HTMLInputElement = field.querySelector(`#${fieldName}`);\n    inputField.value = fieldValue;\n    return field;\n  }\n  const buildForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'formdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new ToDo';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'todotitle', 'Title:'));\n    form.appendChild(inputCreator('text', 'todocontent', 'Content (optional):', false))\n    form.appendChild(inputCreator('date', 'tododate', 'Due date:'));\n    form.appendChild(radioCreator('todopriority', toDoPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => { \n      formHandler.handleFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n  const buildToDoEditForm = (e:MouseEvent) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const toDoDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const toDoContent:HTMLElement = toDoDiv.querySelector('.todocontent');\n    const toDo:ToDo = toDoManipulator.findTodDo(Number(target.getAttribute('objectid')));\n    const { heading:headerContent, text:textContent, date:dateContent, priority:priorityContent} = toDo;\n    toDoContent.innerHTML = '';\n    toDoContent.classList.add('duringedit');\n    toDoContent.classList.remove('todocontent');\n    const form = document.createElement('form');\n    form.classList.add('todocontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'todotitleedit', 'Title:', true, headerContent));\n    form.appendChild(editInputCreator('text', 'todocontentedit', 'Content (optional):', false, textContent));\n    form.appendChild(editInputCreator('date', 'tododateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('todopriorityedit', toDoPriorities, priorityContent));\n    toDoContent.appendChild(form);\n    targetParent.innerHTML = '';\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancelbutton');\n    cancelButton.innerHTML = '<span class=\"material-symbols-outlined\">undo</span>';\n    cancelButton.addEventListener(('click'), () => {\n      domManipulator.displayToDos(toDoManipulator.getToDoAry());\n    });\n    const acceptButton = document.createElement('button');\n    acceptButton.classList.add('acceptbutton');\n    acceptButton.setAttribute('type', 'submit')\n    acceptButton.setAttribute('form', 'editform');\n    acceptButton.innerHTML = '<span class=\"material-symbols-outlined\">check</span>';\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleEditFormSubmission(e);\n    })\n    targetParent.appendChild(cancelButton);\n    targetParent.appendChild(acceptButton);\n  }\n  const buildProjectEditForm = (e:MouseEvent) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const projectDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const projectContent:HTMLElement = projectDiv.querySelector('.projectcontent');\n    console.log(projectContent);\n    const project:Project = toDoManipulator.findProject(Number(target.getAttribute('objectid')));\n    const { name:nameContent, date:dateContent, priority:priorityContent } = project;\n    projectContent.innerHTML = '';\n    projectContent.classList.add('duringedit');\n    projectContent.classList.remove('projectcontent');\n    const form = document.createElement('form');\n    form.classList.add('projectcontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'projectnameedit', 'Name:', true, nameContent));\n    form.appendChild(editInputCreator('date', 'projectdateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('projectpriorityedit', projectPriorities, priorityContent));\n    projectContent.appendChild(form);\n    targetParent.innerHTML = '';\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancelbutton');\n    cancelButton.innerHTML = '<span class=\"material-symbols-outlined\">undo</span>';\n    cancelButton.addEventListener(('click'), () => {\n      domManipulator.displayProjects(toDoManipulator.getProjectAry());\n    });\n    const acceptButton = document.createElement('button');\n    acceptButton.classList.add('acceptbutton');\n    acceptButton.setAttribute('type', 'submit')\n    acceptButton.setAttribute('form', 'editform');\n    acceptButton.innerHTML = '<span class=\"material-symbols-outlined\">check</span>';\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleProjectEditFormSubmission(e);\n    })\n    targetParent.appendChild(cancelButton);\n    targetParent.appendChild(acceptButton);\n  }\n\n  const buildNewProjectForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projectformdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new Project';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'projectname', 'Name:'));\n    form.appendChild(inputCreator('date', 'projectdate', 'Due date:'));\n    form.appendChild(radioCreator('projectpriority', projectPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleNewProjectFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n  const buildAddProjectToDoForm = (e:MouseEvent, iD:number, toDoDiv:HTMLDivElement) => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projecttodosformdiv');\n    formDiv.style.display = 'block';\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add new ToDos to Project';\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    if (toDoManipulator.getToDoAry().length > 0) {\n    const form:HTMLFormElement = document.createElement('form');\n    const project = toDoManipulator.findProject(iD);\n    const inputDiv = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('projectcheckboxdiv', 'Select ToDos:'))\n    const toDoIdAry = toDoManipulator.getToDoAry().map(a => a.iD);\n    const toDoFormDiv:HTMLDivElement = document.createElement('div');\n    toDoFormDiv.classList.add('projectcheckboxdiv');\n    toDoIdAry.forEach((iD:number) => {\n      const toDoCheckbox:HTMLInputElement = document.createElement('input');\n      toDoCheckbox.setAttribute('type', 'checkbox');\n      toDoCheckbox.setAttribute('id', `todocheckbox${iD}`);\n      toDoCheckbox.setAttribute('value', `${iD}`);\n      toDoCheckbox.setAttribute('name', 'projectcheckbox');\n      if (project.getToDos().filter(toDo => toDo.iD === iD).length > 0) {\n        toDoCheckbox.setAttribute('checked', 'true');\n      }\n      const toDoLabel:HTMLLabelElement = document.createElement('label');\n      toDoLabel.setAttribute('for', `todocheckbox${iD}`);\n      const toDoHeading = document.createElement('div');\n      toDoHeading.textContent = toDoManipulator.findTodDo(iD).heading;\n      const toDoDate = document.createElement('div');\n      toDoDate.classList.add('formtododate');\n      toDoDate.innerHTML = `<span class=\"material-symbols-outlined\">calendar_month</span> \n          ${dateConverter.convertToString(toDoManipulator.findTodDo(iD).date)}`\n      toDoLabel.appendChild(toDoHeading);\n      toDoLabel.appendChild(toDoDate);\n      toDoFormDiv.appendChild(toDoCheckbox);\n      toDoFormDiv.appendChild(toDoLabel);\n    });\n    inputDiv.appendChild(toDoFormDiv);\n    form.appendChild(inputDiv);\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleAddProjectToDosFormSubmission(e, iD);\n      content.classList.remove('blurred');\n      toDoDiv.remove();\n      const projectContainer = document.getElementById(iD.toString()).parentNode;\n      const projectToDoDiv = document.createElement('div');\n      projectToDoDiv.style.display = 'block';\n      projectToDoDiv.classList.add('projecttododiv');\n      projectToDoDiv.setAttribute('id', `projecttododiv${iD}`);\n      const newToDosDiv = domManipulator.createToDosDiv(iD);\n      projectToDoDiv.appendChild(newToDosDiv);\n      projectContainer.appendChild(projectToDoDiv);\n    });\n  } else {\n    const noToDos:HTMLDivElement = document.createElement('div');\n    noToDos.textContent = 'There are no ToDos to add to this Project.';\n    formDiv.appendChild(noToDos);\n  }\n    return formDiv;\n  }\n\n  return { \n    buildForm, \n    buildToDoEditForm,\n    buildProjectEditForm,\n    buildNewProjectForm, \n    buildAddProjectToDoForm \n  };\n})()\n\nexport default formBuilder;","import dateConverter from './dateconverter';\nimport toDoManipulator from './todomanipulator';\nimport formBuilder from './formbuilder';\n\nconst domManipulator = (() => {\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  \n  // Subfunctions for helper functions\n  const createDateString = (date:Date, toDoDateDiv: HTMLElement) => {\n  const toDoDate:HTMLDivElement = document.createElement('div');\n    const dayDifference:number = dateConverter.getDayDifference(date);\n    if (dayDifference === 1) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' day left)';  \n    } else if (dayDifference >= 0) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' days left)';  \n    } else if (dayDifference === -1) {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' day ago)';\n    } else {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' days ago)';\n    }\n    return toDoDate;\n  }\n\n  const buildElementDate = (date: Date) => {\n    const toDoDateDiv:HTMLDivElement = document.createElement('div');\n    toDoDateDiv.classList.add('tododate');\n    const toDoDateIcon:HTMLDivElement = document.createElement('div');\n    toDoDateIcon.innerHTML = '<span class=\"material-symbols-outlined\">calendar_month</span>';\n    toDoDateDiv.appendChild(toDoDateIcon);\n    toDoDateDiv.appendChild(createDateString(date, toDoDateDiv));\n    return toDoDateDiv;\n  };\n\n  const createPriorityCircle = (priority: string) => {\n    const priorityCircle:HTMLDivElement = document.createElement('div');\n    priorityCircle.classList.add('prioritycircle');\n    if (priority === 'Standard') {\n      priorityCircle.style.backgroundColor = 'orange';\n    } else if (priority === 'Low') {\n      priorityCircle.style.backgroundColor = 'blue';\n    } else if (priority === 'High') {\n      priorityCircle.style.backgroundColor = 'red';\n    } else if (priority === 'Normal') {\n      priorityCircle.style.backgroundColor = 'skyblue';\n    } else if (priority === 'Urgent') {\n      priorityCircle.style.backgroundColor = 'crimson';\n    }\n    return priorityCircle;\n  };\n  \n  const createPriorityDiv = (priority: string) => {\n    const priorityDiv:HTMLDivElement = document.createElement('div');\n    priorityDiv.classList.add('todopriority');\n    priorityDiv.appendChild(createPriorityCircle(priority));\n    const priorityText:HTMLDivElement = document.createElement('div');\n    priorityText.textContent = priority + ' priority';\n    priorityDiv.appendChild(priorityText);\n    return priorityDiv;\n  }\n\n  const createNoToDosButton = (iD: number, toDosDiv: HTMLDivElement, length: number) => {\n    const div = document.createElement('div');\n    div.classList.add('notodosdiv');\n    if (length === 0) {\n      const noToDosDiv:HTMLDivElement = document.createElement('div');\n      noToDosDiv.classList.add('notodos');\n      noToDosDiv.textContent = 'No ToDos for this project yet';\n      div.appendChild(noToDosDiv);\n    }\n    const noToDosButton:HTMLButtonElement = document.createElement('button');\n    noToDosButton.classList.add('addtodobutton');\n    noToDosButton.textContent = 'Add ToDo';\n    noToDosButton.addEventListener('click', (e) => {\n      content.appendChild(formBuilder.buildAddProjectToDoForm(e, iD, toDosDiv));\n      content.classList.add('blurred');\n    });\n    div.appendChild(noToDosButton);\n    return div\n  }\n\n  const createToDosDiv = (iD: number) => { \n    const toDosDiv:HTMLDivElement = document.createElement('div');\n    toDosDiv.classList.add('projecttodoscontainer');\n    const toDosAry = toDoManipulator.findProject(iD).getToDos();\n      toDosDiv.appendChild(createNoToDosButton(iD, toDosDiv, toDosAry.length));\n      toDosAry.forEach((toDo) => {\n        projectToDoBuilder(toDo, toDosDiv);\n    });\n    return toDosDiv;\n  }\n\n  const createEditButton = (iD: string, type: string) => {\n    const editButton:HTMLButtonElement = document.createElement('button');\n      editButton.classList.add('editbutton');\n      editButton.setAttribute('objectid', iD);\n      editButton.innerHTML = '<span class=\"material-symbols-outlined\">edit</span>';\n      editButton.addEventListener(('click'), (e) => {\n        if (type === 'project') {\n          formBuilder.buildProjectEditForm(e);\n        } else if (type === 'todo') {\n          formBuilder.buildToDoEditForm(e);\n        }\n      });\n      return editButton;\n  }\n\n  const createDeleteButton = (iD: string, type: string) => {\n    const deleteButton:HTMLButtonElement = document.createElement('button');\n      deleteButton.classList.add('deletebutton');\n      deleteButton.setAttribute('objectid', iD);\n      deleteButton.innerHTML = '<span class=\"material-symbols-outlined\">delete</span>';\n      deleteButton.addEventListener(('click'), (e) => {\n        const target = (<HTMLElement>e.target);\n        const iD = Number(target.getAttribute('objectid'));\n        if (confirm('Are you sure you want to delete that?\\n(This is an irreversible operation)')) {\n          if (type === 'project') {\n           toDoManipulator.deleteProject(iD);\n           displayProjects(toDoManipulator.getProjectAry());\n          } else if (type === 'todo') {\n          toDoManipulator.deleteToDo(iD);\n          displayToDos(toDoManipulator.getToDoAry());  \n        }\n      }});\n      return deleteButton;\n  };\n  \n  // Helper functions that are not returned\n  const addCheckBox = () => {\n    const checkbox:HTMLDivElement = document.createElement('div');\n    checkbox.classList.add('checkbox');\n    checkbox.innerHTML = '&#10003';\n    checkbox.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const toDoDiv = (<HTMLElement>targetParent.parentNode);\n      const toDoDiviD = Number(toDoDiv.id);\n      toDoManipulator.moveToDone(toDoDiviD);\n      displayToDos(toDoManipulator.getToDoAry());\n      });\n    return checkbox;\n  };\n\n  const addNewButtonEventListener = () => {\n    const addNewButton = document.getElementById('addnewbutton');\n    const formDiv:HTMLElement = document.getElementById('formdiv');\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n  }\n\n  const addLabelStripe = (priority: string) => {\n    const labelStripe:HTMLDivElement = document.createElement('div');\n    labelStripe.classList.add('labelstripe');\n    switch (priority) {\n      case 'Standard':\n        labelStripe.style.backgroundColor = 'orange';\n        break;\n      case 'Low':\n        labelStripe.style.backgroundColor = 'blue';\n        break;\n      case 'High':\n        labelStripe.style.backgroundColor = 'red';\n        break;\n      case 'Normal':\n        labelStripe.style.backgroundColor = 'skyblue';\n        break;\n      case 'Urgent':\n        labelStripe.style.backgroundColor = 'crimson';\n        break;\n    }\n    return labelStripe;\n  };\n\n  const addNavListeners = () => {\n    const navItems = document.querySelectorAll('.navitem');\n    navItems.forEach((element) => {\n      element.addEventListener(('click'), (e:MouseEvent) => {\n        const iD = (<HTMLElement>(e.target)).id;\n        switch (iD) {\n          case 'homelink':\n            domManipulator.homePageBuilder();\n            break;\n          case 'donelink':\n            domManipulator.donePageBuilder();\n            break;\n          case 'projectslink':\n            domManipulator.projectPageBuilder();\n            break;\n        } \n      });\n    });\n  };\n\n  const buildElement = (type: string, object: object, propName: string) => {\n    const toDoElement:HTMLDivElement = document.createElement('div');\n    toDoElement.classList.add(`${type}${propName}`);\n    toDoElement.textContent = object[propName as keyof object];\n    return toDoElement;\n  };\n\n  const buildContent = (type: string, object: generalObject, propAry: string[]) => {\n    const content:HTMLDivElement = document.createElement('div');\n    content.classList.add(`${type}content`);\n    propAry.forEach((prop) => {\n      if (prop === 'date') {\n        content.appendChild(buildElementDate(object.date as Date))\n      } else if (prop === 'priority') {\n        content.appendChild(createPriorityDiv(object.priority as string))\n      } else {\n        content.appendChild(buildElement(type, object, prop));\n      }\n    });\n    return content;\n  } \n\n  const buildLogo = () => {\n    const logodiv:HTMLDivElement = document.createElement('div');\n    logodiv.setAttribute('id', 'logodiv');\n    const checkmark:HTMLDivElement = document.createElement('div');\n    checkmark.setAttribute('id', 'checkmark');\n    checkmark.innerHTML = '&#10003';\n    const logo:HTMLDivElement = document.createElement('div');\n    logo.setAttribute('id', 'logo');\n    logo.textContent = 'To Do';\n    logodiv.appendChild(checkmark);\n    logodiv.appendChild(logo);\n    return logodiv;\n  }\n\n  const buildLink = (linkName: string, linkIcon: string) => {\n    const link:HTMLDivElement = document.createElement('div');\n    link.classList.add('navitem');\n    link.setAttribute('id', `${linkName}link`);\n    const capitalizedLinkName = linkName.charAt(0).toUpperCase() + linkName.slice(1); \n    link.innerHTML = `<span class=\"material-symbols-outlined\">${linkIcon}</span> ${capitalizedLinkName}`;\n    return link\n  }\n  \n  const buildNavigationDiv = () => {\n    const navigationDiv:HTMLDivElement = document.createElement('div');\n    navigationDiv.setAttribute('id', 'navigationdiv');\n    navigationDiv.appendChild(buildLink('home', 'house'));\n    navigationDiv.appendChild(buildLink('done', 'done'));\n    navigationDiv.appendChild(buildLink('projects', 'assignment'));\n    return navigationDiv;\n  }\n\n  const clearContent = () => {\n    content.textContent = '';\n  }\n  \n  const clearToDoDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('tododiv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearDoneDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('donediv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearProjectDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('projectdiv');\n    toDoDiv.textContent = '';\n  }\n\n  const createToDoButtons = (iD:string) => {\n    const buttonDiv:HTMLDivElement = document.createElement('div');\n    buttonDiv.classList.add('buttondiv');\n    buttonDiv.appendChild(createEditButton(iD, 'todo'));\n    buttonDiv.appendChild(createDeleteButton(iD, 'todo'));\n    return buttonDiv;\n  }\n\n  const createExpandButton = (iD:number) => {\n      const expandButton:HTMLDivElement = document.createElement('div');\n      expandButton.classList.add('expandbutton');\n      expandButton.setAttribute('objectid', iD.toString());\n      expandButton.innerHTML = '<span class=\"material-symbols-outlined\">expand_more</span>';\n      expandButton.addEventListener(('click'), () => {\n        const projectDiv = document.getElementById(iD.toString());\n        const toDosDiv = (<HTMLElement>(projectDiv.nextSibling));\n        toDosDiv.textContent = '';\n        toDosDiv.appendChild(createToDosDiv(iD));\n        if (toDosDiv.style.display === 'none') {\n          toDosDiv.textContent = '';\n          toDosDiv.appendChild(createToDosDiv(iD));\n          toDosDiv.style.display = 'block'\n        } else {\n          toDosDiv.style.display = 'none';\n        } \n        projectDiv.classList.toggle('expanded');\n\n      });\n      return expandButton;\n  }\n\n  const buildAddNewButton = () => {\n      const addNewButton:HTMLButtonElement = document.createElement('button');\n      addNewButton.setAttribute('id', 'addnewbutton');\n      addNewButton.textContent = 'Add ToDo';\n      return addNewButton;\n  }\n\n  const buildHeader = () => {\n      const header:HTMLElement = document.createElement('header');\n      header.setAttribute('id', 'header');\n      header.appendChild(buildLogo());\n      header.appendChild(buildNavigationDiv());\n      header.appendChild(buildAddNewButton());\n      return header\n  }\n\n  const buildNewProjectButtonDiv = () => {\n      const newProjectButtonDiv:HTMLDivElement = document.createElement('div');\n      newProjectButtonDiv.setAttribute('id', 'newprojectbuttondiv');\n      const newProjectButton:HTMLButtonElement = document.createElement('button');\n      newProjectButton.setAttribute('id', 'newprojectbutton');\n      newProjectButton.textContent = 'Add a new project';\n      newProjectButtonDiv.appendChild(newProjectButton);\n      return newProjectButtonDiv;\n  }\n\n  const createProjectButtons = (iD:string) => {\n      const buttonDiv:HTMLDivElement = document.createElement('div');\n      buttonDiv.classList.add('buttondiv');\n      buttonDiv.appendChild(createEditButton(iD, 'project'));\n      buttonDiv.appendChild(createDeleteButton(iD, 'project'));\n      return buttonDiv;\n  }\n\n  const buildProjectMiddleDiv = (projectObject: Project) => {\n      const middleDiv:HTMLDivElement = document.createElement('div');\n      middleDiv.classList.add('middlediv');\n      const chechboxDiv:HTMLDivElement = document.createElement('div');\n      chechboxDiv.classList.add('checkboxdiv');\n      chechboxDiv.appendChild(addCheckBox());\n      middleDiv.appendChild(chechboxDiv);\n      middleDiv.appendChild(buildContent('project', projectObject as unknown as generalObject, ['name', 'date', 'priority']));\n      middleDiv.appendChild(createProjectButtons(projectObject.iD.toString()));\n      return middleDiv;\n  }\n\n  const buildProjectToDoDiv = (projectObject: Project) => {\n      const projectToDoDiv = document.createElement('div');\n      projectToDoDiv.classList.add('projecttododiv');\n      projectToDoDiv.setAttribute('objectid', projectObject.iD.toString());\n      projectToDoDiv.style.display = 'none';\n      return projectToDoDiv;\n  }\n\n  const pageBuilder = (contentType: string, linkName:string) => {\n      clearContent();\n      content.appendChild(buildHeader());\n      const div:HTMLDivElement = document.createElement('div');\n      div.setAttribute('id', `${contentType}div`);\n      content.appendChild(div);\n      content.appendChild(formBuilder.buildForm());\n      addNewButtonEventListener();\n      document.getElementById(`${linkName}link`).classList.add('active');\n      addNavListeners();\n  }\n\n  // Main functions to be returned\n  const homePageBuilder = () => {\n    pageBuilder('todo', 'home');\n    displayToDos(toDoManipulator.getToDoAry());\n  }\n\n  const donePageBuilder = () => {\n    pageBuilder('done', 'done');\n    displayDoneToDos(toDoManipulator.getDoneAry());\n  }\n\n  const projectPageBuilder = () => {\n    clearContent();\n    const projectDiv:HTMLDivElement = document.createElement('div');\n    projectDiv.setAttribute('id', 'projectdiv');\n    content.appendChild(buildHeader());\n    if (toDoManipulator.getProjectAry().length > 0) {\n      content.appendChild(buildNewProjectButtonDiv());\n    }\n    content.appendChild(projectDiv);\n    content.appendChild(formBuilder.buildForm());\n    content.appendChild(formBuilder.buildNewProjectForm());\n    addNewButtonEventListener();\n    if (toDoManipulator.getProjectAry().length > 0) {\n      const addNewProjectButton = document.getElementById('newprojectbutton');\n      const projectFormDiv:HTMLElement = document.getElementById('projectformdiv');\n      addNewProjectButton.addEventListener(('click'), () => {\n        projectFormDiv.style.display = 'block';\n        content.classList.add('blurred');\n    });\n  }\n    document.getElementById('projectslink').classList.add('active');\n    addNavListeners();\n    displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  const toDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement, done = false) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    done ? toDo.classList.add('donetodo') : toDo.classList.add('todo');\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    const middleDiv:HTMLDivElement = document.createElement('div');\n    middleDiv.classList.add('middlediv');\n    const chechboxDiv:HTMLDivElement = document.createElement('div');\n    chechboxDiv.classList.add('checkboxdiv');\n    chechboxDiv.appendChild(addCheckBox());\n    middleDiv.appendChild(chechboxDiv);\n    middleDiv.appendChild(buildContent('todo', toDoObject as unknown as generalObject, ['heading', 'text', 'date', 'priority']));\n    middleDiv.appendChild(createToDoButtons(toDoID));\n    toDo.appendChild(middleDiv);\n    toDoDiv.appendChild(toDo);\n  }\n\n  const projectToDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    toDo.classList.add('projecttodo');\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    toDo.appendChild(buildContent('todo', toDoObject as unknown as generalObject, ['heading', 'text', 'date', 'priority']));\n    toDoDiv.appendChild(toDo);\n  }\n\n  const projectBuilder = (projectObject: Project, projectDiv:HTMLElement) => {\n    const projectContainer:HTMLDivElement = document.createElement('div');\n    projectContainer.classList.add('projectcontainer');\n    const project:HTMLDivElement = document.createElement('div');\n    project.classList.add('project');\n    project.setAttribute('id', projectObject.iD.toString());\n    project.appendChild(addLabelStripe(projectObject.priority));\n    project.appendChild(buildProjectMiddleDiv(projectObject));\n    project.appendChild(createExpandButton(projectObject.iD));\n    projectContainer.appendChild(project);\n    projectContainer.appendChild(buildProjectToDoDiv(projectObject));\n    projectDiv.appendChild(projectContainer);\n  }\n\n  const displayToDos = ( toDoAry:ToDo[] ) => {\n    const toDoDiv:HTMLElement = (document.getElementById('tododiv') || document.createElement('tododiv'));\n    clearToDoDiv();\n    if (toDoAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew');\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLElement = document.getElementById('formdiv');\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      })\n      toDoDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:ToDo[] = toDoAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, toDoDiv));\n  }\n\n  const displayDoneToDos = (doneAry:ToDo[] ) => {\n    clearDoneDiv()\n    const doneDiv = document.getElementById('donediv');\n    if (doneAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos marked as done.';\n      doneDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:ToDo[] = doneAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, doneDiv, true));\n  }\n\n  const displayProjects = (projectAry:Project[]) => {\n    clearProjectDiv();\n    const projectDiv = document.getElementById('projectdiv');\n    if (projectAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No Projects yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew');\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLElement = document.getElementById('projectformdiv');\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      });\n      projectDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:Project[] = projectAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((project:Project) => projectBuilder(project, projectDiv));\n  }\n\n  return { homePageBuilder, donePageBuilder, projectPageBuilder, displayToDos, displayDoneToDos, displayProjects, createToDosDiv };\n})();\n\nexport default domManipulator;","import domManipulator from './dom-manipulator';\nimport toDoManipulator from './todomanipulator';\n\ntoDoManipulator.loadArys();\ndomManipulator.homePageBuilder();\n"],"names":["date","getDate","getMonth","getFullYear","toDoDate","currentDate","Date","timeDifference","getTime","Math","floor","day","String","padStart","month","heading","text","priority","id","projectiDs","done","doneStatus","iD","markAsDone","getDoneStatus","name","toDos","toDosAry","addToDo","toDo","push","clearToDos","getToDos","setToDos","iDsAry","JSON","parse","localStorage","getItem","generateID","randID","random","includes","setItem","stringify","freeID","index","indexOf","splice","dateString","toDoAry","doneAry","projectAry","createToDo","newToDo","modifyToDo","newHeading","newText","newDate","newPriority","find","x","deleteToDo","length","forEach","projectiD","project","findIndex","getToDoAry","loadArys","todo","getDoneAry","moveToDone","doneToDo","console","log","findTodDo","createProject","newProject","modifyProject","newName","newToDos","getProjectAry","deleteProject","findProject","updateProjectAry","document","getElementById","value","querySelector","e","target","projectToDoFields","querySelectorAll","projectToDoIdsAry","Array","from","map","field","Number","preventDefault","targetParent","toDoData","reset","style","display","toDoDiv","parentNode","projectData","projectToDoIds","toDoId","projectDiv","toDoPriorities","projectPriorities","content","createCloseButton","labelCreator","radioCreator","createSubmitButton","inputCreator","editInputCreator","createElement","formDiv","closeButtonDiv","setAttribute","closeButton","innerHTML","addEventListener","classList","remove","appendChild","forElement","labelText","label","textContent","radioName","radioOptions","checkedValue","inputDiv","add","radioDiv","option","radioButton","radioLabel","toUpperCase","substring","submitButton","fieldType","fieldName","required","fieldValue","inputFieldCreator","buildForm","formHeading","form","buildToDoEditForm","toDoContent","getAttribute","headerContent","dateContent","priorityContent","cancelButton","acceptButton","buildProjectEditForm","projectContent","nameContent","buildNewProjectForm","buildAddProjectToDoForm","toDoIdAry","a","toDoCheckbox","filter","toDoLabel","toDoHeading","projectContainer","toString","projectToDoDiv","newToDosDiv","noToDos","domManipulator","createToDosDiv","toDosDiv","div","noToDosDiv","noToDosButton","createNoToDosButton","projectToDoBuilder","createEditButton","type","editButton","createDeleteButton","deleteButton","confirm","displayProjects","displayToDos","addCheckBox","checkbox","toDoDiviD","addNewButtonEventListener","addNewButton","addLabelStripe","labelStripe","backgroundColor","addNavListeners","element","homePageBuilder","donePageBuilder","projectPageBuilder","buildContent","object","propAry","prop","toDoDateDiv","toDoDateIcon","dayDifference","abs","createDateString","buildElementDate","priorityDiv","priorityCircle","createPriorityCircle","priorityText","createPriorityDiv","propName","toDoElement","buildElement","buildLink","linkName","linkIcon","link","capitalizedLinkName","charAt","slice","clearContent","buildHeader","navigationDiv","header","logodiv","checkmark","logo","buildLogo","pageBuilder","contentType","toDoBuilder","toDoObject","toDoID","middleDiv","buttonDiv","chechboxDiv","projectBuilder","projectObject","expandButton","buildProjectMiddleDiv","toggle","buildProjectToDoDiv","actionDiv","sort","b","displayDoneToDos","doneDiv","newProjectButtonDiv","newProjectButton","buildNewProjectButtonDiv","addNewProjectButton"],"sourceRoot":""}