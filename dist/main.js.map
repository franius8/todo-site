{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-site/./src/dateconverter.ts","webpack://todo-site/./src/todo.ts","webpack://todo-site/./src/project.ts","webpack://todo-site/./src/idgenerator.ts","webpack://todo-site/./src/datefixer.ts","webpack://todo-site/./src/todomanipulator.ts","webpack://todo-site/./src/formgetter.ts","webpack://todo-site/./src/formhandler.ts","webpack://todo-site/./src/formbuilder.ts","webpack://todo-site/./src/dom-manipulator.ts","webpack://todo-site/./src/index.ts"],"sourcesContent":["const dateConverter = (() => {\n  const convertToString = (date: Date) => {\n    let result = '';\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  result = day + '.' + month + '.' + year;\n  return result;\n  }\n  const convertToInputFormat = (date: Date) => {\n    let result = '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    result = year + '-' + month + '-' + day;\n    return result;\n  }\n\n  const getDayDifference = (date: Date) => {\n    const toDoDate = date;\n    const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n    const timeDifference = toDoDate.getTime() - currentDate.getTime();\n    const dayDifference = Math.floor(timeDifference / (1000 * 3600 * 24));\n    return dayDifference;\n  }\n  return { convertToString, getDayDifference, convertToInputFormat };\n})();\n\nexport default dateConverter;\n","const toDo = (heading: string, text: string, date: Date, priority: string, id:number, projectiDs:number[], done = false) => {\n  let doneStatus = done;\n  const markAsDone = () => doneStatus = !doneStatus;\n  const getDoneStatus = () => doneStatus;\n  return { heading:heading, text:text, date:date, priority:priority, iD:id, projectiDs:projectiDs, markAsDone, getDoneStatus };\n};\n\nexport default toDo;","import toDoManipulator from \"./todomanipulator\";\n\nconst Project = (iD: number, name:string, toDos:ToDo[], date: Date, priority: string) => {\n  const addToDo = (toDo:ToDo) => {\n    toDos.push(toDo);\n    toDoManipulator.updateProjectAry();\n  };\n  const clearToDos = () => {\n    toDos = [];\n    toDoManipulator.updateProjectAry();\n  };\n  const getToDos = () => toDos;\n  const setToDos = (newToDos:ToDo[]) => {\n    toDos = newToDos;\n    toDoManipulator.updateProjectAry();\n  };\n  return { iD:iD, name:name, date:date, priority:priority, toDosAry:toDos, addToDo, clearToDos, getToDos, setToDos };\n}\n\nexport default Project;","const idGenerator = (() => {\n  const iDsAry:number[] = JSON.parse(localStorage.getItem(\"idsary\") || \"[]\");\n  const generateID = () => {\n    for (;;) {\n      const randID:number = Math.floor(Math.random() * (10000));\n      if (!iDsAry.includes(randID)) {\n        iDsAry.push(randID);\n        localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n        return randID;\n      }\n    }\n  }\n  const freeID = (id:number) => {\n    const index = iDsAry.indexOf(id);\n    iDsAry.splice(index, 1);\n    localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n  }\n  return { generateID, freeID }\n})();\n\nexport default idGenerator;\n","const dateFixer = (() => {\n  const fixDates = (dateString: string) => {\n    return new Date (dateString);\n  }\n  return { fixDates };\n})();\n\nexport default dateFixer;","import toDo from \"./todo\";\nimport Project from \"./project\";\nimport idGenerator from \"./idgenerator\";\nimport dateFixer from \"./datefixer\";\n\nconst toDoManipulator = (() => {\n\n  const toDoAry:ToDo[] = [];\n  const doneAry:ToDo[] = [];\n  const projectAry:Project[] = [];\n\n  const loadToDoAry = () => {\n    const rawToDoAry = JSON.parse(localStorage.getItem(\"todoary\") || \"[]\");\n    rawToDoAry.forEach((todo: ToDo) => {\n    todo.date = dateFixer.fixDates(todo.date);\n    toDoAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs));\n    });\n  }\n\n  const loadDoneAry = () => {\n    const rawDoneAry = JSON.parse(localStorage.getItem(\"doneary\") || \"[]\");\n    rawDoneAry.forEach((todo: ToDo) => {\n      todo.date = dateFixer.fixDates(todo.date);\n      doneAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs, true));\n      });\n  }\n\n  const loadProjectAry = () => {\n    const rawProjectAry = JSON.parse(localStorage.getItem(\"projectary\") || \"[]\");\n    rawProjectAry.forEach((project: RawProject) => {\n      project.date = dateFixer.fixDates(project.date);\n      project.toDosAry.forEach((todo: ToDo) => {\n        todo.date = dateFixer.fixDates(todo.date);\n        return todo;\n        });\n      projectAry.push(Project(project.iD, project.name, project.toDosAry, project.date, project.priority));\n      });\n  }\n\n  const loadArys = () => {\n    loadToDoAry();\n    loadDoneAry();\n    loadProjectAry();\n  }\n\n  const createToDo = (heading: string, text: string, date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newToDo:ToDo = toDo(heading, text, date, priority, iD, []);\n    toDoAry.push(newToDo);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    return newToDo;\n  }\n\n  const modifyToDo = (id:number, newHeading: string = null, newText: string = null, newDate: Date = null, newPriority: string = null) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (newHeading !== null) {\n      toDo.heading = newHeading;\n    }\n    if (newText !== null) {\n      toDo.text = newText;\n    }\n    if (newDate !== null) {\n      toDo.date = newDate;\n    }\n    if (newPriority !== null) {\n      toDo.priority = newPriority;\n    }\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n  }\n\n  const modifyDone = (id:number, newHeading: string = null, newText: string = null, newDate: Date = null, newPriority: string = null) => {\n    const toDo:ToDo = doneAry.find(x => x.iD === id);\n    if (newHeading !== null) {\n      toDo.heading = newHeading;\n    }\n    if (newText !== null) {\n      toDo.text = newText;\n    }\n    if (newDate !== null) {\n      toDo.date = newDate;\n    }\n    if (newPriority !== null) {\n      toDo.priority = newPriority;\n    }\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n  }\n\n  const deleteToDo = ( id:number ) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (toDo.projectiDs.length > 0) {\n      toDo.projectiDs.forEach((projectiD) => {\n        const project:Project = projectAry.find(x => x.iD === projectiD);\n        const index = project.getToDos().indexOf(toDo);\n        project.getToDos().splice(index, 1);\n      });\n    }\n\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    toDoAry.splice(index, 1);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    idGenerator.freeID(id);\n  }\n\n  const deleteDone = ( id:number ) => {\n    const index:number = doneAry.findIndex(x => x.iD === id);\n    doneAry.splice(index, 1);\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findTodDo = (id:number) => {\n    return toDoAry.find(x => x.iD === id);\n  }\n\n  const moveToDone = (id:number) => {\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    const doneToDo = toDoAry.splice(index, 1)[0];\n    console.log(doneToDo);\n    doneToDo.markAsDone();\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    doneAry.push(doneToDo);\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n  }\n\n  const revertDone = (id:number) => {\n    const index:number = doneAry.findIndex(x => x.iD === id);\n    const undoneToDo = doneAry.splice(index, 1);\n    undoneToDo[0].markAsDone();\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n    toDoAry.push(undoneToDo[0]);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n  }\n\n  const findDoneToDo = (id:number) => {\n    return doneAry.find(x => x.iD === id);\n  }\n\n  const createProject = (name:string, toDos:ToDo[], date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newProject:Project = Project(iD, name, toDos, date, priority);\n    projectAry.push(newProject);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    return newProject;\n  }\n\n  const modifyProject = (id:number, newName: string = null, newToDos:ToDo[] = null, newDate: Date = null, newPriority: string = null) => {\n    const project:Project = projectAry.find(x => x.iD === id);\n    if (newName !== null) {\n      project.name = newName;\n    }\n    if (newToDos !== null) {\n      project.setToDos(newToDos);\n    }\n    if (newDate !== null) {\n      project.date = newDate;\n    }\n    if (newPriority !== null) {\n      project.priority = newPriority;\n    }\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n  }\n\n  const deleteProject = (id:number) => {\n    const index:number = projectAry.findIndex(x => x.iD === id);\n    projectAry.splice(index, 1);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findProject = (id:number) => {\n    return projectAry.find(x => x.iD === id);\n  }\n\n  const deleteItem = (id:number) => {\n    if (toDoAry.find(x => x.iD === id)) {\n      deleteToDo(id);\n    } else if (doneAry.find(x => x.iD === id)) {\n      deleteDone(id);\n    } else if (projectAry.find(x => x.iD === id)) {\n      deleteProject(id);\n    }\n  }\n\n  const getToDoAry = () => toDoAry;\n  const getDoneAry = () => doneAry;\n  const getProjectAry = () => projectAry;\n  const updateProjectAry = () => {\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n  }\n\n  return { \n    createToDo, \n    modifyToDo,\n    modifyDone,\n    deleteToDo, \n    getToDoAry, \n    loadArys, \n    getDoneAry, \n    moveToDone,\n    revertDone,\n    findTodDo,\n    findDoneToDo,\n    createProject,\n    modifyProject, \n    getProjectAry,\n    deleteProject,\n    findProject,\n    updateProjectAry,\n    deleteItem\n  }\n})();\n\nexport default toDoManipulator;","const formGetter = (() => {\n\n  const getFormData = () => {\n    const toDoTitle:string = (<HTMLInputElement>(document.getElementById('todotitle'))).value;\n    const toDoContent:string = (<HTMLInputElement>(document.getElementById('todocontent'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(document.getElementById('tododate'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"todopriority\"]:checked'))).value;\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority]\n    return toDoData;\n  }\n  const getEditFormData = (e:SubmitEvent) => {\n    const target = e.target as HTMLFormElement;\n    const toDoTitle:string = (<HTMLInputElement>(target.querySelector('#todotitleedit'))).value;\n    const toDoContent:string = (<HTMLInputElement>(target.querySelector('#todocontentedit'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(target.querySelector('#tododateedit'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(target.querySelector('input[name=\"todopriorityedit\"]:checked'))).value;\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority];\n    return toDoData;\n  }\n  const getProjectFormData = () => {\n    const projectName:string = (<HTMLInputElement>(document.getElementById('projectname'))).value;\n    const projectDate:Date = new Date((<HTMLInputElement>(document.getElementById('projectdate'))).value);\n    const projectPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"projectpriority\"]:checked'))).value;\n    const projectData:[string, Date, string] = [projectName, projectDate, projectPriority];\n    return projectData;\n  }\n  const getProjectToDoData = (target:HTMLElement) => {\n    const projectToDoFields = target.querySelectorAll('input[name=\"projectcheckbox\"]:checked');\n    const projectToDoIdsAry:number[] = Array.from(projectToDoFields).map((field:HTMLInputElement) => Number(field.value));\n    console.log(projectToDoIdsAry);\n    return projectToDoIdsAry;\n  }\n  const getProjectEditFormData = (e:SubmitEvent) => {\n    const target = e.target as HTMLFormElement;\n    const projectName:string = (<HTMLInputElement>(target.querySelector('#projectnameedit'))).value;\n    const projectDate:Date = new Date((<HTMLInputElement>(target.querySelector('#projectdateedit'))).value);\n    const projectPriority:string = (<HTMLInputElement>(target.querySelector('input[name=\"projectpriorityedit\"]:checked'))).value;\n    const projectData:[string, Date, string] = [projectName, projectDate, projectPriority];\n    return projectData;\n  }\n  return { \n    getFormData, \n    getEditFormData, \n    getProjectFormData, \n    getProjectToDoData,\n    getProjectEditFormData \n  }\n})();\n\nexport default formGetter;","import formGetter from \"./formgetter\";\nimport domManipulator from \"./dom-manipulator\";\nimport toDoManipulator from \"./todomanipulator\";\n\nconst formHandler =(() => {\n  const handleFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const toDoData = formGetter.getFormData();\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createToDo(toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n  const handleToDoEditFormSubmission = (e:SubmitEvent, type: string) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const toDoDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const toDoData = formGetter.getEditFormData(e);\n    target.reset();\n    if (type === 'todo') {\n      toDoManipulator.modifyToDo(Number(toDoDiv.id), toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n      domManipulator.displayToDos(toDoManipulator.getToDoAry());\n    } else {\n      toDoManipulator.modifyDone(Number(toDoDiv.id), toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n      domManipulator.displayDoneToDos(toDoManipulator.getDoneAry());\n    }  \n  }\n  const handleNewProjectFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const projectData = formGetter.getProjectFormData();\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createProject(projectData[0], [], projectData[1], projectData[2]);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n  const handleAddProjectToDosFormSubmission = (e:SubmitEvent, iD:number) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const projectToDoIds = formGetter.getProjectToDoData(target);\n    target.reset()\n    targetParent.remove();\n    const project:Project = toDoManipulator.findProject(iD);\n    project.toDosAry = [];\n    projectToDoIds.forEach((toDoId) => {\n      project.addToDo(toDoManipulator.findTodDo(toDoId));\n  });\n  toDoManipulator.updateProjectAry();\n  }\n  \n  const handleProjectEditFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const projectDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const projectData = formGetter.getProjectEditFormData(e);\n    target.reset();\n    toDoManipulator.modifyProject(Number(projectDiv.id), projectData[0], null, projectData[1], projectData[2]);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  return {\n    handleFormSubmission, \n    handleToDoEditFormSubmission, \n    handleNewProjectFormSubmission, \n    handleAddProjectToDosFormSubmission,\n    handleProjectEditFormSubmission\n  };\n})();\n\nexport default formHandler","import toDoManipulator from \"./todomanipulator\";\nimport formHandler from \"./formhandler\";\nimport dateConverter from \"./dateconverter\";\nimport domManipulator from \"./dom-manipulator\";\n\nconst formBuilder = (() => {\n  const toDoPriorities:string[] = ['Low', 'Standard', 'High'];\n  const projectPriorities:string[] = ['Normal', 'Urgent'];\n\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  const createCloseButton = (formDiv:HTMLDivElement) => {\n    const closeButtonDiv:HTMLDivElement = document.createElement('div');\n    closeButtonDiv.setAttribute('id', 'closebuttondiv');\n    const closeButton:HTMLButtonElement = document.createElement('button');\n    closeButton.setAttribute('id', 'closebutton');\n    closeButton.innerHTML = '<span class=\"material-symbols-outlined\">close</span>';\n    closeButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'none';\n      content.classList.remove('blurred');\n    });\n    closeButtonDiv.appendChild(closeButton);\n    return closeButtonDiv;\n  }\n\n  const labelCreator = (forElement: string, labelText: string) => {\n    const label:HTMLLabelElement = document.createElement('label');\n    label.setAttribute('for', forElement);\n    label.textContent = labelText;\n    return label;\n  }\n\n  const inputFieldCreator = (fieldType: string, fieldName: string, fieldValue = 'empty', required:boolean) => {\n    const field:HTMLInputElement = document.createElement('input');\n    field.setAttribute('type', fieldType);\n    field.setAttribute('name', fieldName);\n    field.setAttribute('id', fieldName);\n    if (required === true) {\n      field.setAttribute('required', 'true');\n    }\n    if (fieldValue !== 'empty') {\n      field.setAttribute('value', fieldValue);\n    }\n    return field;\n  }\n\n  const radioCreator = (radioName: string, radioOptions: string[], checkedValue:string = null) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('radiocontainer', 'Priority:'));\n    const radioDiv:HTMLDivElement = document.createElement('div');\n    radioDiv.classList.add('radiocontainer');\n    radioOptions.forEach((option) => {\n      const radioButton:HTMLInputElement = document.createElement('input');\n      radioButton.setAttribute('type', 'radio');\n      radioButton.setAttribute('name', radioName);\n      radioButton.setAttribute('value', option);\n      radioButton.setAttribute('id', option);\n      if (option === checkedValue) {\n        radioButton.setAttribute('checked', 'checked');\n      }\n      const radioLabel:HTMLLabelElement = document.createElement('label');\n      radioLabel.setAttribute('for', option);\n      radioLabel.textContent = option[0].toUpperCase() + option.substring(1);\n      radioDiv.appendChild(radioButton);\n      radioDiv.appendChild(radioLabel);\n    })\n    inputDiv.appendChild(radioDiv);\n    return inputDiv\n  }\n\n  const prepareContent = (contentDiv: HTMLElement) => {\n    contentDiv.innerHTML = '';\n    contentDiv.classList.add('duringedit');\n    contentDiv.classList.remove('todocontent');\n  }\n\n  const sideButtonCreator = (targetParent: HTMLElement, form: HTMLFormElement, type: string) => {\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancelbutton');\n    cancelButton.innerHTML = '<span class=\"material-symbols-outlined\">undo</span>';\n    cancelButton.addEventListener(('click'), () => {\n      if (type === 'project') {\n        domManipulator.displayProjects(toDoManipulator.getProjectAry());\n      } else if (type === 'todo') {\n      domManipulator.displayToDos(toDoManipulator.getToDoAry());\n      } else if (type === 'done') {\n        domManipulator.displayDoneToDos(toDoManipulator.getDoneAry());\n      }\n    });\n    const acceptButton = document.createElement('button');\n    acceptButton.classList.add('acceptbutton');\n    acceptButton.setAttribute('type', 'submit')\n    acceptButton.setAttribute('form', 'editform');\n    acceptButton.innerHTML = '<span class=\"material-symbols-outlined\">check</span>';\n    form.addEventListener(('submit'), (e) => {\n      if (type === 'todo') {\n        formHandler.handleToDoEditFormSubmission(e, 'todo');\n      } else if (type === 'project') {\n        formHandler.handleProjectEditFormSubmission(e);\n      } else if (type === 'done') {\n        formHandler.handleToDoEditFormSubmission(e, 'done');\n      }\n    })\n    targetParent.appendChild(cancelButton);\n    targetParent.appendChild(acceptButton);\n  }\n\n  const createSubmitButton = () => {\n    const submitButton:HTMLButtonElement = document.createElement('button');\n    submitButton.setAttribute('type', 'submit');\n    submitButton.setAttribute('id', 'todosubmit');\n    submitButton.textContent = 'Add';\n    return submitButton;\n  }\n\n  const inputCreator = (fieldType: string, fieldName: string, labelText: string, required = true) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator(fieldName, labelText));\n    inputDiv.appendChild(inputFieldCreator(fieldType, fieldName, 'empty', required));\n    return inputDiv;\n  }\n\n  const editInputCreator = (fieldType: string, fieldName: string, labelText: string, required = true, fieldValue: string) => {\n    const field:HTMLDivElement = inputCreator(fieldType, fieldName, labelText, required);\n    const inputField:HTMLInputElement = field.querySelector(`#${fieldName}`);\n    inputField.value = fieldValue;\n    return field;\n  }\n\n  const buildForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'formdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new ToDo';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'todotitle', 'Title:'));\n    form.appendChild(inputCreator('text', 'todocontent', 'Content (optional):', false))\n    form.appendChild(inputCreator('date', 'tododate', 'Due date:'));\n    form.appendChild(radioCreator('todopriority', toDoPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => { \n      formHandler.handleFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n\n  const buildToDoEditForm = (e:MouseEvent, type: string) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const toDoDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const toDoContent:HTMLElement = toDoDiv.querySelector('.todocontent');\n    const toDo:ToDo = (\n      toDoManipulator.findTodDo(Number(target.getAttribute('objectid'))) ||\n      toDoManipulator.findDoneToDo(Number(target.getAttribute('objectid')))\n      );\n    const { heading:headerContent, text:textContent, date:dateContent, priority:priorityContent} = toDo;\n    prepareContent(toDoContent);\n    const form = document.createElement('form');\n    form.classList.add('todocontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'todotitleedit', 'Title:', true, headerContent));\n    form.appendChild(editInputCreator('text', 'todocontentedit', 'Content (optional):', false, textContent));\n    form.appendChild(editInputCreator('date', 'tododateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('todopriorityedit', toDoPriorities, priorityContent));\n    toDoContent.appendChild(form);\n    targetParent.innerHTML = '';\n    type === 'done' ? sideButtonCreator(targetParent, form, 'done') : sideButtonCreator(targetParent, form, 'todo');\n  }\n\n  const buildProjectEditForm = (e:MouseEvent) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const projectDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const projectContent:HTMLElement = projectDiv.querySelector('.projectcontent');\n    const project:Project = toDoManipulator.findProject(Number(target.getAttribute('objectid')));\n    const { name:nameContent, date:dateContent, priority:priorityContent } = project;\n    prepareContent(projectContent);\n    const form = document.createElement('form');\n    form.classList.add('projectcontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'projectnameedit', 'Name:', true, nameContent));\n    form.appendChild(editInputCreator('date', 'projectdateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('projectpriorityedit', projectPriorities, priorityContent));\n    projectContent.appendChild(form);\n    targetParent.innerHTML = '';\n    sideButtonCreator(targetParent, form, 'project');\n  }\n\n  const buildNewProjectForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projectformdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new Project';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'projectname', 'Name:'));\n    form.appendChild(inputCreator('date', 'projectdate', 'Due date:'));\n    form.appendChild(radioCreator('projectpriority', projectPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleNewProjectFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n\n  const buildAddProjectToDoForm = (e:MouseEvent, iD:number, toDoDiv:HTMLDivElement) => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projecttodosformdiv');\n    formDiv.style.display = 'block';\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add new ToDos to Project';\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    if (toDoManipulator.getToDoAry().length > 0) {\n    const form:HTMLFormElement = document.createElement('form');\n    const project = toDoManipulator.findProject(iD);\n    const inputDiv = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('projectcheckboxdiv', 'Select ToDos:'))\n    const toDoIdAry = toDoManipulator.getToDoAry().map(a => a.iD);\n    const toDoFormDiv:HTMLDivElement = document.createElement('div');\n    toDoFormDiv.classList.add('projectcheckboxdiv');\n    toDoIdAry.forEach((iD:number) => {\n      const toDoCheckbox:HTMLInputElement = document.createElement('input');\n      toDoCheckbox.setAttribute('type', 'checkbox');\n      toDoCheckbox.setAttribute('id', `todocheckbox${iD}`);\n      toDoCheckbox.setAttribute('value', `${iD}`);\n      toDoCheckbox.setAttribute('name', 'projectcheckbox');\n      if (project.getToDos().filter(toDo => toDo.iD === iD).length > 0) {\n        toDoCheckbox.setAttribute('checked', 'true');\n      }\n      const toDoLabel:HTMLLabelElement = document.createElement('label');\n      toDoLabel.setAttribute('for', `todocheckbox${iD}`);\n      const toDoHeading = document.createElement('div');\n      toDoHeading.textContent = toDoManipulator.findTodDo(iD).heading;\n      const toDoDate = document.createElement('div');\n      toDoDate.classList.add('formtododate');\n      toDoDate.innerHTML = `<span class=\"material-symbols-outlined\">calendar_month</span> \n          ${dateConverter.convertToString(toDoManipulator.findTodDo(iD).date)}`\n      toDoLabel.appendChild(toDoHeading);\n      toDoLabel.appendChild(toDoDate);\n      toDoFormDiv.appendChild(toDoCheckbox);\n      toDoFormDiv.appendChild(toDoLabel);\n    });\n    inputDiv.appendChild(toDoFormDiv);\n    form.appendChild(inputDiv);\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleAddProjectToDosFormSubmission(e, iD);\n      content.classList.remove('blurred');\n      const projectToDoDiv = document.createElement('div');\n      projectToDoDiv.style.display = 'block';\n      projectToDoDiv.classList.add('projecttododiv');\n      projectToDoDiv.setAttribute('objectid', iD.toString());\n      const newToDosDiv = domManipulator.createToDosDiv(iD);\n      projectToDoDiv.appendChild(newToDosDiv);\n      toDoDiv.parentElement.replaceChild(projectToDoDiv, toDoDiv);\n    });\n  } else {\n    const noToDos:HTMLDivElement = document.createElement('div');\n    noToDos.textContent = 'There are no ToDos to add to this Project.';\n    formDiv.appendChild(noToDos);\n  }\n    return formDiv;\n  }\n\n  return { \n    buildForm, \n    buildToDoEditForm,\n    buildProjectEditForm,\n    buildNewProjectForm, \n    buildAddProjectToDoForm \n  };\n})()\n\nexport default formBuilder;","import dateConverter from './dateconverter';\nimport toDoManipulator from './todomanipulator';\nimport formBuilder from './formbuilder';\n\nconst domManipulator = (() => {\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  \n  // Subfunctions for helper functions\n  const getPriorityColor = (priority:string) => {\n    switch (priority) {\n      case 'High':\n        return 'red';\n      case 'Standard':\n        return 'orange';\n      case 'Low':\n        return 'green';\n      case 'Normal':\n        return 'skyblue';\n      case 'Urgent':\n        return 'crimson';\n     default:\n        return 'gray';\n    }\n  }\n  \n  const createDateString = (date:Date, toDoDateDiv: HTMLElement) => {\n  const toDoDate:HTMLDivElement = document.createElement('div');\n    const dayDifference:number = dateConverter.getDayDifference(date);\n    if (dayDifference === 1) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' day left)';  \n    } else if (dayDifference >= 0) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' days left)';  \n    } else if (dayDifference === -1) {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' day ago)';\n    } else {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' days ago)';\n    }\n    return toDoDate;\n  }\n\n  const buildElementDate = (date: Date) => {\n    const toDoDateDiv:HTMLDivElement = document.createElement('div');\n    toDoDateDiv.classList.add('tododate');\n    const toDoDateIcon:HTMLDivElement = document.createElement('div');\n    toDoDateIcon.innerHTML = '<span class=\"material-symbols-outlined\">calendar_month</span>';\n    toDoDateDiv.appendChild(toDoDateIcon);\n    toDoDateDiv.appendChild(createDateString(date, toDoDateDiv));\n    return toDoDateDiv;\n  };\n\n  const createPriorityCircle = (priority: string) => {\n    const priorityCircle:HTMLDivElement = document.createElement('div');\n    priorityCircle.classList.add('prioritycircle');\n    priorityCircle.style.backgroundColor = getPriorityColor(priority);\n    return priorityCircle;\n  };\n  \n  const createPriorityDiv = (priority: string) => {\n    const priorityDiv:HTMLDivElement = document.createElement('div');\n    priorityDiv.classList.add('todopriority');\n    priorityDiv.appendChild(createPriorityCircle(priority));\n    const priorityText:HTMLDivElement = document.createElement('div');\n    priorityText.textContent = priority + ' priority';\n    priorityDiv.appendChild(priorityText);\n    return priorityDiv;\n  }\n\n  const createNoToDosButton = (iD: number, toDosDiv: HTMLDivElement, length: number) => {\n    const div = document.createElement('div');\n    div.classList.add('notodosdiv');\n    if (length === 0) {\n      const noToDosDiv:HTMLDivElement = document.createElement('div');\n      noToDosDiv.classList.add('notodos');\n      noToDosDiv.textContent = 'No ToDos for this project yet';\n      div.appendChild(noToDosDiv);\n    }\n    const noToDosButton:HTMLButtonElement = document.createElement('button');\n    noToDosButton.classList.add('addtodobutton');\n    noToDosButton.textContent = 'Add/Remove ToDos';\n    noToDosButton.addEventListener('click', (e) => {\n      content.appendChild(formBuilder.buildAddProjectToDoForm(e, iD, toDosDiv));\n      content.classList.add('blurred');\n    });\n    div.appendChild(noToDosButton);\n    return div\n  }\n\n  const createToDosDiv = (iD: number) => { \n    const toDosDiv:HTMLDivElement = document.createElement('div');\n    toDosDiv.classList.add('projecttodoscontainer');\n    const toDosAry = toDoManipulator.findProject(iD).getToDos();\n    console.log(toDosAry);\n    console.log(toDoManipulator.findProject(iD).toDosAry);\n      toDosDiv.appendChild(createNoToDosButton(iD, toDosDiv, toDosAry.length));\n      toDosAry.forEach((toDo) => {\n        projectToDoBuilder(toDo, toDosDiv);\n    });\n    return toDosDiv;\n  }\n\n  const createEditButton = (iD: string, type: string) => {\n    const editButton:HTMLButtonElement = document.createElement('button');\n      editButton.classList.add('editbutton');\n      editButton.setAttribute('objectid', iD);\n      editButton.innerHTML = '<span class=\"material-symbols-outlined\">edit</span>';\n      editButton.addEventListener(('click'), (e) => {\n        if (type === 'project') {\n          formBuilder.buildProjectEditForm(e);\n        } else if (type === 'todo') {\n          formBuilder.buildToDoEditForm(e, 'todo');\n        } else {\n          formBuilder.buildToDoEditForm(e, 'done');\n        }\n      });\n      return editButton;\n  }\n\n  const createDeleteButton = (iD: string, type: string) => {\n    const deleteButton:HTMLButtonElement = document.createElement('button');\n      deleteButton.classList.add('deletebutton');\n      deleteButton.setAttribute('objectid', iD);\n      deleteButton.innerHTML = '<span class=\"material-symbols-outlined\">delete</span>';\n      deleteButton.addEventListener(('click'), (e) => {\n        const target = (<HTMLElement>e.target);\n        const iD = Number(target.getAttribute('objectid'));\n        if (confirm('Are you sure you want to delete that?\\n(This is an irreversible operation)')) {\n          toDoManipulator.deleteItem(iD)\n          if (type === 'project') {\n           displayProjects(toDoManipulator.getProjectAry());\n          } else if (type === 'todo') {\n          displayToDos(toDoManipulator.getToDoAry());  \n        } else {\n          displayDoneToDos(toDoManipulator.getDoneAry());\n        }\n      }});\n      return deleteButton;\n  };\n  \n  // Helper functions that are not returned\n  const addRevert = () => {\n    const revert:HTMLDivElement = document.createElement('div');\n    revert.classList.add('checkbox');\n    revert.innerHTML = '&#8617';\n    revert.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const doneDiv = (<HTMLElement>targetParent.parentNode);\n      const doneDiviD = Number(doneDiv.id);\n      toDoManipulator.revertDone(doneDiviD);\n      displayDoneToDos(toDoManipulator.getDoneAry());\n    });\n    return revert;\n  }\n  \n  const addCheckBox = () => {\n    const checkbox:HTMLDivElement = document.createElement('div');\n    checkbox.classList.add('checkbox');\n    checkbox.innerHTML = '&#10003';\n    checkbox.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const toDoDiv = (<HTMLElement>targetParent.parentNode);\n      const toDoDiviD = Number(toDoDiv.id);\n      toDoManipulator.moveToDone(toDoDiviD);\n      displayToDos(toDoManipulator.getToDoAry());\n      });\n    return checkbox;\n  };\n\n  const addNewButtonEventListener = () => {\n    const addNewButton = document.getElementById('addnewbutton');\n    const formDiv:HTMLElement = document.getElementById('formdiv');\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n  }\n\n  const addLabelStripe = (priority: string) => {\n    const labelStripe:HTMLDivElement = document.createElement('div');\n    labelStripe.classList.add('labelstripe');\n    labelStripe.style.backgroundColor = getPriorityColor(priority);\n    return labelStripe;\n  };\n\n  const addNavListeners = () => {\n    const navItems = document.querySelectorAll('.navitem');\n    navItems.forEach((element) => {\n      element.addEventListener(('click'), (e:MouseEvent) => {\n        const iD = (<HTMLElement>(e.target)).id;\n        switch (iD) {\n          case 'homelink':\n            domManipulator.homePageBuilder();\n            break;\n          case 'donelink':\n            domManipulator.donePageBuilder();\n            break;\n          case 'projectslink':\n            domManipulator.projectPageBuilder();\n            break;\n        } \n      });\n    });\n  };\n\n  const buildElement = (type: string, object: object, propName: string) => {\n    const toDoElement:HTMLDivElement = document.createElement('div');\n    toDoElement.classList.add(`${type}${propName}`);\n    toDoElement.textContent = object[propName as keyof object];\n    return toDoElement;\n  };\n\n  const buildContent = (type: string, object: generalObject, propAry: string[]) => {\n    const content:HTMLDivElement = document.createElement('div');\n    content.classList.add(`${type}content`);\n    propAry.forEach((prop) => {\n      if (prop === 'date') {\n        content.appendChild(buildElementDate(object.date as Date))\n      } else if (prop === 'priority') {\n        content.appendChild(createPriorityDiv(object.priority as string))\n      } else {\n        content.appendChild(buildElement(type, object, prop));\n      }\n    });\n    return content;\n  } \n\n  const buildLogo = () => {\n    const logodiv:HTMLDivElement = document.createElement('div');\n    logodiv.setAttribute('id', 'logodiv');\n    const checkmark:HTMLDivElement = document.createElement('div');\n    checkmark.setAttribute('id', 'checkmark');\n    checkmark.innerHTML = '&#10003';\n    const logo:HTMLDivElement = document.createElement('div');\n    logo.setAttribute('id', 'logo');\n    logo.textContent = 'To Do';\n    logodiv.appendChild(checkmark);\n    logodiv.appendChild(logo);\n    return logodiv;\n  }\n\n  const buildLink = (linkName: string, linkIcon: string) => {\n    const link:HTMLDivElement = document.createElement('div');\n    link.classList.add('navitem');\n    link.setAttribute('id', `${linkName}link`);\n    const capitalizedLinkName = linkName.charAt(0).toUpperCase() + linkName.slice(1); \n    link.innerHTML = `<span class=\"material-symbols-outlined\">${linkIcon}</span> ${capitalizedLinkName}`;\n    return link\n  }\n  \n  const buildNavigationDiv = () => {\n    const navigationDiv:HTMLDivElement = document.createElement('div');\n    navigationDiv.setAttribute('id', 'navigationdiv');\n    navigationDiv.appendChild(buildLink('home', 'house'));\n    navigationDiv.appendChild(buildLink('done', 'done'));\n    navigationDiv.appendChild(buildLink('projects', 'assignment'));\n    return navigationDiv;\n  }\n\n  const clearContent = () => {\n    content.textContent = '';\n  }\n  \n  const clearToDoDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('tododiv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearDoneDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('donediv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearProjectDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('projectdiv');\n    toDoDiv.textContent = '';\n  }\n\n  const createButtons = (iD: string, type: string) => {\n    const buttons:HTMLDivElement = document.createElement('div');\n    buttons.classList.add('buttondiv');\n    buttons.appendChild(createEditButton(iD, type));\n    buttons.appendChild(createDeleteButton(iD, type));\n    return buttons;\n  }\n\n  const createExpandButton = (iD:number) => {\n      const expandButton:HTMLDivElement = document.createElement('div');\n      expandButton.classList.add('expandbutton');\n      expandButton.setAttribute('objectid', iD.toString());\n      expandButton.innerHTML = '<span class=\"material-symbols-outlined\">expand_more</span>';\n      expandButton.addEventListener(('click'), () => {\n        const projectDiv = document.getElementById(iD.toString());\n        const toDosDiv = (<HTMLElement>(projectDiv.nextSibling));\n        toDosDiv.textContent = '';\n        toDosDiv.appendChild(createToDosDiv(iD));\n        if (toDosDiv.style.display === 'none') {\n          toDosDiv.textContent = '';\n          toDosDiv.appendChild(createToDosDiv(iD));\n          toDosDiv.style.display = 'block'\n        } else {\n          toDosDiv.style.display = 'none';\n        } \n        projectDiv.classList.toggle('expanded');\n\n      });\n      return expandButton;\n  }\n\n  const buildAddNewButton = () => {\n      const addNewButton:HTMLButtonElement = document.createElement('button');\n      addNewButton.setAttribute('id', 'addnewbutton');\n      addNewButton.textContent = 'Add ToDo';\n      return addNewButton;\n  }\n\n  const buildHeader = () => {\n      const header:HTMLElement = document.createElement('header');\n      header.setAttribute('id', 'header');\n      header.appendChild(buildLogo());\n      header.appendChild(buildNavigationDiv());\n      header.appendChild(buildAddNewButton());\n      return header\n  }\n\n  const buildNewProjectButtonDiv = () => {\n      const newProjectButtonDiv:HTMLDivElement = document.createElement('div');\n      newProjectButtonDiv.setAttribute('id', 'newprojectbuttondiv');\n      const newProjectButton:HTMLButtonElement = document.createElement('button');\n      newProjectButton.setAttribute('id', 'newprojectbutton');\n      newProjectButton.textContent = 'Add a new project';\n      newProjectButtonDiv.appendChild(newProjectButton);\n      return newProjectButtonDiv;\n  }\n\n  const buildProjectMiddleDiv = (projectObject: Project) => {\n      const middleDiv:HTMLDivElement = document.createElement('div');\n      middleDiv.classList.add('middlediv');\n      const chechboxDiv:HTMLDivElement = document.createElement('div');\n      chechboxDiv.classList.add('checkboxdiv');\n      chechboxDiv.appendChild(addCheckBox());\n      middleDiv.appendChild(chechboxDiv);\n      middleDiv.appendChild(buildContent('project', projectObject as unknown as generalObject, ['name', 'date', 'priority']));\n      middleDiv.appendChild(createButtons(projectObject.iD.toString(), 'project'));\n      return middleDiv;\n  }\n\n  const buildProjectToDoDiv = (projectObject: Project) => {\n      const projectToDoDiv = document.createElement('div');\n      projectToDoDiv.classList.add('projecttododiv');\n      projectToDoDiv.setAttribute('objectid', projectObject.iD.toString());\n      projectToDoDiv.style.display = 'none';\n      return projectToDoDiv;\n  }\n\n  const pageBuilder = (contentType: string, linkName:string) => {\n      clearContent();\n      content.appendChild(buildHeader());\n      const div:HTMLDivElement = document.createElement('div');\n      div.setAttribute('id', `${contentType}div`);\n      content.appendChild(div);\n      content.appendChild(formBuilder.buildForm());\n      addNewButtonEventListener();\n      document.getElementById(`${linkName}link`).classList.add('active');\n      addNavListeners();\n  }\n\n  // Main functions to be returned\n  const homePageBuilder = () => {\n    pageBuilder('todo', 'home');\n    displayToDos(toDoManipulator.getToDoAry());\n  }\n\n  const donePageBuilder = () => {\n    pageBuilder('done', 'done');\n    displayDoneToDos(toDoManipulator.getDoneAry());\n  }\n\n  const projectPageBuilder = () => {\n    clearContent();\n    const projectDiv:HTMLDivElement = document.createElement('div');\n    projectDiv.setAttribute('id', 'projectdiv');\n    content.appendChild(buildHeader());\n    if (toDoManipulator.getProjectAry().length > 0) {\n      content.appendChild(buildNewProjectButtonDiv());\n    }\n    content.appendChild(projectDiv);\n    content.appendChild(formBuilder.buildForm());\n    content.appendChild(formBuilder.buildNewProjectForm());\n    addNewButtonEventListener();\n    if (toDoManipulator.getProjectAry().length > 0) {\n      const addNewProjectButton = document.getElementById('newprojectbutton');\n      const projectFormDiv:HTMLElement = document.getElementById('projectformdiv');\n      addNewProjectButton.addEventListener(('click'), () => {\n        projectFormDiv.style.display = 'block';\n        content.classList.add('blurred');\n    });\n  }\n    document.getElementById('projectslink').classList.add('active');\n    addNavListeners();\n    displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  const toDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement, done = false) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    done ? toDo.classList.add('donetodo') : toDo.classList.add('todo');\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    const middleDiv:HTMLDivElement = document.createElement('div');\n    middleDiv.classList.add('middlediv');\n    const chechboxDiv:HTMLDivElement = document.createElement('div');\n    chechboxDiv.classList.add('checkboxdiv');\n    done ? chechboxDiv.appendChild(addRevert()) : chechboxDiv.appendChild(addCheckBox());\n    middleDiv.appendChild(chechboxDiv);\n    middleDiv.appendChild(buildContent('todo', toDoObject as unknown as generalObject, ['heading', 'text', 'date', 'priority']));\n    done ? middleDiv.appendChild(createButtons(toDoID, 'done')) : middleDiv.appendChild(createButtons(toDoID, 'todo'));\n    toDo.appendChild(middleDiv);\n    toDoDiv.appendChild(toDo);\n  }\n\n  const projectToDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    toDo.classList.add('projecttodo');\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    toDo.appendChild(buildContent('todo', toDoObject as unknown as generalObject, ['heading', 'text', 'date', 'priority']));\n    toDoDiv.appendChild(toDo);\n  }\n\n  const projectBuilder = (projectObject: Project, projectDiv:HTMLElement) => {\n    const projectContainer:HTMLDivElement = document.createElement('div');\n    projectContainer.classList.add('projectcontainer');\n    const project:HTMLDivElement = document.createElement('div');\n    project.classList.add('project');\n    project.setAttribute('id', projectObject.iD.toString());\n    project.appendChild(addLabelStripe(projectObject.priority));\n    project.appendChild(buildProjectMiddleDiv(projectObject));\n    project.appendChild(createExpandButton(projectObject.iD));\n    projectContainer.appendChild(project);\n    projectContainer.appendChild(buildProjectToDoDiv(projectObject));\n    projectDiv.appendChild(projectContainer);\n  }\n\n  const displayToDos = ( toDoAry:ToDo[] ) => {\n    const toDoDiv:HTMLElement = (document.getElementById('tododiv') || document.createElement('tododiv'));\n    clearToDoDiv();\n    if (toDoAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew');\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLElement = document.getElementById('formdiv');\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      })\n      toDoDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:ToDo[] = toDoAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, toDoDiv));\n  }\n\n  const displayDoneToDos = (doneAry:ToDo[] ) => {\n    clearDoneDiv()\n    const doneDiv = document.getElementById('donediv');\n    if (doneAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos marked as done.';\n      doneDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:ToDo[] = doneAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, doneDiv, true));\n  }\n\n  const displayProjects = (projectAry:Project[]) => {\n    clearProjectDiv();\n    const projectDiv = document.getElementById('projectdiv');\n    if (projectAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No Projects yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew');\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLElement = document.getElementById('projectformdiv');\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      });\n      projectDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:Project[] = projectAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((project:Project) => projectBuilder(project, projectDiv));\n  }\n\n  return { homePageBuilder, donePageBuilder, projectPageBuilder, displayToDos, displayDoneToDos, displayProjects, createToDosDiv };\n})();\n\nexport default domManipulator;","import domManipulator from './dom-manipulator';\nimport toDoManipulator from './todomanipulator';\n\ntoDoManipulator.loadArys();\ndomManipulator.homePageBuilder();\n"],"names":["date","getDate","getMonth","getFullYear","toDoDate","currentDate","Date","timeDifference","getTime","Math","floor","day","String","padStart","month","heading","text","priority","id","projectiDs","done","doneStatus","iD","markAsDone","getDoneStatus","name","toDos","toDosAry","addToDo","toDo","push","clearToDos","getToDos","setToDos","newToDos","iDsAry","JSON","parse","localStorage","getItem","generateID","randID","random","includes","setItem","stringify","freeID","index","indexOf","splice","dateString","toDoAry","doneAry","projectAry","deleteToDo","deleteProject","createToDo","newToDo","modifyToDo","newHeading","newText","newDate","newPriority","find","x","modifyDone","length","forEach","projectiD","project","findIndex","getToDoAry","loadArys","todo","getDoneAry","moveToDone","doneToDo","console","log","revertDone","undoneToDo","findTodDo","findDoneToDo","createProject","newProject","modifyProject","newName","getProjectAry","findProject","updateProjectAry","deleteItem","deleteDone","document","getElementById","value","querySelector","e","target","projectToDoFields","querySelectorAll","projectToDoIdsAry","Array","from","map","field","Number","preventDefault","targetParent","toDoData","reset","style","display","type","toDoDiv","parentNode","projectData","projectToDoIds","remove","toDoId","projectDiv","toDoPriorities","projectPriorities","content","createCloseButton","labelCreator","radioCreator","prepareContent","sideButtonCreator","createSubmitButton","inputCreator","editInputCreator","createElement","formDiv","closeButtonDiv","setAttribute","closeButton","innerHTML","addEventListener","classList","appendChild","forElement","labelText","label","textContent","radioName","radioOptions","checkedValue","inputDiv","add","radioDiv","option","radioButton","radioLabel","toUpperCase","substring","contentDiv","form","cancelButton","acceptButton","submitButton","fieldType","fieldName","required","fieldValue","inputFieldCreator","buildForm","formHeading","buildToDoEditForm","toDoContent","getAttribute","headerContent","dateContent","priorityContent","buildProjectEditForm","projectContent","nameContent","buildNewProjectForm","buildAddProjectToDoForm","toDoIdAry","a","toDoCheckbox","filter","toDoLabel","toDoHeading","projectToDoDiv","toString","newToDosDiv","parentElement","replaceChild","noToDos","domManipulator","getPriorityColor","createToDosDiv","toDosDiv","div","noToDosDiv","noToDosButton","createNoToDosButton","projectToDoBuilder","addCheckBox","checkbox","toDoDiviD","displayToDos","addNewButtonEventListener","addNewButton","addLabelStripe","labelStripe","backgroundColor","addNavListeners","element","homePageBuilder","donePageBuilder","projectPageBuilder","buildContent","object","propAry","prop","toDoDateDiv","toDoDateIcon","dayDifference","abs","createDateString","buildElementDate","priorityDiv","priorityCircle","createPriorityCircle","priorityText","createPriorityDiv","propName","toDoElement","buildElement","buildLink","linkName","linkIcon","link","capitalizedLinkName","charAt","slice","clearContent","createButtons","buttons","editButton","createEditButton","deleteButton","confirm","displayProjects","displayDoneToDos","createDeleteButton","buildHeader","navigationDiv","header","logodiv","checkmark","logo","buildLogo","pageBuilder","contentType","toDoBuilder","toDoObject","toDoID","middleDiv","revert","chechboxDiv","doneDiv","doneDiviD","actionDiv","sort","b","projectObject","projectContainer","expandButton","buildProjectMiddleDiv","toggle","buildProjectToDoDiv","projectBuilder","newProjectButtonDiv","newProjectButton","buildNewProjectButtonDiv","addNewProjectButton"],"sourceRoot":""}