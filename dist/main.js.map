{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-site/./src/dateconverter.ts","webpack://todo-site/./src/todo.ts","webpack://todo-site/./src/idgenerator.ts","webpack://todo-site/./src/datefixer.ts","webpack://todo-site/./src/todomanipulator.ts","webpack://todo-site/./src/project.ts","webpack://todo-site/./src/formgetter.ts","webpack://todo-site/./src/formhandler.ts","webpack://todo-site/./src/formbuilder.ts","webpack://todo-site/./src/dom-manipulator.ts","webpack://todo-site/./src/index.ts"],"sourcesContent":["const dateConverter = (() => {\n  const convertToString = (date: Date) => {\n    let result = '';\n  let day = date.getDate();\n  let month = date.getMonth() + 1;\n  let year = date.getFullYear();\n  result = day + '.' + month + '.' + year;\n  return result;\n  }\n  const convertToInputFormat = (date: Date) => {\n    let result = '';\n    let day = String(date.getDate()).padStart(2, '0');\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    result = year + '-' + month + '-' + day;\n    return result;\n  }\n\n  const getDayDifference = (date: Date) => {\n    const toDoDate = date;\n    const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n    const timeDifference = toDoDate.getTime() - currentDate.getTime();\n    const dayDifference = Math.floor(timeDifference / (1000 * 3600 * 24));\n    return dayDifference;\n  }\n  return { convertToString, getDayDifference, convertToInputFormat };\n})();\n\nexport default dateConverter;\n","const toDo = (heading: string, text: string, date: Date, priority: string, id:number, projectiDs:number[]) => {\n  const iD:number = id;\n  let done:Boolean = false;\n  const markAsDone = () => done = !done;\n  const getDoneStatus = () => done;\n  return { heading, text, date, priority, iD, projectiDs, markAsDone, getDoneStatus };\n};\n\nexport default toDo;","const idGenerator = (() => {\n  const iDsAry:number[] = JSON.parse(localStorage.getItem(\"idsary\") || \"[]\");\n  const generateID = () => {\n    while (true) {\n      let randID:number = Math.floor(Math.random() * (10000));\n      if (!iDsAry.includes(randID)) {\n        iDsAry.push(randID);\n        localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n        return randID;\n      }\n    }\n  }\n  const freeID = (id:number) => {\n    const index = iDsAry.indexOf(id);\n    iDsAry.splice(index, 1);\n    localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n  }\n  return { generateID, freeID }\n})();\n\nexport default idGenerator;\n","const dateFixer = (() => {\n  const fixDates = (dateString: string) => {\n    return new Date (dateString);\n  }\n  return { fixDates };\n})();\n\nexport default dateFixer;","import toDo from \"./todo\";\nimport Project from \"./project\";\nimport idGenerator from \"./idgenerator\";\nimport dateFixer from \"./datefixer\";\n\nconst toDoManipulator = (() => {\n\n  let toDoAry:ToDo[] = [];\n  let doneAry:ToDo[] = [];\n  let projectAry:Project[] = [];\n\n  const loadToDoAry = () => {\n    let rawToDoAry = JSON.parse(localStorage.getItem(\"todoary\") || \"[]\");\n    rawToDoAry.forEach((todo: ToDo) => {\n    todo.date = dateFixer.fixDates(todo.date);\n    toDoAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs));\n    });\n  }\n\n  const loadDoneAry = () => {\n    doneAry = JSON.parse(localStorage.getItem(\"doneary\") || \"[]\");\n    doneAry.forEach((todo: ToDo) => {\n      todo.date = dateFixer.fixDates(todo.date);\n      });\n  }\n\n  const loadProjectAry = () => {\n    projectAry = JSON.parse(localStorage.getItem(\"projectary\") || \"[]\");\n    projectAry.forEach((project: Project) => {\n      project.date = dateFixer.fixDates(project.date);\n      });\n  }\n\n  const loadArys = () => {\n    loadToDoAry();\n    loadDoneAry();\n    loadProjectAry();\n  }\n\n  const createToDo = (heading: string, text: string, date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newToDo:ToDo = toDo(heading, text, date, priority, iD, []);\n    toDoAry.push(newToDo);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    return newToDo;\n  }\n  const modifyToDo = (id:number, newHeading: string = null, newText: string = null, newDate: Date = null, newPriority: string = null) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (newHeading !== null) {\n      toDo.heading = newHeading;\n    }\n    if (newText !== null) {\n      toDo.text = newText;\n    }\n    if (newDate !== null) {\n      toDo.date = newDate;\n    }\n    if (newPriority !== null) {\n      toDo.priority = newPriority;\n    }\n  }\n  const deleteToDo = ( id:number ) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (toDo.projectiDs.length > 0) {\n      toDo.projectiDs.forEach((projectiD) => {\n        const project:Project = projectAry.find(x => x.iD === projectiD);\n        const index = project.toDos.indexOf(toDo);\n        project.toDos.splice(index, 1);\n      });\n    }\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    toDoAry.splice(index, 1);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findTodDo = (id:number) => {\n    return toDoAry.find(x => x.iD === id);\n  }\n\n  const moveToDone = (id:number) => {\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    const doneToDo = toDoAry.splice(index, 1)[0];\n    console.log(doneToDo);\n    doneToDo.markAsDone();\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    doneAry.push(doneToDo);\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n  }\n  const createProject = (name:string, toDos:ToDo[], date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newProject:Project = Project(iD, name, toDos, date, priority);\n    projectAry.push(newProject);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    return newProject;\n  }\n\n  const modifyProject = (id:number, newName: string = null, newToDos:ToDo[] = null, newDate: Date = null, newPriority: string = null) => {\n    const project:Project = projectAry.find(x => x.iD === id);\n    if (newName !== null) {\n      project.name = newName;\n    }\n    if (newToDos !== null) {\n      project.toDos = newToDos;\n    }\n    if (newDate !== null) {\n      project.date = newDate;\n    }\n    if (newPriority !== null) {\n      project.priority = newPriority;\n    }\n  }\n\n  const deleteProject = (id:number) => {\n    const index:number = projectAry.findIndex(x => x.iD === id);\n    projectAry.splice(index, 1);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findProject = (id:number) => {\n    return projectAry.find(x => x.iD === id);\n  }\n\n  const getToDoAry = () => toDoAry;\n  const getDoneAry = () => doneAry;\n  const getProjectAry = () => projectAry;\n  return { \n    createToDo, \n    modifyToDo, \n    deleteToDo, \n    getToDoAry, \n    loadArys, \n    getDoneAry, \n    moveToDone, \n    findTodDo, \n    createProject,\n    modifyProject, \n    getProjectAry,\n    deleteProject,\n    findProject }\n})();\n\nexport default toDoManipulator;","const Project = (iD: number, name:string, toDos:ToDo[], date: Date, priority: string) => {\n  return { iD, name, date, priority, toDos };\n}\n\nexport default Project;","const formGetter = (() => {\n  const getFormData = (target:HTMLElement) => {\n    const toDoTitle:string = (<HTMLInputElement>(document.getElementById('todotitle'))).value;\n    const toDoContent:string = (<HTMLInputElement>(document.getElementById('todocontent'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(document.getElementById('tododate'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"todopriority\"]:checked'))).value;\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority]\n    return toDoData;\n  }\n  const getEditFormData = (e:SubmitEvent) => {\n    const target = e.target as HTMLFormElement;\n    const toDoTitle:string = (<HTMLInputElement>(target.querySelector('#todotitleedit'))).value;\n    const toDoContent:string = (<HTMLInputElement>(target.querySelector('#todocontentedit'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(target.querySelector('#tododateedit'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(target.querySelector('input[name=\"todopriorityedit\"]:checked'))).value;\n    target.reset();\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority];\n    return toDoData;\n  }\n  const getProjectFormData = (e:SubmitEvent) => {\n    const target = e.target as HTMLFormElement;\n    const projectName:string = (<HTMLInputElement>(document.getElementById('projectname'))).value;\n    const projectDate:Date = new Date((<HTMLInputElement>(document.getElementById('projectdate'))).value);\n    const projectPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"projectpriority\"]:checked'))).value;\n    target.reset();\n    const projectData:[string, Date, string] = [projectName, projectDate, projectPriority];\n    return projectData;\n  }\n  const getProjectToDoData = (target:HTMLElement) => {\n    const projectToDoFields = target.querySelectorAll('input[name=\"projectcheckbox\"]:checked');\n    const projectToDoIdsAry:number[] = Array.from(projectToDoFields).map((field:HTMLInputElement) => Number(field.value));\n    console.log(projectToDoIdsAry);\n    return projectToDoIdsAry;\n  }\n  return { getFormData, getEditFormData, getProjectFormData, getProjectToDoData }\n})();\n\nexport default formGetter;","import formGetter from \"./formgetter\";\nimport domManipulator from \"./dom-manipulator\";\nimport toDoManipulator from \"./todomanipulator\";\n\nconst formHandler =(() => {\n  const handleFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const toDoData = formGetter.getFormData(target);\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createToDo(toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n  const handleEditFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const toDoDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const toDoData = formGetter.getEditFormData(e);\n    target.reset();\n    toDoManipulator.modifyToDo(Number(toDoDiv.id), toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n  const handleNewProjectFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const projectData = formGetter.getProjectFormData(e);\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createProject(projectData[0], [], projectData[1], projectData[2]);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n  const handleAddProjectToDosFormSubmission = (e:SubmitEvent, iD:number) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const projectToDoIds = formGetter.getProjectToDoData(target);\n    target.reset()\n    targetParent.style.display = 'none';\n    const project = toDoManipulator.findProject(iD);\n    projectToDoIds.forEach((toDoId) => {\n      project.toDos.push(toDoManipulator.findTodDo(toDoId));\n  });\n  console.log(project);\n  }\n\n  return {handleFormSubmission, handleEditFormSubmission, handleNewProjectFormSubmission, handleAddProjectToDosFormSubmission}\n})();\n\nexport default formHandler","import toDoManipulator from \"./todomanipulator\";\nimport formHandler from \"./formhandler\";\nimport dateConverter from \"./dateconverter\";\nimport domManipulator from \"./dom-manipulator\";\n\nconst formBuilder = (() => {\n  const priorities:string[] = ['Low', 'Standard', 'High'];\n  const projectPriorities:string[] = ['Normal', 'Urgent'];\n\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  const createCloseButton = (formDiv:HTMLDivElement) => {\n    const closeButtonDiv:HTMLDivElement = document.createElement('div');\n    closeButtonDiv.setAttribute('id', 'closebuttondiv');\n    const closeButton:HTMLButtonElement = document.createElement('button');\n    closeButton.setAttribute('id', 'closebutton');\n    closeButton.innerHTML = '<span class=\"material-symbols-outlined\">close</span>';\n    closeButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'none';\n      content.classList.remove('blurred');\n    });\n    closeButtonDiv.appendChild(closeButton);\n    return closeButtonDiv;\n  }\n  const labelCreator = (forElement: string, labelText: string) => {\n    const label:HTMLLabelElement = document.createElement('label');\n    label.setAttribute('for', forElement);\n    label.textContent = labelText;\n    return label;\n  }\n  const inputFieldCreator = (fieldType: string, fieldName: string, fieldValue:string = 'empty', required:boolean) => {\n    const field:HTMLInputElement = document.createElement('input');\n    field.setAttribute('type', fieldType);\n    field.setAttribute('name', fieldName);\n    field.setAttribute('id', fieldName);\n    if (required === true) {\n      field.setAttribute('required', 'true');\n    }\n    if (fieldValue !== 'empty') {\n      field.setAttribute('value', fieldValue);\n    }\n    return field;\n  }\n  const radioCreator = (radioName: string, radioOptions: string[], checkedValue:string = null) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('radiocontainer', 'Priority:'));\n    const radioDiv:HTMLDivElement = document.createElement('div');\n    radioDiv.classList.add('radiocontainer');\n    radioOptions.forEach((option) => {\n      const radioButton:HTMLInputElement = document.createElement('input');\n      radioButton.setAttribute('type', 'radio');\n      radioButton.setAttribute('name', radioName);\n      radioButton.setAttribute('value', option);\n      radioButton.setAttribute('id', option);\n      if (option === checkedValue) {\n        radioButton.setAttribute('checked', 'checked');\n      }\n      const radioLabel:HTMLLabelElement = document.createElement('label');\n      radioLabel.setAttribute('for', option);\n      radioLabel.textContent = option[0].toUpperCase() + option.substring(1);\n      radioDiv.appendChild(radioButton);\n      radioDiv.appendChild(radioLabel);\n    })\n    inputDiv.appendChild(radioDiv);\n    return inputDiv\n  }\n  const createSubmitButton = () => {\n    const submitButton:HTMLButtonElement = document.createElement('button');\n    submitButton.setAttribute('type', 'submit');\n    submitButton.setAttribute('id', 'todosubmit');\n    submitButton.textContent = 'Add';\n    return submitButton;\n  }\n  const inputCreator = (fieldType: string, fieldName: string, labelText: string, required:boolean = true) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator(fieldName, labelText));\n    inputDiv.appendChild(inputFieldCreator(fieldType, fieldName, 'empty', required));\n    return inputDiv;\n  }\n  const editInputCreator = (fieldType: string, fieldName: string, labelText: string, required:boolean = true, fieldValue: any) => {\n    const field:HTMLDivElement = inputCreator(fieldType, fieldName, labelText, required);\n    const inputField:HTMLInputElement = field.querySelector(`#${fieldName}`);\n    inputField.value = fieldValue;\n    return field;\n  }\n  const buildForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'formdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new ToDo';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'todotitle', 'Title:'));\n    form.appendChild(inputCreator('text', 'todocontent', 'Content (optional):', false))\n    form.appendChild(inputCreator('date', 'tododate', 'Due date:'));\n    form.appendChild(radioCreator('todopriority', priorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => { \n      formHandler.handleFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  };\n  const buildEditForm = (e:MouseEvent) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const toDoDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const toDoContent:HTMLElement = toDoDiv.querySelector('.todocontent');\n    const toDo = toDoManipulator.findTodDo(Number(target.getAttribute('objectid')));\n    const { heading:headerContent, text:textContent, date:dateContent, priority:priorityContent} = toDo;\n    toDoContent.innerHTML = '';\n    toDoContent.classList.add('duringedit');\n    toDoContent.classList.remove('todocontent');\n    const form = document.createElement('form');\n    form.classList.add('todocontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'todotitleedit', 'Title:', true, headerContent));\n    form.appendChild(editInputCreator('text', 'todocontentedit', 'Content (optional):', false, textContent));\n    form.appendChild(editInputCreator('date', 'tododateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('todopriorityedit', priorities, priorityContent));\n    toDoContent.appendChild(form);\n    targetParent.innerHTML = '';\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancelbutton');\n    cancelButton.innerHTML = '<span class=\"material-symbols-outlined\">undo</span>';\n    cancelButton.addEventListener(('click'), () => {\n      domManipulator.displayToDos(toDoManipulator.getToDoAry());\n    });\n    const acceptButton = document.createElement('button');\n    acceptButton.classList.add('acceptbutton');\n    acceptButton.setAttribute('type', 'submit')\n    acceptButton.setAttribute('form', 'editform');\n    acceptButton.innerHTML = '<span class=\"material-symbols-outlined\">check</span>';\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleEditFormSubmission(e);\n    })\n    targetParent.appendChild(cancelButton);\n    targetParent.appendChild(acceptButton);\n  }\n  const buildNewProjectForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projectformdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new Project';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'projectname', 'Name:'));\n    form.appendChild(inputCreator('date', 'projectdate', 'Due date:'));\n    form.appendChild(radioCreator('projectpriority', projectPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleNewProjectFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n  const buildAddProjectToDoForm = (e:MouseEvent, iD:number) => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projecttodosformdiv');\n    formDiv.style.display = 'block';\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add new ToDos to Project';\n    const form:HTMLFormElement = document.createElement('form');\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    const inputDiv = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('projectcheckboxdiv', 'Select ToDos:'))\n    const toDoAry = toDoManipulator.getToDoAry();\n    const toDoDiv:HTMLDivElement = document.createElement('div');\n    toDoDiv.classList.add('projectcheckboxdiv');\n    toDoAry.forEach((toDo:ToDo) => {\n      const toDoCheckbox:HTMLInputElement = document.createElement('input');\n      toDoCheckbox.setAttribute('type', 'checkbox');\n      toDoCheckbox.setAttribute('id', `todocheckbox${toDo.iD}`);\n      toDoCheckbox.setAttribute('value', `${toDo.iD}`);\n      toDoCheckbox.setAttribute('name', 'projectcheckbox');\n      const toDoLabel:HTMLLabelElement = document.createElement('label');\n      toDoLabel.setAttribute('for', `todocheckbox${toDo.iD}`);\n      const toDoHeading = document.createElement('div');\n      toDoHeading.textContent = toDo.heading;\n      const toDoDate = document.createElement('div');\n      toDoDate.classList.add('formtododate');\n      toDoDate.innerHTML = `<span class=\"material-symbols-outlined\">calendar_month</span> ${dateConverter.convertToString(toDo.date)}`\n      toDoLabel.appendChild(toDoHeading);\n      toDoLabel.appendChild(toDoDate);\n      toDoDiv.appendChild(toDoCheckbox);\n      toDoDiv.appendChild(toDoLabel);\n    });\n    inputDiv.appendChild(toDoDiv);\n    form.appendChild(inputDiv);\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleAddProjectToDosFormSubmission(e, iD);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n\n  return { buildForm, buildEditForm, buildNewProjectForm, buildAddProjectToDoForm };\n})()\n\nexport default formBuilder;","import dateConverter from './dateconverter';\nimport toDoManipulator from './todomanipulator';\nimport formBuilder from './formbuilder';\n\nconst domManipulator = (() => {\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  \n  // Subfunctions for helper functions\n  const createToDoDate = (date: Date) => {\n    const toDoDateDiv:HTMLDivElement = document.createElement('div');\n    toDoDateDiv.classList.add('tododate');\n    const toDoDateIcon:HTMLDivElement = document.createElement('div');\n    toDoDateIcon.innerHTML = '<span class=\"material-symbols-outlined\">calendar_month</span>';\n    const toDoDate:HTMLDivElement = document.createElement('div');\n    const dayDifference:number = dateConverter.getDayDifference(date);\n    if (dayDifference === 1) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' day left)';  \n    } else if (dayDifference >= 0) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' days left)';  \n    } else if (dayDifference === -1) {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' day ago)';\n    } else {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' days ago)';\n    }\n    toDoDateDiv.appendChild(toDoDateIcon);\n    toDoDateDiv.appendChild(toDoDate);\n    return toDoDateDiv;\n  };\n\n  const createPriorityDiv = (priority: string) => {\n    const priorityDiv:HTMLDivElement = document.createElement('div');\n    priorityDiv.classList.add('todopriority');\n    const priorityCircle:HTMLDivElement = document.createElement('div');\n    priorityCircle.classList.add('prioritycircle');\n    if (priority === 'Standard') {\n      priorityCircle.style.backgroundColor = 'orange';\n    } else if (priority === 'Low') {\n      priorityCircle.style.backgroundColor = 'blue';\n    } else if (priority === 'High') {\n      priorityCircle.style.backgroundColor = 'red';\n    } else if (priority === 'Normal') {\n      priorityCircle.style.backgroundColor = 'skyblue';\n    } else if (priority === 'Urgent') {\n      priorityCircle.style.backgroundColor = 'crimson';\n    }\n    const priorityText:HTMLDivElement = document.createElement('div');\n    priorityText.textContent = priority + ' priority';\n    \n    priorityDiv.appendChild(priorityCircle);\n    priorityDiv.appendChild(priorityText);\n    return priorityDiv;\n  }\n\n  const createToDosDiv = (iD: number) => { \n    const toDosDiv:HTMLDivElement = document.createElement('div');\n    toDosDiv.classList.add('projecttodoscontainer');\n    const toDosAry = toDoManipulator.findProject(iD).toDos;\n    if (toDosAry.length === 0) {\n      const noToDosDiv:HTMLDivElement = document.createElement('div');\n      noToDosDiv.classList.add('notodos');\n      noToDosDiv.textContent = 'No ToDos for this project yet';\n      const noToDosButton:HTMLButtonElement = document.createElement('button');\n      noToDosButton.classList.add('addtodobutton');\n      noToDosButton.textContent = 'Add ToDo';\n      noToDosButton.addEventListener('click', (e) => {\n        content.appendChild(formBuilder.buildAddProjectToDoForm(e, iD));\n        content.classList.add('blurred');\n      });\n      toDosDiv.appendChild(noToDosDiv);\n      toDosDiv.appendChild(noToDosButton);\n    } else {\n      toDosAry.forEach((toDo) => {\n        toDoBuilder(toDo, toDosDiv);\n    });\n  }\n    return toDosDiv;\n  }\n  \n  // Helper functions that are not returned\n  const addCheckBox = () => {\n    const checkbox:HTMLDivElement = document.createElement('div');\n    checkbox.classList.add('checkbox');\n    checkbox.innerHTML = '&#10003';\n    checkbox.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const toDoDiv = (<HTMLElement>targetParent.parentNode);\n      const toDoDiviD:number = Number(toDoDiv.id);\n      toDoManipulator.moveToDone(toDoDiviD);\n      displayToDos(toDoManipulator.getToDoAry());\n      });\n    return checkbox;\n  };\n\n  const addLabelStripe = (priority: string) => {\n    const labelStripe:HTMLDivElement = document.createElement('div');\n    labelStripe.classList.add('labelstripe');\n    if (priority === 'Standard') {\n      labelStripe.style.backgroundColor = 'orange';\n    } else if (priority === 'Low') {\n      labelStripe.style.backgroundColor = 'blue';\n    } else if (priority === 'High') {\n      labelStripe.style.backgroundColor = 'red';\n    } else if (priority === 'Normal') {\n      labelStripe.style.backgroundColor = 'skyblue';\n    } else if (priority === 'Urgent') {\n      labelStripe.style.backgroundColor = 'crimson';\n    };\n    return labelStripe;\n  };\n\n  const addNavListeners = () => {\n    const navItems = document.querySelectorAll('.navitem');\n    navItems.forEach((element) => {\n      element.addEventListener(('click'), (e:MouseEvent) => {\n        const iD = (<HTMLElement>(e.target)).id;\n        switch (iD) {\n          case 'homepagelink':\n            domManipulator.homePageBuilder();\n            break;\n          case 'donelink':\n            domManipulator.donePageBuilder();\n            break;\n          case 'projectlink':\n            domManipulator.projectPageBuilder();\n            break;\n        } \n      });\n    });\n  }\n\n  const buildToDoConent = (toDoObject: ToDo) => {\n    const toDoContent:HTMLDivElement = document.createElement('div');\n    toDoContent.classList.add('todocontent')\n    const toDoHeader:HTMLDivElement = document.createElement('div');\n    toDoHeader.classList.add('todoheader');\n    toDoHeader.textContent = toDoObject.heading;\n    const toDoText:HTMLDivElement = document.createElement('div');\n    toDoText.classList.add('todotext');\n    toDoText.textContent = toDoObject.text;\n    toDoContent.appendChild(toDoHeader);\n    toDoContent.appendChild(toDoText);\n    toDoContent.appendChild(createToDoDate(toDoObject.date));\n    toDoContent.appendChild(createPriorityDiv(toDoObject.priority));\n    return toDoContent;\n  }\n\n  const buildProjectContent = (projectObject: Project) => {\n    const projectContent:HTMLDivElement = document.createElement('div');\n    projectContent.classList.add('projectcontent')\n    const projectTitle:HTMLDivElement = document.createElement('div');\n    projectTitle.classList.add('projectname');\n    projectTitle.textContent = projectObject.name;\n    projectContent.appendChild(projectTitle);\n    projectContent.appendChild(createToDoDate(projectObject.date));\n    projectContent.appendChild(createPriorityDiv(projectObject.priority));\n    return projectContent;\n  }\n\n  const buildLogo = () => {\n    const logodiv:HTMLDivElement = document.createElement('div');\n    logodiv.setAttribute('id', 'logodiv');\n    const checkmark:HTMLDivElement = document.createElement('div');\n    checkmark.setAttribute('id', 'checkmark');\n    checkmark.innerHTML = '&#10003';\n    const logo:HTMLDivElement = document.createElement('div');\n    logo.setAttribute('id', 'logo');\n    logo.textContent = 'To Do';\n    logodiv.appendChild(checkmark);\n    logodiv.appendChild(logo);\n    return logodiv;\n  }\n\n  const buildNavigationDiv = () => {\n    const navigationDiv:HTMLDivElement = document.createElement('div');\n    navigationDiv.setAttribute('id', 'navigationdiv');\n    const homepageLink:HTMLDivElement = document.createElement('div');\n    homepageLink.classList.add('navitem');\n    homepageLink.setAttribute('id', 'homepagelink');\n    homepageLink.innerHTML = '<span class=\"material-symbols-outlined\">house</span> Homepage';\n    const doneLink:HTMLDivElement = document.createElement('div');\n    doneLink.innerHTML = '<span class=\"material-symbols-outlined\">done</span> Done';\n    doneLink.classList.add('navitem');\n    doneLink.setAttribute('id', 'donelink');\n    const projectLink:HTMLDivElement = document.createElement('div');\n    projectLink.classList.add('navitem');\n    projectLink.setAttribute('id', 'projectlink');\n    projectLink.innerHTML = '<span class=\"material-symbols-outlined\">assignment</span> Projects';\n    navigationDiv.appendChild(homepageLink);\n    navigationDiv.appendChild(doneLink);\n    navigationDiv.appendChild(projectLink);\n    return navigationDiv;\n  }\n\n  const clearContent = () => {\n    content.textContent = '';\n  }\n  \n  const clearToDoDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('tododiv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearDoneDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('donediv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearProjectDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('projectdiv');\n    toDoDiv.textContent = '';\n  }\n\n    const createToDoButtons = (iD:string) => {\n      const buttonDiv:HTMLDivElement = document.createElement('div');\n      buttonDiv.classList.add('buttondiv');\n      const editButton:HTMLButtonElement = document.createElement('button');\n      editButton.classList.add('editbutton');\n      editButton.setAttribute('objectid', iD);\n      editButton.innerHTML = '<span class=\"material-symbols-outlined\">edit</span>';\n      editButton.addEventListener(('click'), (e) => {\n        formBuilder.buildEditForm(e);\n      });\n      const deleteButton:HTMLButtonElement = document.createElement('button');\n      deleteButton.classList.add('deletebutton');\n      deleteButton.setAttribute('objectid', iD);\n      deleteButton.innerHTML = '<span class=\"material-symbols-outlined\">delete</span>';\n      deleteButton.addEventListener(('click'), (e) => {\n        const target = (<HTMLElement>e.target);\n        const iD:number = Number(target.getAttribute('objectid'));\n        if (confirm('Are you sure you want to delete that?\\n(This is an irreversible operation)')) {\n          toDoManipulator.deleteToDo(iD);\n          displayToDos(toDoManipulator.getToDoAry());  \n        };\n      });\n      buttonDiv.appendChild(editButton);\n      buttonDiv.appendChild(deleteButton);\n      return buttonDiv;\n    }\n\n    const createExpandButton = (iD:number) => {\n      const expandButton:HTMLDivElement = document.createElement('div');\n      expandButton.classList.add('expandbutton');\n      expandButton.setAttribute('objectid', iD.toString());\n      expandButton.innerHTML = '<span class=\"material-symbols-outlined\">expand_more</span>';\n      expandButton.addEventListener(('click'), (e) => {\n        const projectDiv = document.getElementById(iD.toString());\n        const toDosDiv = (<HTMLElement>(projectDiv.nextSibling));\n        toDosDiv.textContent = '';\n        toDosDiv.appendChild(createToDosDiv(iD));\n        if (toDosDiv.style.display === 'none') {\n          toDosDiv.textContent = '';\n          toDosDiv.appendChild(createToDosDiv(iD));\n          toDosDiv.style.display = 'block'\n        } else {\n          toDosDiv.style.display = 'none';\n        } \n        projectDiv.classList.toggle('expanded');\n\n      });\n      return expandButton;\n    }\n\n    const buildHeader = () => {\n      const header:HTMLElement = document.createElement('header');\n      header.setAttribute('id', 'header');\n      header.appendChild(buildLogo());\n      header.appendChild(buildNavigationDiv());\n      const addNewButton:HTMLButtonElement = document.createElement('button');\n      addNewButton.setAttribute('id', 'addnewbutton');\n      addNewButton.textContent = 'Add ToDo';\n      header.appendChild(addNewButton);\n      return header\n    }\n\n    const buildNewProjectButtonDiv = () => {\n      const newProjectButtonDiv:HTMLDivElement = document.createElement('div');\n      newProjectButtonDiv.setAttribute('id', 'newprojectbuttondiv');\n      const newProjectButton:HTMLButtonElement = document.createElement('button');\n      newProjectButton.setAttribute('id', 'newprojectbutton');\n      newProjectButton.textContent = 'Add a new project';\n      newProjectButtonDiv.appendChild(newProjectButton);\n      return newProjectButtonDiv;\n    }\n\n  // Main functions to be returned\n  const homePageBuilder = () => {\n    clearContent();\n    const toDoDiv:HTMLDivElement = document.createElement('div');\n    toDoDiv.setAttribute('id', 'tododiv');\n    content.appendChild(buildHeader());\n    content.appendChild(toDoDiv);\n    content.appendChild(formBuilder.buildForm());\n    const addNewButton = document.getElementById('addnewbutton');\n    const formDiv:HTMLElement = document.getElementById('formdiv');\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n    document.getElementById('homepagelink').classList.add('active');\n    addNavListeners();\n    displayToDos(toDoManipulator.getToDoAry());\n  }\n  const donePageBuilder = () => {\n    clearContent();\n    const doneDiv:HTMLDivElement = document.createElement('div');\n    doneDiv.setAttribute('id', 'donediv');\n    content.appendChild(buildHeader());\n    content.appendChild(doneDiv);\n    content.appendChild(formBuilder.buildForm());\n    const addNewButton = document.getElementById('addnewbutton');\n    const formDiv:HTMLElement = document.getElementById('formdiv');\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n    document.getElementById('donelink').classList.add('active');\n    addNavListeners();\n    displayDoneToDos(toDoManipulator.getDoneAry());\n  }\n  const projectPageBuilder = () => {\n    clearContent();\n    const projectDiv:HTMLDivElement = document.createElement('div');\n    projectDiv.setAttribute('id', 'projectdiv');\n    content.appendChild(buildHeader());\n    content.appendChild(buildNewProjectButtonDiv());\n    content.appendChild(projectDiv);\n    content.appendChild(formBuilder.buildForm());\n    content.appendChild(formBuilder.buildNewProjectForm());\n    const addNewButton = document.getElementById('addnewbutton');\n    const formDiv:HTMLElement = document.getElementById('formdiv');\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n    const addNewProjectButton = document.getElementById('newprojectbutton');\n    const projectFormDiv:HTMLElement = document.getElementById('projectformdiv');\n    addNewProjectButton.addEventListener(('click'), () => {\n      projectFormDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n    document.getElementById('projectlink').classList.add('active');\n    addNavListeners();\n    displayProjects(toDoManipulator.getProjectAry());\n  }\n  const toDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement, done:boolean = false) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    if (done === false) {\n      toDo.classList.add('todo');\n    } else {\n      toDo.classList.add('donetodo')\n    }\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    const middleDiv:HTMLDivElement = document.createElement('div');\n    middleDiv.classList.add('middlediv');\n    const chechboxDiv:HTMLDivElement = document.createElement('div');\n    chechboxDiv.classList.add('checkboxdiv');\n    chechboxDiv.appendChild(addCheckBox());\n    middleDiv.appendChild(chechboxDiv);\n    middleDiv.appendChild(buildToDoConent(toDoObject));\n    middleDiv.appendChild(createToDoButtons(toDoID));\n    toDo.appendChild(middleDiv);\n    toDoDiv.appendChild(toDo);\n  }\n  const projectBuilder = (projectObject: Project, projectDiv:HTMLElement) => {\n    const projectContainer:HTMLDivElement = document.createElement('div');\n    projectContainer.classList.add('projectcontainer');\n    const project:HTMLDivElement = document.createElement('div');\n    project.classList.add('project');\n    project.setAttribute('id', projectObject.iD.toString());\n    const middleDiv:HTMLDivElement = document.createElement('div');\n    middleDiv.classList.add('middlediv');\n    const chechboxDiv:HTMLDivElement = document.createElement('div');\n    chechboxDiv.classList.add('checkboxdiv');\n    chechboxDiv.appendChild(addCheckBox());\n    project.appendChild(addLabelStripe(projectObject.priority));\n    middleDiv.appendChild(chechboxDiv);\n    middleDiv.appendChild(buildProjectContent(projectObject));\n    middleDiv.appendChild(createToDoButtons(projectObject.iD.toString()));\n    project.appendChild(middleDiv);\n    project.appendChild(createExpandButton(projectObject.iD));\n    projectContainer.appendChild(project);\n    const projectToDoDiv = document.createElement('div');\n    projectToDoDiv.classList.add('projecttododiv');\n    projectToDoDiv.setAttribute('objectid', projectObject.iD.toString());\n    projectToDoDiv.style.display = 'none';\n    projectContainer.appendChild(projectToDoDiv);\n    projectDiv.appendChild(projectContainer);\n  }\n  const displayToDos = ( toDoAry:ToDo[] ) => {\n    const toDoDiv:HTMLElement = (document.getElementById('tododiv') || document.createElement('tododiv'));\n    clearToDoDiv();\n    if (toDoAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew');\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLElement = document.getElementById('formdiv');\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      })\n      toDoDiv.appendChild(actionDiv);\n      return;\n    }\n    let resultAry:ToDo[] = toDoAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, toDoDiv));\n  }\n  const displayDoneToDos = (doneAry:ToDo[] ) => { //Needs to be finished\n    clearDoneDiv()\n    const doneDiv = document.getElementById('donediv');\n    let resultAry:ToDo[] = doneAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, doneDiv, true));\n  }\n  const displayProjects = (projectAry:Project[]) => {\n    const projectDiv = document.getElementById('projectdiv');\n    clearProjectDiv();\n    let resultAry:Project[] = projectAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((project:Project) => projectBuilder(project, projectDiv));\n  }\n  return { homePageBuilder, donePageBuilder, projectPageBuilder, displayToDos, displayDoneToDos, displayProjects };\n})();\n\nexport default domManipulator;","import domManipulator from './dom-manipulator';\nimport toDoManipulator from './todomanipulator';\n\ntoDoManipulator.loadArys();\ndomManipulator.homePageBuilder();\n"],"names":["date","getDate","getMonth","getFullYear","toDoDate","currentDate","Date","timeDifference","getTime","Math","floor","day","String","padStart","month","heading","text","priority","id","projectiDs","done","iD","markAsDone","getDoneStatus","iDsAry","JSON","parse","localStorage","getItem","generateID","randID","random","includes","push","setItem","stringify","freeID","index","indexOf","splice","dateString","toDoAry","doneAry","projectAry","toDoManipulator","createToDo","newToDo","modifyToDo","newHeading","newText","newDate","newPriority","toDo","find","x","deleteToDo","length","forEach","projectiD","project","toDos","findIndex","getToDoAry","loadArys","todo","getDoneAry","moveToDone","doneToDo","console","log","findTodDo","createProject","name","newProject","modifyProject","newName","newToDos","getProjectAry","deleteProject","findProject","target","document","getElementById","value","querySelector","e","toDoTitle","toDoContent","toDoPriority","reset","projectName","projectDate","projectPriority","projectToDoFields","querySelectorAll","projectToDoIdsAry","Array","from","map","field","Number","formHandler","handleFormSubmission","preventDefault","targetParent","toDoData","style","display","handleEditFormSubmission","toDoDiv","parentNode","handleNewProjectFormSubmission","projectData","handleAddProjectToDosFormSubmission","projectToDoIds","toDoId","priorities","projectPriorities","content","createCloseButton","labelCreator","radioCreator","createSubmitButton","inputCreator","editInputCreator","formBuilder","createElement","formDiv","closeButtonDiv","setAttribute","closeButton","innerHTML","addEventListener","classList","remove","appendChild","forElement","labelText","label","textContent","radioName","radioOptions","checkedValue","inputDiv","add","radioDiv","option","radioButton","radioLabel","toUpperCase","substring","submitButton","fieldType","fieldName","required","fieldValue","inputFieldCreator","buildForm","formHeading","form","buildEditForm","getAttribute","headerContent","dateContent","priorityContent","cancelButton","acceptButton","buildNewProjectForm","buildAddProjectToDoForm","toDoCheckbox","toDoLabel","toDoHeading","domManipulator","createToDoDate","toDoDateDiv","toDoDateIcon","dayDifference","abs","createPriorityDiv","priorityDiv","priorityCircle","backgroundColor","priorityText","createToDosDiv","toDosDiv","toDosAry","noToDosDiv","noToDosButton","toDoBuilder","addCheckBox","checkbox","toDoDiviD","displayToDos","addLabelStripe","labelStripe","addNavListeners","element","homePageBuilder","donePageBuilder","projectPageBuilder","clearContent","createToDoButtons","buttonDiv","editButton","deleteButton","confirm","buildHeader","header","logodiv","checkmark","logo","buildLogo","navigationDiv","homepageLink","doneLink","projectLink","buildNavigationDiv","addNewButton","toDoObject","toDoID","toString","middleDiv","chechboxDiv","toDoHeader","toDoText","buildToDoConent","actionDiv","sort","a","b","displayDoneToDos","doneDiv","displayProjects","projectDiv","projectObject","projectContainer","expandButton","projectContent","projectTitle","buildProjectContent","toggle","projectToDoDiv","projectBuilder","newProjectButtonDiv","newProjectButton","buildNewProjectButtonDiv","addNewProjectButton","projectFormDiv"],"sourceRoot":""}