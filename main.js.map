{"version":3,"file":"main.js","mappings":"mBAAA,MAuBA,EAtB2BA,GACbA,EAAKC,UAGJ,KAFCD,EAAKE,WAAa,GAEL,IADdF,EAAKG,cAmBpB,EAT4BH,IACxB,MAAMI,EAAWJ,EACXK,EAAc,IAAIC,MAAK,IAAIA,MAAOH,eAAe,IAAIG,MAAOJ,YAAY,IAAII,MAAOL,WACnFM,EAAiBH,EAASI,UAAYH,EAAYG,UACxD,OAAOC,KAAKC,MAAMH,EAAiB,MAAmB,EAK1D,EAhBgCP,IAC5B,MAAMW,EAAMC,OAAOZ,EAAKC,WAAWY,SAAS,EAAG,KACzCC,EAAQd,EAAKE,WAAa,EAEhC,OADaF,EAAKG,cACJ,IAAMW,EAAQ,IAAMH,CAAG,ECJzC,EAPa,CAACI,EAAiBC,EAAchB,EAAYiB,EAAkBC,EAAWC,EAAqBC,GAAO,KAChH,IAAIC,EAAaD,EAGjB,MAAO,CAAEL,QAAQA,EAASC,KAAKA,EAAMhB,KAAKA,EAAMiB,SAASA,EAAUK,GAAGJ,EAAIC,WAAWA,EAAYI,WAF9E,IAAMF,GAAcA,EAEsEG,cADvF,IAAMH,EACgG,ECe9H,EAjBgB,CAACC,EAAYG,EAAaC,EAAc1B,EAAYiB,KAc3D,CAAEK,GAAGA,EAAIG,KAAKA,EAAMzB,KAAKA,EAAMiB,SAASA,EAAUU,SAASD,EAAOE,QAbxDC,IACfH,EAAMI,KAAKD,GACX,oBAAkC,EAW8CE,WAT/D,KACjBL,EAAQ,GACR,oBAAkC,EAO0DM,SAL7E,IAAMN,EAKiFO,SAJtFC,IAChBR,EAAQQ,EACR,oBAAkC,ICMtC,EApBoB,MAClB,MAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAgBrE,MAAO,CAAEC,WAfU,KACjB,OAAS,CACP,MAAMC,EAAgBhC,KAAKC,MAAsB,IAAhBD,KAAKiC,UACtC,IAAKP,EAAOQ,SAASF,GAGnB,OAFAN,EAAOL,KAAKW,GACZH,aAAaM,QAAQ,SAAWR,KAAKS,UAAUV,IACxCM,C,GASQK,OALL5B,IACd,MAAM6B,EAAQZ,EAAOa,QAAQ9B,GAC7BiB,EAAOc,OAAOF,EAAO,GACrBT,aAAaM,QAAQ,SAAWR,KAAKS,UAAUV,GAAS,EAG3D,EAlBmB,GCOpB,EANoBe,GACT,IAAI5C,KAAM4C,GCkNrB,EA/MwB,MAEtB,MAAMC,EAAiB,GACjBC,EAAiB,GACjBC,EAAuB,GA8EvBC,EAAepC,IACnB,MAAMW,EAAYsB,EAAQI,MAAKC,GAAKA,EAAElC,KAAOJ,IACzCW,EAAKV,WAAWsC,OAAS,GAC3B5B,EAAKV,WAAWuC,SAASC,IACvB,MAAMC,EAAkBP,EAAWE,MAAKC,GAAKA,EAAElC,KAAOqC,IAChDZ,EAAQa,EAAQ5B,WAAWgB,QAAQnB,GACzC+B,EAAQ5B,WAAWiB,OAAOF,EAAO,EAAE,IAIvC,MAAMA,EAAeI,EAAQU,WAAUL,GAAKA,EAAElC,KAAOJ,IACrDiC,EAAQF,OAAOF,EAAO,GACtBT,aAAaM,QAAQ,UAAYR,KAAKS,UAAUM,IAChD,SAAmBjC,EAAG,EA8DlB4C,EAAiB5C,IACrB,MAAM6B,EAAeM,EAAWQ,WAAUL,GAAKA,EAAElC,KAAOJ,IACxDmC,EAAWJ,OAAOF,EAAO,GACzBT,aAAaM,QAAQ,aAAeR,KAAKS,UAAUQ,IACnD,SAAmBnC,EAAG,EAwBxB,MAAO,CACL6C,WAlJiB,CAAChD,EAAiBC,EAAchB,EAAYiB,KAC7D,MAAMK,EAAK,eACL0C,EAAe,EAAKjD,EAASC,EAAMhB,EAAMiB,EAAUK,EAAI,IAG7D,OAFA6B,EAAQrB,KAAKkC,GACb1B,aAAaM,QAAQ,UAAYR,KAAKS,UAAUM,IACzCa,CAAO,EA8IdC,WA3IiB,CAAC/C,EAAWgD,EAA4B,KAAMC,EAAyB,KAAMC,EAAuB,KAAMC,EAA6B,QACxJ,MAAMxC,EAAYsB,EAAQI,MAAKC,GAAKA,EAAElC,KAAOJ,IAC1B,OAAfgD,IACFrC,EAAKd,QAAUmD,GAED,OAAZC,IACFtC,EAAKb,KAAOmD,GAEE,OAAZC,IACFvC,EAAK7B,KAAOoE,GAEM,OAAhBC,IACFxC,EAAKZ,SAAWoD,GAElB/B,aAAaM,QAAQ,UAAYR,KAAKS,UAAUM,GAAU,EA8H1DmB,WA3HiB,CAACpD,EAAWgD,EAA4B,KAAMC,EAAyB,KAAMC,EAAuB,KAAMC,EAA6B,QACxJ,MAAMxC,EAAYuB,EAAQG,MAAKC,GAAKA,EAAElC,KAAOJ,IAC1B,OAAfgD,IACFrC,EAAKd,QAAUmD,GAED,OAAZC,IACFtC,EAAKb,KAAOmD,GAEE,OAAZC,IACFvC,EAAK7B,KAAOoE,GAEM,OAAhBC,IACFxC,EAAKZ,SAAWoD,GAElB/B,aAAaM,QAAQ,UAAYR,KAAKS,UAAUO,GAAU,EA8G1DE,aACAiB,WAZiB,IAAMpB,EAavBqB,SA7Je,KA3BIpC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,MACtDmB,SAASe,IACpBA,EAAKzE,KAAO,EAAmByE,EAAKzE,MACpCmD,EAAQrB,KAAK,EAAK2C,EAAK1D,QAAS0D,EAAKzD,KAAMyD,EAAKzE,KAAMyE,EAAKxD,SAAUwD,EAAKnD,GAAImD,EAAKtD,YAAY,IAK5EiB,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,MACtDmB,SAASe,IAClBA,EAAKzE,KAAO,EAAmByE,EAAKzE,MACpCoD,EAAQtB,KAAK,EAAK2C,EAAK1D,QAAS0D,EAAKzD,KAAMyD,EAAKzE,KAAMyE,EAAKxD,SAAUwD,EAAKnD,GAAImD,EAAKtD,YAAY,GAAM,IAKjFiB,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,MACzDmB,SAASE,IACrBA,EAAQ5D,KAAO,EAAmB4D,EAAQ5D,MAC1C4D,EAAQjC,SAAS+B,SAASe,IACxBA,EAAKzE,KAAO,EAAmByE,EAAKzE,MAC7ByE,KAETpB,EAAWvB,KAAK,EAAQ8B,EAAQtC,GAAIsC,EAAQnC,KAAMmC,EAAQjC,SAAUiC,EAAQ5D,KAAM4D,EAAQ3C,UAAU,GAOtF,EA2JhByD,WAbiB,IAAMtB,EAcvBuB,WApFkBzD,IAClB,MAAM6B,EAAeI,EAAQU,WAAUL,GAAKA,EAAElC,KAAOJ,IAC/C0D,EAAWzB,EAAQF,OAAOF,EAAO,GAAG,GAC1C8B,QAAQC,IAAIF,GACZA,EAASrD,aACTe,aAAaM,QAAQ,UAAYR,KAAKS,UAAUM,IAChDC,EAAQtB,KAAK8C,GACbtC,aAAaM,QAAQ,UAAYR,KAAKS,UAAUO,GAAU,EA8E1D2B,WA3EkB7D,IAClB,MAAM6B,EAAeK,EAAQS,WAAUL,GAAKA,EAAElC,KAAOJ,IAC/C8D,EAAa5B,EAAQH,OAAOF,EAAO,GACzCiC,EAAW,GAAGzD,aACde,aAAaM,QAAQ,UAAYR,KAAKS,UAAUO,IAChDD,EAAQrB,KAAKkD,EAAW,IACxB1C,aAAaM,QAAQ,UAAYR,KAAKS,UAAUM,GAAU,EAsE1D8B,UA1FiB/D,GACViC,EAAQI,MAAKC,GAAKA,EAAElC,KAAOJ,IA0FlCgE,aApEoBhE,GACbkC,EAAQG,MAAKC,GAAKA,EAAElC,KAAOJ,IAoElCiE,cAjEoB,CAAC1D,EAAaC,EAAc1B,EAAYiB,KAC5D,MAAMK,EAAK,eACL8D,EAAqB,EAAQ9D,EAAIG,EAAMC,EAAO1B,EAAMiB,GAG1D,OAFAoC,EAAWvB,KAAKsD,GAChB9C,aAAaM,QAAQ,aAAeR,KAAKS,UAAUQ,IAC5C+B,CAAU,EA6DjBC,cA1DoB,CAACnE,EAAWoE,EAAyB,KAAMpD,EAAyB,KAAMkC,EAAuB,KAAMC,EAA6B,QACxJ,MAAMT,EAAkBP,EAAWE,MAAKC,GAAKA,EAAElC,KAAOJ,IACtC,OAAZoE,IACF1B,EAAQnC,KAAO6D,GAEA,OAAbpD,GACF0B,EAAQ3B,SAASC,GAEH,OAAZkC,IACFR,EAAQ5D,KAAOoE,GAEG,OAAhBC,IACFT,EAAQ3C,SAAWoD,GAErB/B,aAAaM,QAAQ,aAAeR,KAAKS,UAAUQ,GAAa,EA6ChEkC,cAnBoB,IAAMlC,EAoB1BS,gBACA0B,YArCmBtE,GACZmC,EAAWE,MAAKC,GAAKA,EAAElC,KAAOJ,IAqCrCuE,iBArBuB,KACvBnD,aAAaM,QAAQ,aAAeR,KAAKS,UAAUQ,GAAa,EAqBhEqC,WAnCkBxE,IACdiC,EAAQI,MAAKC,GAAKA,EAAElC,KAAOJ,IAC7BoC,EAAWpC,GACFkC,EAAQG,MAAKC,GAAKA,EAAElC,KAAOJ,IAzErB,CAAEA,IACnB,MAAM6B,EAAeK,EAAQS,WAAUL,GAAKA,EAAElC,KAAOJ,IACrDkC,EAAQH,OAAOF,EAAO,GACtBT,aAAaM,QAAQ,UAAYR,KAAKS,UAAUO,IAChD,SAAmBlC,EAAG,EAsEpByE,CAAWzE,GACFmC,EAAWE,MAAKC,GAAKA,EAAElC,KAAOJ,KACvC4C,EAAc5C,E,EA+BnB,EA7MuB,GCmGxB,EApGgC0E,IAC5BA,EAAEC,iBACF,MAAMC,EAASF,EAAEE,OACXC,EAAiCD,EAAiB,WAClDE,EAAW,IAAIC,SAASH,GACxBI,EAAOC,OAAOC,YAAYJ,GAChCF,EAAOO,QACPN,EAAaO,MAAMC,QAAU,OAC7B1B,QAAQC,IAAIoB,GACZ,aACEA,EAAKM,UACLN,EAAKO,YACL,IAAInG,KAAK4F,EAAKQ,UACdR,EAAKS,cACP,eAA4B,eAA6B,EAsF7D,EAnFuC,CAACf,EAAegB,KACnDhB,EAAEC,iBACF,MAAMC,EAASF,EAAEE,OACXe,EAA8Df,EAAiB,WAAGgB,WAAYA,WAC9Fd,EAAW,IAAIC,SAASH,GACxBI,EAAOC,OAAOC,YAAYJ,GAChCF,EAAOO,QACM,SAATO,GACF,aACAG,OAAOF,EAAQ3F,IACfgF,EAAKc,cACLd,EAAKe,gBACL,IAAI3G,KAAK4F,EAAKgB,cACdhB,EAAKiB,kBACL,eAA4B,kBAE5B,aACEJ,OAAOF,EAAQ3F,IACfgF,EAAKc,cACLd,EAAKe,gBACL,IAAI3G,KAAK4F,EAAKgB,cACdhB,EAAKiB,kBAEP,mBAAgC,gB,EA4DtC,EAxD0CvB,IACtCA,EAAEC,iBACF,MAAMC,EAASF,EAAEE,OACXC,EAAiCD,EAAiB,WAClDE,EAAW,IAAIC,SAASH,GACxBI,EAAOC,OAAOC,YAAYJ,GAChCF,EAAOO,QACPN,EAAaO,MAAMC,QAAU,OAC7B,gBACEL,EAAKkB,YACL,GACA,IAAI9G,KAAK4F,EAAKmB,aACdnB,EAAKoB,iBACP,kBAA+B,kBAAgC,EA2CnE,EAxC8C,CAAC1B,EAAetE,KAC1DsE,EAAEC,iBACF,MAAMC,EAASF,EAAEE,OACXC,EAAiCD,EAAiB,WAElDyB,EADW,IAAItB,SAASH,GACE0B,OAAO,mBAAmBC,KAAKC,GAAUX,OAAOW,KAChF5B,EAAOO,QACPN,EAAa4B,SACb,MAAM/D,EAAkB,cAA4BtC,GACpDsC,EAAQjC,SAAW,GACnB4F,EAAe7D,SAASkE,IACtBhE,EAAQhC,QAAQ,YAA0BgG,GAAgB,IAE9D,oBAAkC,EA2BpC,EAxB2ChC,IACvCA,EAAEC,iBACF,MAAMC,EAASF,EAAEE,OACX+B,EAAiE/B,EAAiB,WAAGgB,WAAYA,WACjGd,EAAW,IAAIC,SAASH,GACxBI,EAAOC,OAAOC,YAAYJ,GAChCF,EAAOO,QACP,gBACEU,OAAOc,EAAW3G,IAClBgF,EAAK4B,gBACL,KAAM,IAAIxH,KAAK4F,EAAK6B,iBACpB7B,EAAK8B,qBACP,kBAA+B,kBAAgC,ECmMnE,EA1RoB,MAClB,MAAMC,EAA0B,CAAC,MAAO,WAAY,QAC9CC,EAA6B,CAAC,SAAU,UAExCC,EAAuBC,SAASC,eAAe,YAAcD,SAASE,cAAc,WACpFC,EAAqBC,IACzB,MAAMC,EAAgCL,SAASE,cAAc,OAC7DG,EAAeC,aAAa,KAAM,kBAClC,MAAMC,EAAgCP,SAASE,cAAc,UAQ7D,OAPAK,EAAYD,aAAa,KAAM,eAC/BC,EAAYC,UAAY,uDACxBD,EAAYE,iBAAiB,SAAW,KACtCL,EAAQlC,MAAMC,QAAU,OACxB4B,EAAQW,UAAUnB,OAAO,UAAU,IAErCc,EAAeM,YAAYJ,GACpBF,CAAc,EAGjBO,EAAe,CAACC,EAAoBC,KACxC,MAAMC,EAAyBf,SAASE,cAAc,SAGtD,OAFAa,EAAMT,aAAa,MAAOO,GAC1BE,EAAMC,YAAcF,EACbC,CAAK,EAiBRE,EAAe,CAACC,EAAmBC,EAAwBC,EAA6B,QAC5F,MAAMC,EAA0BrB,SAASE,cAAc,OACvDmB,EAASX,UAAUY,IAAI,YACvBD,EAASV,YAAYC,EAAa,iBAAkB,cACpD,MAAMW,EAA0BvB,SAASE,cAAc,OAkBvD,OAjBAqB,EAASb,UAAUY,IAAI,kBACvBH,EAAa7F,SAASkG,IACpB,MAAMC,EAA+BzB,SAASE,cAAc,SAC5DuB,EAAYnB,aAAa,OAAQ,SACjCmB,EAAYnB,aAAa,OAAQY,GACjCO,EAAYnB,aAAa,QAASkB,GAClCC,EAAYnB,aAAa,KAAMkB,GAC3BA,IAAWJ,GACbK,EAAYnB,aAAa,UAAW,WAEtC,MAAMoB,EAA8B1B,SAASE,cAAc,SAC3DwB,EAAWpB,aAAa,MAAOkB,GAC/BE,EAAWV,YAAcQ,EAAO,GAAGG,cAAgBH,EAAOI,UAAU,GACpEL,EAASZ,YAAYc,GACrBF,EAASZ,YAAYe,EAAW,IAElCL,EAASV,YAAYY,GACdF,CAAQ,EAGXQ,EAAkBC,IACtBA,EAAWtB,UAAY,GACvBsB,EAAWpB,UAAUY,IAAI,cACzBQ,EAAWpB,UAAUnB,OAAO,cAAc,EAGtCwC,EAAoB,CAACpE,EAA2BqE,EAAuBxD,KAC3E,MAAMyD,EAAejC,SAASE,cAAc,UAC5C+B,EAAavB,UAAUY,IAAI,gBAC3BW,EAAazB,UAAY,sDACzByB,EAAaxB,iBAAiB,SAAW,KAC1B,YAATjC,EACF,kBAA+B,mBACb,SAATA,EACX,eAA4B,gBACR,SAATA,GACT,mBAAgC,e,IAGpC,MAAM0D,EAAelC,SAASE,cAAc,UAC5CgC,EAAaxB,UAAUY,IAAI,gBAC3BY,EAAa5B,aAAa,OAAQ,UAClC4B,EAAa5B,aAAa,OAAQ,YAClC4B,EAAa1B,UAAY,uDACzBwB,EAAKvB,iBAAiB,UAAajD,IACpB,SAATgB,EACF,EAAyChB,EAAG,QAC1B,YAATgB,EACT,EAA4ChB,GAC1B,SAATgB,GACT,EAAyChB,EAAG,O,IAGhDG,EAAagD,YAAYsB,GACzBtE,EAAagD,YAAYuB,EAAa,EAGlCC,EAAqB,KACzB,MAAMC,EAAiCpC,SAASE,cAAc,UAI9D,OAHAkC,EAAa9B,aAAa,OAAQ,UAClC8B,EAAa9B,aAAa,KAAM,cAChC8B,EAAapB,YAAc,MACpBoB,CAAY,EAGfC,EAAe,CAACC,EAAmBC,EAAmBzB,EAAmB0B,GAAW,KACxF,MAAMnB,EAA0BrB,SAASE,cAAc,OAIvD,OAHAmB,EAASX,UAAUY,IAAI,YACvBD,EAASV,YAAYC,EAAa2B,EAAWzB,IAC7CO,EAASV,YAxFe,EAAC2B,EAAmBC,EAAmBE,EAAa,QAASD,KACrF,MAAME,EAAyB1C,SAASE,cAAc,SAUtD,OATAwC,EAAMpC,aAAa,OAAQgC,GAC3BI,EAAMpC,aAAa,OAAQiC,GAC3BG,EAAMpC,aAAa,KAAMiC,IACR,IAAbC,GACFE,EAAMpC,aAAa,WAAY,QAEd,UAAfmC,GACFC,EAAMpC,aAAa,QAASmC,GAEvBC,CAAK,EA6ESC,CAAkBL,EAAWC,EAAW,QAASC,IAC/DnB,CAAQ,EAGXuB,EAAmB,CAACN,EAAmBC,EAAmBzB,EAAmB0B,GAAW,EAAMC,KAClG,MAAMC,EAAuBL,EAAaC,EAAWC,EAAWzB,EAAW0B,GAG3E,OAFoCE,EAAMG,cAAc,IAAIN,KACjDjD,MAAQmD,EACZC,CAAK,EAuJd,MAAO,CACLI,UArJgB,KAChB,MAAM1C,EAAyBJ,SAASE,cAAc,OACtDE,EAAQE,aAAa,KAAM,WAC3B,MAAMyC,EAAiC/C,SAASE,cAAc,MAC9D6C,EAAYrC,UAAUY,IAAI,eAC1ByB,EAAY/B,YAAc,iBAC1B,MAAMgB,EAAuBhC,SAASE,cAAc,QAapD,OAZA8B,EAAKrB,YAAY0B,EAAa,OAAQ,YAAa,WACnDL,EAAKrB,YAAY0B,EAAa,OAAQ,cAAe,uBAAuB,IAC5EL,EAAKrB,YAAY0B,EAAa,OAAQ,WAAY,cAClDL,EAAKrB,YAAYM,EAAa,eAAgBpB,IAC9CmC,EAAKrB,YAAYwB,KACjB/B,EAAQO,YAAYR,EAAkBC,IACtCA,EAAQO,YAAYoC,GACpB3C,EAAQO,YAAYqB,GACpBA,EAAKvB,iBAAiB,UAAajD,IACjC,EAAiCA,GACjCuC,EAAQW,UAAUnB,OAAO,UAAU,IAE9Ba,CAAO,EAmId4C,kBAhIwB,CAACxF,EAAcgB,KACvC,MAAMd,EAAqBF,EAAEE,OACvBC,EAA0CD,EAAiB,WAE3DuF,EADqCtF,EAAuB,WACvBkF,cAAc,gBACnDpJ,EACJ,YAA0BkF,OAAOjB,EAAOwF,aAAa,eACrD,eAA6BvE,OAAOjB,EAAOwF,aAAa,eAElDvK,QAAQwK,EAAevK,KAAKoI,EAAapJ,KAAKwL,EAAavK,SAASwK,GAAmB5J,EAC/FoI,EAAeoB,GACf,MAAMjB,EAAOhC,SAASE,cAAc,QACpC8B,EAAKtB,UAAUY,IAAI,eACnBU,EAAK1B,aAAa,KAAM,YACxB0B,EAAKrB,YAAYiC,EAAiB,OAAQ,gBAAiB,UAAU,EAAMO,IAC3EnB,EAAKrB,YAAYiC,EAAiB,OAAQ,kBAAmB,uBAAuB,EAAO5B,IAC3FgB,EAAKrB,YAAYiC,EAAiB,OAAQ,eAAgB,aAAa,EAAM,EAAmCQ,KAChHpB,EAAKrB,YAAYM,EAAa,mBAAoBpB,EAAgBwD,IAClEJ,EAAYtC,YAAYqB,GACxBrE,EAAa6C,UAAY,GACPuB,EAAkBpE,EAAcqE,EAAzC,SAATxD,EAAwD,OAAgD,OAAO,EA6G/G8E,qBA1G4B9F,IAC5B,MAAME,EAAqBF,EAAEE,OACvBC,EAA0CD,EAAiB,WAE3D6F,EADwC5F,EAAuB,WACpBkF,cAAc,mBACzDrH,EAAkB,cAA4BmD,OAAOjB,EAAOwF,aAAa,eACvE7J,KAAKmK,EAAa5L,KAAKwL,EAAavK,SAASwK,GAAoB7H,EACzEqG,EAAe0B,GACf,MAAMvB,EAAOhC,SAASE,cAAc,QACpC8B,EAAKtB,UAAUY,IAAI,kBACnBU,EAAK1B,aAAa,KAAM,YACxB0B,EAAKrB,YAAYiC,EAAiB,OAAQ,kBAAmB,SAAS,EAAMY,IAC5ExB,EAAKrB,YAAYiC,EAAiB,OAAQ,kBAAmB,aAAa,EAAM,EAAmCQ,KACnHpB,EAAKrB,YAAYM,EAAa,sBAAuBnB,EAAmBuD,IACxEE,EAAe5C,YAAYqB,GAC3BrE,EAAa6C,UAAY,GACzBuB,EAAkBpE,EAAcqE,EAAM,UAAU,EA2FhDyB,oBAxF0B,KAC1B,MAAMrD,EAAyBJ,SAASE,cAAc,OACtDE,EAAQE,aAAa,KAAM,kBAC3B,MAAMyC,EAAiC/C,SAASE,cAAc,MAC9D6C,EAAYrC,UAAUY,IAAI,eAC1ByB,EAAY/B,YAAc,oBAC1B,MAAMgB,EAAuBhC,SAASE,cAAc,QAYpD,OAXA8B,EAAKrB,YAAY0B,EAAa,OAAQ,cAAe,UACrDL,EAAKrB,YAAY0B,EAAa,OAAQ,cAAe,cACrDL,EAAKrB,YAAYM,EAAa,kBAAmBnB,IACjDkC,EAAKrB,YAAYwB,KACjB/B,EAAQO,YAAYR,EAAkBC,IACtCA,EAAQO,YAAYoC,GACpB3C,EAAQO,YAAYqB,GACpBA,EAAKvB,iBAAiB,UAAajD,IACjC,EAA2CA,GAC3CuC,EAAQW,UAAUnB,OAAO,UAAU,IAE9Ba,CAAO,EAuEdsD,wBApE8B,CAACC,EAAezK,EAAWuF,KACzD,MAAM2B,EAAyBJ,SAASE,cAAc,OACtDE,EAAQE,aAAa,KAAM,uBAC3BF,EAAQlC,MAAMC,QAAU,QACxB,MAAM4E,EAAiC/C,SAASE,cAAc,MAK9D,GAJA6C,EAAYrC,UAAUY,IAAI,eAC1ByB,EAAY/B,YAAc,2BAC1BZ,EAAQO,YAAYR,EAAkBC,IACtCA,EAAQO,YAAYoC,GAChB,eAA6B1H,OAAS,EAAG,CAC7C,MAAM2G,EAAuBhC,SAASE,cAAc,QAC9C1E,EAAmB,cAA4BtC,GAC/CmI,EAAWrB,SAASE,cAAc,OACxCmB,EAASX,UAAUY,IAAI,YACvBD,EAASV,YAAYC,EAAa,qBAAsB,kBACxD,MAAMgD,EAAY,eAA6BvE,KAAIwE,GAAKA,EAAE3K,KACpD4K,EAA6B9D,SAASE,cAAc,OAC1D4D,EAAYpD,UAAUY,IAAI,sBAC1BsC,EAAUtI,SAASpC,IACjB,MAAM6K,EAAgC/D,SAASE,cAAc,SAC7D6D,EAAazD,aAAa,OAAQ,YAClCyD,EAAazD,aAAa,KAAM,eAAepH,KAC/C6K,EAAazD,aAAa,QAAS,GAAGpH,KACtC6K,EAAazD,aAAa,OAAQ,mBAC7B9E,EAAQ5B,WAAsBoK,QAAOvK,GAAQA,EAAKP,KAAOA,IAAImC,OAAS,GACzE0I,EAAazD,aAAa,UAAW,QAEvC,MAAM2D,EAA6BjE,SAASE,cAAc,SAC1D+D,EAAU3D,aAAa,MAAO,eAAepH,KAC7C,MAAMgL,EAAclE,SAASE,cAAc,OAC3CgE,EAAYlD,YAAe,YAA0B9H,GAAaP,QAClE,MAAMX,EAAWgI,SAASE,cAAc,OACxClI,EAAS0I,UAAUY,IAAI,gBACvBtJ,EAASwI,UAAY,6EACf,EAA+B,YAA0BtH,GAAatB,QAC5EqM,EAAUtD,YAAYuD,GACtBD,EAAUtD,YAAY3I,GACtB8L,EAAYnD,YAAYoD,GACxBD,EAAYnD,YAAYsD,EAAU,IAEpC5C,EAASV,YAAYmD,GACrB9B,EAAKrB,YAAYU,GACjBW,EAAKrB,YAAYwB,KACjB/B,EAAQO,YAAYqB,GACpBA,EAAKvB,iBAAiB,UAAajD,IACjC,EAAgDA,EAAGtE,GACnD6G,EAAQW,UAAUnB,OAAO,WACzB,MAAM4E,EAAiBnE,SAASE,cAAc,OAC9CiE,EAAejG,MAAMC,QAAU,QAC/BgG,EAAezD,UAAUY,IAAI,kBAC7B6C,EAAe7D,aAAa,WAAYpH,EAAGkL,YAC3C,MAAMC,EAAc,iBAA8BnL,GAClDiL,EAAexD,YAAY0D,GAC1B5F,EAAQ6F,cAAiCC,aAAaJ,EAAgB1F,EAAQ,G,KAE5E,CACL,MAAM+F,EAAyBxE,SAASE,cAAc,OACtDsE,EAAQxD,YAAc,6CACtBZ,EAAQO,YAAY6D,E,CAEpB,OAAOpE,CAAO,EAUjB,EAxRmB,GCDdqE,EAAiB,MACrB,MAAM1E,EAAuBC,SAASC,eAAe,YAAcD,SAASE,cAAc,WAGpFwE,EAAoB7L,IACxB,OAAQA,GACN,IAAK,OACH,MAAO,MACT,IAAK,WACH,MAAO,SACT,IAAK,MACH,MAAO,QACT,IAAK,SACH,MAAO,UACT,IAAK,SACH,MAAO,UACV,QACG,MAAO,O,EAoEP8L,EAAkBzL,IACtB,MAAM0L,EAA0B5E,SAASE,cAAc,OACvD0E,EAASlE,UAAUY,IAAI,yBACvB,MAAM/H,EAAY,cAA4BL,GAAgBU,WAK9D,OAJEgL,EAASjE,YAxBe,EAACzH,EAAY0L,EAA0BvJ,KACjE,MAAMwJ,EAAM7E,SAASE,cAAc,OAEnC,GADA2E,EAAInE,UAAUY,IAAI,cACH,IAAXjG,EAAc,CAChB,MAAMyJ,EAA4B9E,SAASE,cAAc,OACzD4E,EAAWpE,UAAUY,IAAI,WACzBwD,EAAW9D,YAAc,gCACzB6D,EAAIlE,YAAYmE,E,CAElB,MAAMC,EAAkC/E,SAASE,cAAc,UAQ/D,OAPA6E,EAAcrE,UAAUY,IAAI,iBAC5ByD,EAAc/D,YAAc,mBAC5B+D,EAActE,iBAAiB,SAAUjD,IACvCuC,EAAQY,YAAY,0BAAoCnD,EAAGtE,EAAI0L,IAC/D7E,EAAQW,UAAUY,IAAI,UAAU,IAElCuD,EAAIlE,YAAYoE,GACTF,CAAG,EAOaG,CAAoB9L,EAAI0L,EAAUrL,EAAS8B,SAChE9B,EAAS+B,SAAS7B,IAChBwL,EAAmBxL,EAAMmL,EAAS,IAE/BA,CAAQ,EAyDXM,EAAc,KAClB,MAAMC,EAA0BnF,SAASE,cAAc,OAWvD,OAVAiF,EAASzE,UAAUY,IAAI,YACvB6D,EAAS3E,UAAY,UACrB2E,EAAS1E,iBAAiB,SAAUjD,IAClC,MAEMiB,EAFuBjB,EAAEE,OACagB,WACDA,WACrC0G,EAAYzG,OAAOF,EAAQ3F,IACjC,aAA2BsM,GAC3BC,EAAa,eAA6B,IAErCF,CAAQ,EAGXG,EAA4B,KAChC,MAAMC,EAAiCvF,SAASC,eAAe,gBACzDG,EAAyBJ,SAASC,eAAe,WACvDsF,EAAa9E,iBAAiB,SAAW,KACvCL,EAAQlC,MAAMC,QAAU,QACxB4B,EAAQW,UAAUY,IAAI,UAAU,GAChC,EAGEkE,EAAkB3M,IACtB,MAAM4M,EAA6BzF,SAASE,cAAc,OAG1D,OAFAuF,EAAY/E,UAAUY,IAAI,eAC1BmE,EAAYvH,MAAMwH,gBAAkBhB,EAAiB7L,GAC9C4M,CAAW,EAGdE,EAAkB,KACL3F,SAAS4F,iBAAiB,YAClCtK,SAASuK,IAChBA,EAAQpF,iBAAiB,SAAYjD,IAEnC,OAD0BA,EAAQ,OAAG1E,IAEnC,IAAK,WACH2L,EAAeqB,kBACf,MACF,IAAK,WACHrB,EAAesB,kBACf,MACF,IAAK,eACHtB,EAAeuB,qB,GAGnB,GACF,EAUEC,EAAe,CAACzH,EAAc0H,EAAuBC,KACzD,MAAMpG,EAAyBC,SAASE,cAAc,OAWtD,OAVAH,EAAQW,UAAUY,IAAI,GAAG9C,YACzB2H,EAAQ7K,SAAS8K,IACF,SAATA,EACFrG,EAAQY,YA/KW,CAAC/I,IACxB,MAAMyO,EAA6BrG,SAASE,cAAc,OAC1DmG,EAAY3F,UAAUY,IAAI,YAC1B,MAAMgF,EAA8BtG,SAASE,cAAc,OAI3D,OAHAoG,EAAa9F,UAAY,gEACzB6F,EAAY1F,YAAY2F,GACxBD,EAAY1F,YAvBW,EAAC/I,EAAWyO,KACrC,MAAMrO,EAA0BgI,SAASE,cAAc,OAC/CqG,EAAuB,EAA+B3O,GAY5D,OAXsB,IAAlB2O,EACFvO,EAASgJ,YAAc,EAA8BpJ,GAAQ,KAAO,EAA+BA,GAAQ,aAClG2O,GAAiB,EAC1BvO,EAASgJ,YAAc,EAA8BpJ,GAAQ,KAAO,EAA+BA,GAAQ,eAC/E,IAAnB2O,GACTF,EAAY3F,UAAUY,IAAI,cAC1BtJ,EAASgJ,YAAc,EAA8BpJ,GAAQ,KAAOS,KAAKmO,IAAI,EAA+B5O,IAAS,cAErHyO,EAAY3F,UAAUY,IAAI,cAC1BtJ,EAASgJ,YAAc,EAA8BpJ,GAAQ,KAAOS,KAAKmO,IAAI,EAA+B5O,IAAS,cAEhHI,CAAQ,EASSyO,CAAiB7O,EAAMyO,IACxCA,CAAW,EAwKMK,CAAiBR,EAAOtO,OAC1B,aAATwO,EACTrG,EAAQY,YAhKY,CAAC9H,IACzB,MAAM8N,EAA6B3G,SAASE,cAAc,OAC1DyG,EAAYjG,UAAUY,IAAI,gBAC1BqF,EAAYhG,YAVe,CAAC9H,IAC5B,MAAM+N,EAAgC5G,SAASE,cAAc,OAG7D,OAFA0G,EAAelG,UAAUY,IAAI,kBAC7BsF,EAAe1I,MAAMwH,gBAAkBhB,EAAiB7L,GACjD+N,CAAc,EAMGC,CAAqBhO,IAC7C,MAAMiO,EAA8B9G,SAASE,cAAc,OAG3D,OAFA4G,EAAa9F,YAAcnI,EAAW,YACtC8N,EAAYhG,YAAYmG,GACjBH,CAAW,EAyJMI,CAAkBb,EAAOrN,WAE7CkH,EAAQY,YAhBO,EAACnC,EAAc0H,EAAgBc,KAClD,MAAMC,EAA6BjH,SAASE,cAAc,OAG1D,OAFA+G,EAAYvG,UAAUY,IAAI,GAAG9C,IAAOwI,KACpCC,EAAYjG,YAAckF,EAAOc,GAC1BC,CAAW,EAYMC,CAAa1I,EAAM0H,EAAQE,G,IAG5CrG,CAAO,EAiBVoH,EAAY,CAACC,EAAkBC,KACnC,MAAMC,EAAsBtH,SAASE,cAAc,OACnDoH,EAAK5G,UAAUY,IAAI,WACnBgG,EAAKhH,aAAa,KAAM,GAAG8G,SAC3B,MAAMG,EAAsBH,EAASI,OAAO,GAAG7F,cAAgByF,EAASK,MAAM,GAE9E,OADAH,EAAK9G,UAAY,2CAA2C6G,YAAmBE,IACxED,CAAI,EAYPI,EAAe,KACnB3H,EAAQiB,YAAc,EAAE,EAkBpB2G,EAAgB,CAACzO,EAAYsF,KACjC,MAAMoJ,EAAyB5H,SAASE,cAAc,OAItD,OAHA0H,EAAQlH,UAAUY,IAAI,aACtBsG,EAAQjH,YArLe,EAACzH,EAAYsF,KACpC,MAAMqJ,EAA+B7H,SAASE,cAAc,UAa1D,OAZA2H,EAAWnH,UAAUY,IAAI,cACzBuG,EAAWvH,aAAa,WAAYpH,GACpC2O,EAAWrH,UAAY,sDACvBqH,EAAWpH,iBAAiB,SAAYjD,IACzB,YAATgB,EACF,uBAAiChB,GACf,SAATgB,EACT,oBAA8BhB,EAAG,QAEjC,oBAA8BA,EAAG,O,IAG9BqK,CAAU,EAuKCC,CAAiB5O,EAAIsF,IACzCoJ,EAAQjH,YArKiB,EAACzH,EAAYsF,KACtC,MAAMuJ,EAAiC/H,SAASE,cAAc,UAiB5D,OAhBA6H,EAAarH,UAAUY,IAAI,gBAC3ByG,EAAazH,aAAa,WAAYpH,GACtC6O,EAAavH,UAAY,wDACzBuH,EAAatH,iBAAiB,SAAYjD,IACxC,MAAME,EAAuBF,EAAEE,OACzBxE,EAAKyF,OAAOjB,EAAOwF,aAAa,aAClC8E,QAAQ,gFACV,aAA2B9O,GACd,YAATsF,EACHyJ,EAAgB,mBACG,SAATzJ,EACX6G,EAAa,gBAEb6C,EAAiB,gB,IAGdH,CAAY,EAmJDI,CAAmBjP,EAAIsF,IACpCoJ,CAAO,EAiCVQ,EAAc,KAChB,MAAMC,EAAqBrI,SAASE,cAAc,UAKlD,OAJAmI,EAAO/H,aAAa,KAAM,UAC1B+H,EAAO1H,YA5FO,MAChB,MAAM2H,EAAyBtI,SAASE,cAAc,OACtDoI,EAAQhI,aAAa,KAAM,WAC3B,MAAMiI,EAA2BvI,SAASE,cAAc,OACxDqI,EAAUjI,aAAa,KAAM,aAC7BiI,EAAU/H,UAAY,UACtB,MAAMgI,EAAsBxI,SAASE,cAAc,OAKnD,OAJAsI,EAAKlI,aAAa,KAAM,QACxBkI,EAAKxH,YAAc,QACnBsH,EAAQ3H,YAAY4H,GACpBD,EAAQ3H,YAAY6H,GACbF,CAAO,EAiFOG,IACnBJ,EAAO1H,YAtEgB,MACzB,MAAM+H,EAA+B1I,SAASE,cAAc,OAK5D,OAJAwI,EAAcpI,aAAa,KAAM,iBACjCoI,EAAc/H,YAAYwG,EAAU,OAAQ,UAC5CuB,EAAc/H,YAAYwG,EAAU,OAAQ,SAC5CuB,EAAc/H,YAAYwG,EAAU,WAAY,eACzCuB,CAAa,EAgECC,IACnBN,EAAO1H,YAZe,MACtB,MAAM4E,EAAiCvF,SAASE,cAAc,UAG9D,OAFAqF,EAAajF,aAAa,KAAM,gBAChCiF,EAAavE,YAAc,WACpBuE,CAAY,EAQAqD,IACZP,CAAM,EAiCXQ,EAAc,CAACC,EAAqB1B,KACtCM,IACA3H,EAAQY,YAAYyH,KACpB,MAAMvD,EAAqB7E,SAASE,cAAc,OAClD2E,EAAIvE,aAAa,KAAM,GAAGwI,QAC1B/I,EAAQY,YAAYkE,GACpB9E,EAAQY,YAAY,eACpB2E,IACCtF,SAASC,eAAe,GAAGmH,SAAmC1G,UAAUY,IAAI,UAC7EqE,GAAiB,EAuCfoD,EAAc,CAACC,EAAkBvK,EAAqBzF,GAAO,KACjE,MAAMiQ,EAAgBD,EAAW9P,GAAGkL,WAC9B3K,EAAsBuG,SAASE,cAAc,OACnDlH,EAAOS,EAAKiH,UAAUY,IAAI,YAAc7H,EAAKiH,UAAUY,IAAI,QAC3D7H,EAAK6G,aAAa,KAAM2I,GACxBxP,EAAKkH,YAAY6E,EAAewD,EAAWnQ,WAC3C,MAAMqQ,EAA2BlJ,SAASE,cAAc,OACxDgJ,EAAUxI,UAAUY,IAAI,aACxB,MAAM6H,EAA6BnJ,SAASE,cAAc,OAC1DiJ,EAAYzI,UAAUY,IAAI,eAC1BtI,EAAOmQ,EAAYxI,YAlRH,MAChB,MAAMyI,EAAwBpJ,SAASE,cAAc,OAWrD,OAVAkJ,EAAO1I,UAAUY,IAAI,YACrB8H,EAAO5I,UAAY,SACnB4I,EAAO3I,iBAAiB,SAAUjD,IAChC,MAEM6L,EAFuB7L,EAAEE,OACagB,WACDA,WACrC4K,EAAY3K,OAAO0K,EAAQvQ,IACjC,aAA2BwQ,GAC3BpB,EAAiB,eAA6B,IAEzCkB,CAAM,EAsQkBG,IAAeJ,EAAYxI,YAAYuE,KACtEgE,EAAUvI,YAAYwI,GACtBD,EAAUvI,YAAYsF,EAAa,OAAQ+C,EAAwC,CAAC,UAAW,OAAQ,OAAQ,cAC/GhQ,EAAOkQ,EAAUvI,YAAYgH,EAAcsB,EAAQ,SAAWC,EAAUvI,YAAYgH,EAAcsB,EAAQ,SAC1GxP,EAAKkH,YAAYuI,GACjBzK,EAAQkC,YAAYlH,EAAK,EAGrBwL,EAAqB,CAAC+D,EAAkBvK,KAC5C,MAAMwK,EAAgBD,EAAW9P,GAAGkL,WAC9B3K,EAAsBuG,SAASE,cAAc,OACnDzG,EAAKiH,UAAUY,IAAI,eACnB7H,EAAK6G,aAAa,KAAM2I,GACxBxP,EAAKkH,YAAY6E,EAAewD,EAAWnQ,WAC3CY,EAAKkH,YAAYsF,EAAa,OAAQ+C,EAAwC,CAAC,UAAW,OAAQ,OAAQ,cAC1GvK,EAAQkC,YAAYlH,EAAK,EAiBrB4L,EAAiBtK,IACrB,MAAM0D,EAAuBuB,SAASC,eAAe,YAAcD,SAASE,cAAc,WAE1F,GAxL+BF,SAASC,eAAe,WAC/Ce,YAAc,GAuLC,IAAnBjG,EAAQM,OAAc,CACxB,MAAMmO,EAA2BxJ,SAASE,cAAc,OAUxD,OATAsJ,EAAUlJ,aAAa,KAAM,aAC7BkJ,EAAUhJ,UAAY,gEACHgJ,EAAU3G,cAAc,WAChCpC,iBAAiB,SAAW,KACNT,SAASC,eAAe,WAC/C/B,MAAMC,QAAU,QACxB4B,EAAQW,UAAUY,IAAI,UAAU,SAElC7C,EAAQkC,YAAY6I,E,CAGGzO,EAAQ0O,MAAK,CAAC5F,EAAE6F,IAAM7F,EAAEjM,KAAKQ,UAAYsR,EAAE9R,KAAKQ,YAC/DkD,SAAS7B,GAAcsP,EAAYtP,EAAMgF,IAAS,EAGxDyJ,EAAoBlN,IApMOgF,SAASC,eAAe,WAC/Ce,YAAc,GAqMtB,MAAMqI,EAAyBrJ,SAASC,eAAe,WACvD,GAAuB,IAAnBjF,EAAQK,OAAc,CACxB,MAAMmO,EAA2BxJ,SAASE,cAAc,OAIxD,OAHAsJ,EAAUlJ,aAAa,KAAM,aAC7BkJ,EAAUhJ,UAAY,gCACtB6I,EAAQ1I,YAAY6I,E,CAGGxO,EAAQyO,MAAK,CAAC5F,EAAE6F,IAAM7F,EAAEjM,KAAKQ,UAAYsR,EAAE9R,KAAKQ,YAC/DkD,SAAS7B,GAAcsP,EAAYtP,EAAM4P,GAAS,IAAM,EAG9DpB,EAAmBhN,IA7MQ+E,SAASC,eAAe,cAC/Ce,YAAc,GA8MtB,MAAMvB,EAAaO,SAASC,eAAe,cAC3C,GAA0B,IAAtBhF,EAAWI,OAAc,CAC3B,MAAMmO,EAA2BxJ,SAASE,cAAc,OAUxD,OATAsJ,EAAUlJ,aAAa,KAAM,aAC7BkJ,EAAUhJ,UAAY,mEACcgJ,EAAU3G,cAAc,WACjDpC,iBAAiB,SAAW,KACNT,SAASC,eAAe,kBAC/C/B,MAAMC,QAAU,QACxB4B,EAAQW,UAAUY,IAAI,UAAU,SAElC7B,EAAWkB,YAAY6I,E,CAGGvO,EAAWwO,MAAK,CAAC5F,EAAE6F,IAAM7F,EAAEjM,KAAKQ,UAAYsR,EAAE9R,KAAKQ,YACrEkD,SAASE,GAjEE,EAACmO,EAAwBlK,KAC9C,MAAMmK,EAAkC5J,SAASE,cAAc,OAC/D0J,EAAiBlJ,UAAUY,IAAI,oBAC/B,MAAM9F,EAAyBwE,SAASE,cAAc,OACtD1E,EAAQkF,UAAUY,IAAI,WACtB9F,EAAQ8E,aAAa,KAAMqJ,EAAczQ,GAAGkL,YAC5C5I,EAAQmF,YAAY6E,EAAemE,EAAc9Q,WACjD2C,EAAQmF,YAvGoB,CAACgJ,IAC3B,MAAMT,EAA2BlJ,SAASE,cAAc,OACxDgJ,EAAUxI,UAAUY,IAAI,aACxB,MAAM6H,EAA6BnJ,SAASE,cAAc,OAM1D,OALAiJ,EAAYzI,UAAUY,IAAI,eAC1B6H,EAAYxI,YAAYuE,KACxBgE,EAAUvI,YAAYwI,GACtBD,EAAUvI,YAAYsF,EAAa,UAAW0D,EAA2C,CAAC,OAAQ,OAAQ,cAC1GT,EAAUvI,YAAYgH,EAAcgC,EAAczQ,GAAGkL,WAAY,YAC1D8E,CAAS,EA8FEW,CAAsBF,IAC1CnO,EAAQmF,YAzJiB,CAACzH,IACxB,MAAM4Q,EAA8B9J,SAASE,cAAc,OAmB3D,OAlBA4J,EAAapJ,UAAUY,IAAI,gBAC3BwI,EAAaxJ,aAAa,WAAYpH,EAAGkL,YACzC0F,EAAatJ,UAAY,6DACzBsJ,EAAarJ,iBAAiB,SAAW,KACvC,MAAMhB,EAA4BO,SAASC,eAAe/G,EAAGkL,YACvDQ,EAA0BnF,EAAsB,YACtDmF,EAAS5D,YAAc,GACvB4D,EAASjE,YAAYgE,EAAezL,IACL,SAA3B0L,EAAS1G,MAAMC,SACjByG,EAAS5D,YAAc,GACvB4D,EAASjE,YAAYgE,EAAezL,IACpC0L,EAAS1G,MAAMC,QAAU,SAEzByG,EAAS1G,MAAMC,QAAU,OAE3BsB,EAAWiB,UAAUqJ,OAAO,WAAW,IAGlCD,CAAY,EAqIDE,CAAmBL,EAAczQ,KACrD0Q,EAAiBjJ,YAAYnF,GAC7BoO,EAAiBjJ,YA9FS,CAACgJ,IACzB,MAAMxF,EAAiBnE,SAASE,cAAc,OAI9C,OAHAiE,EAAezD,UAAUY,IAAI,kBAC7B6C,EAAe7D,aAAa,WAAYqJ,EAAczQ,GAAGkL,YACzDD,EAAejG,MAAMC,QAAU,OACxBgG,CAAc,EAyFM8F,CAAoBN,IACjDlK,EAAWkB,YAAYiJ,EAAiB,EAsDDM,CAAe1O,EAASiE,IAAY,EAG7E,MAAO,CAAEqG,gBAnIe,KACtB+C,EAAY,OAAQ,QACpBxD,EAAa,eAA6B,EAiIlBU,gBA9HF,KACtB8C,EAAY,OAAQ,QACpBX,EAAiB,eAA6B,EA4HLlC,mBAzHhB,KACzB0B,IACA,MAAMjI,EAA4BO,SAASE,cAAc,OAUzD,GATAT,EAAWa,aAAa,KAAM,cAC9BP,EAAQY,YAAYyH,KAChB,kBAAgC/M,OAAS,GAC3C0E,EAAQY,YA3DqB,MAC7B,MAAMwJ,EAAqCnK,SAASE,cAAc,OAClEiK,EAAoB7J,aAAa,KAAM,uBACvC,MAAM8J,EAAqCpK,SAASE,cAAc,UAIlE,OAHAkK,EAAiB9J,aAAa,KAAM,oBACpC8J,EAAiBpJ,YAAc,oBAC/BmJ,EAAoBxJ,YAAYyJ,GACzBD,CAAmB,EAoDNE,IAEtBtK,EAAQY,YAAYlB,GACpBM,EAAQY,YAAY,eACpBZ,EAAQY,YAAY,yBACpB2E,IACI,kBAAgCjK,OAAS,EAAG,CAC9C,MAAMiP,EAAwCtK,SAASC,eAAe,oBAChEsK,EAA6BvK,SAASC,eAAe,kBAC3DqK,EAAoB7J,iBAAiB,SAAW,KAC9C8J,EAAerM,MAAMC,QAAU,QAC/B4B,EAAQW,UAAUY,IAAI,UAAU,G,CAGnCtB,SAASC,eAAe,gBAAmCS,UAAUY,IAAI,UAC1EqE,IACAsC,EAAgB,kBAAgC,EAmGa5C,eAAc6C,mBAAkBD,kBAAiBtD,iBACjH,EAhfsB,GAkfvB,ICnfA,aACA,mB","sources":["webpack://todo-site/./src/dateconverter.ts","webpack://todo-site/./src/todo.ts","webpack://todo-site/./src/project.ts","webpack://todo-site/./src/idgenerator.ts","webpack://todo-site/./src/datefixer.ts","webpack://todo-site/./src/todomanipulator.ts","webpack://todo-site/./src/formhandler.ts","webpack://todo-site/./src/formbuilder.ts","webpack://todo-site/./src/dom-manipulator.ts","webpack://todo-site/./src/index.ts"],"sourcesContent":["const dateConverter = (() => {\n  const convertToString = (date: Date) => {\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return day + '.' + month + '.' + year;\n  }\n  const convertToInputFormat = (date: Date) => {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return year + '-' + month + '-' + day;\n  }\n\n  const getDayDifference = (date: Date) => {\n    const toDoDate = date;\n    const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n    const timeDifference = toDoDate.getTime() - currentDate.getTime();\n    return Math.floor(timeDifference / (1000 * 3600 * 24));\n  }\n  return { convertToString, getDayDifference, convertToInputFormat };\n})();\n\nexport default dateConverter;\n","const toDo = (heading: string, text: string, date: Date, priority: string, id:number, projectiDs:number[], done = false) => {\n  let doneStatus = done;\n  const markAsDone = () => doneStatus = !doneStatus;\n  const getDoneStatus = () => doneStatus;\n  return { heading:heading, text:text, date:date, priority:priority, iD:id, projectiDs:projectiDs, markAsDone, getDoneStatus };\n};\n\nexport default toDo;","import toDoManipulator from \"./todomanipulator\";\n\nconst Project = (iD: number, name:string, toDos:ToDo[], date: Date, priority: string) => {\n  const addToDo = (toDo:ToDo) => {\n    toDos.push(toDo);\n    toDoManipulator.updateProjectAry();\n  };\n  const clearToDos = () => {\n    toDos = [];\n    toDoManipulator.updateProjectAry();\n  };\n  const getToDos = () => toDos;\n  const setToDos = (newToDos:ToDo[]) => {\n    toDos = newToDos;\n    toDoManipulator.updateProjectAry();\n  };\n  return { iD:iD, name:name, date:date, priority:priority, toDosAry:toDos, addToDo, clearToDos, getToDos, setToDos };\n}\n\nexport default Project;","const idGenerator = (() => {\n  const iDsAry:number[] = JSON.parse(localStorage.getItem(\"idsary\") || \"[]\");\n  const generateID = () => {\n    for (;;) {\n      const randID:number = Math.floor(Math.random() * (10000));\n      if (!iDsAry.includes(randID)) {\n        iDsAry.push(randID);\n        localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n        return randID;\n      }\n    }\n  }\n  const freeID = (id:number) => {\n    const index = iDsAry.indexOf(id);\n    iDsAry.splice(index, 1);\n    localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n  }\n  return { generateID, freeID }\n})();\n\nexport default idGenerator;\n","const dateFixer = (() => {\n  const fixDates = (dateString: string) => {\n    return new Date (dateString);\n  }\n  return { fixDates };\n})();\n\nexport default dateFixer;","import toDo from \"./todo\";\nimport Project from \"./project\";\nimport idGenerator from \"./idgenerator\";\nimport dateFixer from \"./datefixer\";\n\nconst toDoManipulator = (() => {\n\n  const toDoAry:ToDo[] = [];\n  const doneAry:ToDo[] = [];\n  const projectAry:Project[] = [];\n\n  const loadToDoAry = () => {\n    const rawToDoAry = JSON.parse(localStorage.getItem(\"todoary\") || \"[]\");\n    rawToDoAry.forEach((todo: ToDo) => {\n    todo.date = dateFixer.fixDates(todo.date);\n    toDoAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs));\n    });\n  }\n\n  const loadDoneAry = () => {\n    const rawDoneAry = JSON.parse(localStorage.getItem(\"doneary\") || \"[]\");\n    rawDoneAry.forEach((todo: ToDo) => {\n      todo.date = dateFixer.fixDates(todo.date);\n      doneAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD, todo.projectiDs, true));\n      });\n  }\n\n  const loadProjectAry = () => {\n    const rawProjectAry = JSON.parse(localStorage.getItem(\"projectary\") || \"[]\");\n    rawProjectAry.forEach((project: RawProject) => {\n      project.date = dateFixer.fixDates(project.date);\n      project.toDosAry.forEach((todo: ToDo) => {\n        todo.date = dateFixer.fixDates(todo.date);\n        return todo;\n        });\n      projectAry.push(Project(project.iD, project.name, project.toDosAry, project.date, project.priority));\n      });\n  }\n\n  const loadArys = () => {\n    loadToDoAry();\n    loadDoneAry();\n    loadProjectAry();\n  }\n\n  const createToDo = (heading: string, text: string, date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newToDo:ToDo = toDo(heading, text, date, priority, iD, []);\n    toDoAry.push(newToDo);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    return newToDo;\n  }\n\n  const modifyToDo = (id:number, newHeading: string | null = null, newText: string | null = null, newDate: Date | null = null, newPriority: string | null = null) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id) as ToDo;\n    if (newHeading !== null) {\n      toDo.heading = newHeading;\n    }\n    if (newText !== null) {\n      toDo.text = newText;\n    }\n    if (newDate !== null) {\n      toDo.date = newDate;\n    }\n    if (newPriority !== null) {\n      toDo.priority = newPriority;\n    }\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n  }\n\n  const modifyDone = (id:number, newHeading: string | null = null, newText: string | null = null, newDate: Date | null = null, newPriority: string | null = null) => {\n    const toDo:ToDo = doneAry.find(x => x.iD === id) as ToDo;\n    if (newHeading !== null) {\n      toDo.heading = newHeading;\n    }\n    if (newText !== null) {\n      toDo.text = newText;\n    }\n    if (newDate !== null) {\n      toDo.date = newDate;\n    }\n    if (newPriority !== null) {\n      toDo.priority = newPriority;\n    }\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n  }\n\n  const deleteToDo = ( id:number ) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id) as ToDo;\n    if (toDo.projectiDs.length > 0) {\n      toDo.projectiDs.forEach((projectiD) => {\n        const project:Project = projectAry.find(x => x.iD === projectiD) as Project;\n        const index = project.getToDos().indexOf(toDo);\n        project.getToDos().splice(index, 1);\n      });\n    }\n\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    toDoAry.splice(index, 1);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    idGenerator.freeID(id);\n  }\n\n  const deleteDone = ( id:number ) => {\n    const index:number = doneAry.findIndex(x => x.iD === id);\n    doneAry.splice(index, 1);\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findTodDo = (id:number) => {\n    return toDoAry.find(x => x.iD === id);\n  }\n\n  const moveToDone = (id:number) => {\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    const doneToDo = toDoAry.splice(index, 1)[0];\n    console.log(doneToDo);\n    doneToDo.markAsDone();\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    doneAry.push(doneToDo);\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n  }\n\n  const revertDone = (id:number) => {\n    const index:number = doneAry.findIndex(x => x.iD === id);\n    const undoneToDo = doneAry.splice(index, 1);\n    undoneToDo[0].markAsDone();\n    localStorage.setItem('doneary', (JSON.stringify(doneAry)));\n    toDoAry.push(undoneToDo[0]);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n  }\n\n  const findDoneToDo = (id:number) => {\n    return doneAry.find(x => x.iD === id);\n  }\n\n  const createProject = (name:string, toDos:ToDo[], date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newProject:Project = Project(iD, name, toDos, date, priority);\n    projectAry.push(newProject);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    return newProject;\n  }\n\n  const modifyProject = (id:number, newName: string | null = null, newToDos:ToDo[] | null = null, newDate: Date | null = null, newPriority: string | null = null) => {\n    const project:Project = projectAry.find(x => x.iD === id) as Project;\n    if (newName !== null) {\n      project.name = newName;\n    }\n    if (newToDos !== null) {\n      project.setToDos(newToDos);\n    }\n    if (newDate !== null) {\n      project.date = newDate;\n    }\n    if (newPriority !== null) {\n      project.priority = newPriority;\n    }\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n  }\n\n  const deleteProject = (id:number) => {\n    const index:number = projectAry.findIndex(x => x.iD === id);\n    projectAry.splice(index, 1);\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findProject = (id:number) => {\n    return projectAry.find(x => x.iD === id);\n  }\n\n  const deleteItem = (id:number) => {\n    if (toDoAry.find(x => x.iD === id)) {\n      deleteToDo(id);\n    } else if (doneAry.find(x => x.iD === id)) {\n      deleteDone(id);\n    } else if (projectAry.find(x => x.iD === id)) {\n      deleteProject(id);\n    }\n  }\n\n  const getToDoAry = () => toDoAry;\n  const getDoneAry = () => doneAry;\n  const getProjectAry = () => projectAry;\n  const updateProjectAry = () => {\n    localStorage.setItem('projectary', (JSON.stringify(projectAry)));\n  }\n\n  return { \n    createToDo, \n    modifyToDo,\n    modifyDone,\n    deleteToDo, \n    getToDoAry, \n    loadArys, \n    getDoneAry, \n    moveToDone,\n    revertDone,\n    findTodDo,\n    findDoneToDo,\n    createProject,\n    modifyProject, \n    getProjectAry,\n    deleteProject,\n    findProject,\n    updateProjectAry,\n    deleteItem\n  }\n})();\n\nexport default toDoManipulator;","import domManipulator from \"./dom-manipulator\";\nimport toDoManipulator from \"./todomanipulator\";\n\nconst formHandler =(() => {\n  const handleFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const formData = new FormData(target);\n    const data = Object.fromEntries(formData);\n    target.reset();\n    targetParent.style.display = 'none';\n    console.log(data);\n    toDoManipulator.createToDo(\n      data.todotitle as string, \n      data.todocontent as string, \n      new Date(data.tododate as string), \n      data.todopriority as string);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n\n  const handleToDoEditFormSubmission = (e:SubmitEvent, type: string) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const toDoDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const formData = new FormData(target);\n    const data = Object.fromEntries(formData);\n    target.reset();\n    if (type === 'todo') {\n      toDoManipulator.modifyToDo(\n      Number(toDoDiv.id), \n      data.todotitleedit as string, \n      data.todocontentedit as string, \n      new Date(data.tododateedit as string), \n      data.todopriorityedit as string);\n      domManipulator.displayToDos(toDoManipulator.getToDoAry());\n    } else {\n      toDoManipulator.modifyDone(\n        Number(toDoDiv.id), \n        data.todotitleedit as string, \n        data.todocontentedit as string, \n        new Date(data.tododateedit as string), \n        data.todopriorityedit as string\n      );\n      domManipulator.displayDoneToDos(toDoManipulator.getDoneAry());\n    }  \n  }\n\n  const handleNewProjectFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const formData = new FormData(target);\n    const data = Object.fromEntries(formData);\n    target.reset();\n    targetParent.style.display = 'none';\n    toDoManipulator.createProject(\n      data.projectname as string, \n      [], \n      new Date(data.projectdate as string), \n      data.projectpriority as string);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  const handleAddProjectToDosFormSubmission = (e:SubmitEvent, iD:number) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const formData = new FormData(target);\n    const projectToDoIds = formData.getAll('projectcheckbox').map((value) => Number(value));\n    target.reset()\n    targetParent.remove();\n    const project:Project = toDoManipulator.findProject(iD) as Project;\n    project.toDosAry = [];\n    projectToDoIds.forEach((toDoId) => {\n      project.addToDo(toDoManipulator.findTodDo(toDoId) as ToDo);\n  });\n  toDoManipulator.updateProjectAry();\n  }\n  \n  const handleProjectEditFormSubmission = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const projectDiv = (<HTMLDivElement>(<HTMLDivElement>(<HTMLDivElement>(target.parentNode)).parentNode).parentNode);\n    const formData = new FormData(target);\n    const data = Object.fromEntries(formData);\n    target.reset();\n    toDoManipulator.modifyProject(\n      Number(projectDiv.id), \n      data.projectnameedit as string,\n      null, new Date(data.projectdateedit as string), \n      data.projectpriorityedit as string);\n    domManipulator.displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  return {\n    handleFormSubmission, \n    handleToDoEditFormSubmission, \n    handleNewProjectFormSubmission, \n    handleAddProjectToDosFormSubmission,\n    handleProjectEditFormSubmission\n  };\n})();\n\nexport default formHandler","import toDoManipulator from \"./todomanipulator\";\nimport formHandler from \"./formhandler\";\nimport dateConverter from \"./dateconverter\";\nimport domManipulator from \"./dom-manipulator\";\n\nconst formBuilder = (() => {\n  const toDoPriorities:string[] = ['Low', 'Standard', 'High'];\n  const projectPriorities:string[] = ['Normal', 'Urgent'];\n\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  const createCloseButton = (formDiv:HTMLDivElement) => {\n    const closeButtonDiv:HTMLDivElement = document.createElement('div');\n    closeButtonDiv.setAttribute('id', 'closebuttondiv');\n    const closeButton:HTMLButtonElement = document.createElement('button');\n    closeButton.setAttribute('id', 'closebutton');\n    closeButton.innerHTML = '<span class=\"material-symbols-outlined\">close</span>';\n    closeButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'none';\n      content.classList.remove('blurred');\n    });\n    closeButtonDiv.appendChild(closeButton);\n    return closeButtonDiv;\n  }\n\n  const labelCreator = (forElement: string, labelText: string) => {\n    const label:HTMLLabelElement = document.createElement('label');\n    label.setAttribute('for', forElement);\n    label.textContent = labelText;\n    return label;\n  }\n\n  const inputFieldCreator = (fieldType: string, fieldName: string, fieldValue = 'empty', required:boolean) => {\n    const field:HTMLInputElement = document.createElement('input');\n    field.setAttribute('type', fieldType);\n    field.setAttribute('name', fieldName);\n    field.setAttribute('id', fieldName);\n    if (required === true) {\n      field.setAttribute('required', 'true');\n    }\n    if (fieldValue !== 'empty') {\n      field.setAttribute('value', fieldValue);\n    }\n    return field;\n  }\n\n  const radioCreator = (radioName: string, radioOptions: string[], checkedValue:string | null = null) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('radiocontainer', 'Priority:'));\n    const radioDiv:HTMLDivElement = document.createElement('div');\n    radioDiv.classList.add('radiocontainer');\n    radioOptions.forEach((option) => {\n      const radioButton:HTMLInputElement = document.createElement('input');\n      radioButton.setAttribute('type', 'radio');\n      radioButton.setAttribute('name', radioName);\n      radioButton.setAttribute('value', option);\n      radioButton.setAttribute('id', option);\n      if (option === checkedValue) {\n        radioButton.setAttribute('checked', 'checked');\n      }\n      const radioLabel:HTMLLabelElement = document.createElement('label');\n      radioLabel.setAttribute('for', option);\n      radioLabel.textContent = option[0].toUpperCase() + option.substring(1);\n      radioDiv.appendChild(radioButton);\n      radioDiv.appendChild(radioLabel);\n    })\n    inputDiv.appendChild(radioDiv);\n    return inputDiv\n  }\n\n  const prepareContent = (contentDiv: HTMLElement) => {\n    contentDiv.innerHTML = '';\n    contentDiv.classList.add('duringedit');\n    contentDiv.classList.remove('todocontent');\n  }\n\n  const sideButtonCreator = (targetParent: HTMLElement, form: HTMLFormElement, type: string) => {\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancelbutton');\n    cancelButton.innerHTML = '<span class=\"material-symbols-outlined\">undo</span>';\n    cancelButton.addEventListener(('click'), () => {\n      if (type === 'project') {\n        domManipulator.displayProjects(toDoManipulator.getProjectAry());\n      } else if (type === 'todo') {\n      domManipulator.displayToDos(toDoManipulator.getToDoAry());\n      } else if (type === 'done') {\n        domManipulator.displayDoneToDos(toDoManipulator.getDoneAry());\n      }\n    });\n    const acceptButton = document.createElement('button');\n    acceptButton.classList.add('acceptbutton');\n    acceptButton.setAttribute('type', 'submit')\n    acceptButton.setAttribute('form', 'editform');\n    acceptButton.innerHTML = '<span class=\"material-symbols-outlined\">check</span>';\n    form.addEventListener(('submit'), (e) => {\n      if (type === 'todo') {\n        formHandler.handleToDoEditFormSubmission(e, 'todo');\n      } else if (type === 'project') {\n        formHandler.handleProjectEditFormSubmission(e);\n      } else if (type === 'done') {\n        formHandler.handleToDoEditFormSubmission(e, 'done');\n      }\n    })\n    targetParent.appendChild(cancelButton);\n    targetParent.appendChild(acceptButton);\n  }\n\n  const createSubmitButton = () => {\n    const submitButton:HTMLButtonElement = document.createElement('button');\n    submitButton.setAttribute('type', 'submit');\n    submitButton.setAttribute('id', 'todosubmit');\n    submitButton.textContent = 'Add';\n    return submitButton;\n  }\n\n  const inputCreator = (fieldType: string, fieldName: string, labelText: string, required = true) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator(fieldName, labelText));\n    inputDiv.appendChild(inputFieldCreator(fieldType, fieldName, 'empty', required));\n    return inputDiv;\n  }\n\n  const editInputCreator = (fieldType: string, fieldName: string, labelText: string, required = true, fieldValue: string) => {\n    const field:HTMLDivElement = inputCreator(fieldType, fieldName, labelText, required);\n    const inputField:HTMLInputElement = field.querySelector(`#${fieldName}`) as HTMLInputElement;\n    inputField.value = fieldValue;\n    return field;\n  }\n\n  const buildForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'formdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new ToDo';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'todotitle', 'Title:'));\n    form.appendChild(inputCreator('text', 'todocontent', 'Content (optional):', false))\n    form.appendChild(inputCreator('date', 'tododate', 'Due date:'));\n    form.appendChild(radioCreator('todopriority', toDoPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => { \n      formHandler.handleFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n\n  const buildToDoEditForm = (e:MouseEvent, type: string) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const toDoDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const toDoContent:HTMLDivElement = toDoDiv.querySelector('.todocontent') as HTMLDivElement;\n    const toDo:ToDo = (\n      toDoManipulator.findTodDo(Number(target.getAttribute('objectid'))) ||\n      toDoManipulator.findDoneToDo(Number(target.getAttribute('objectid')))\n      ) as ToDo;\n    const { heading:headerContent, text:textContent, date:dateContent, priority:priorityContent} = toDo;\n    prepareContent(toDoContent);\n    const form = document.createElement('form');\n    form.classList.add('todocontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'todotitleedit', 'Title:', true, headerContent));\n    form.appendChild(editInputCreator('text', 'todocontentedit', 'Content (optional):', false, textContent));\n    form.appendChild(editInputCreator('date', 'tododateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('todopriorityedit', toDoPriorities, priorityContent));\n    toDoContent.appendChild(form);\n    targetParent.innerHTML = '';\n    type === 'done' ? sideButtonCreator(targetParent, form, 'done') : sideButtonCreator(targetParent, form, 'todo');\n  }\n\n  const buildProjectEditForm = (e:MouseEvent) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const projectDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const projectContent:HTMLDivElement = projectDiv.querySelector('.projectcontent') as HTMLDivElement;\n    const project:Project = toDoManipulator.findProject(Number(target.getAttribute('objectid'))) as Project;\n    const { name:nameContent, date:dateContent, priority:priorityContent } = project;\n    prepareContent(projectContent);\n    const form = document.createElement('form');\n    form.classList.add('projectcontent');\n    form.setAttribute('id', 'editform');\n    form.appendChild(editInputCreator('text', 'projectnameedit', 'Name:', true, nameContent));\n    form.appendChild(editInputCreator('date', 'projectdateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    form.appendChild(radioCreator('projectpriorityedit', projectPriorities, priorityContent));\n    projectContent.appendChild(form);\n    targetParent.innerHTML = '';\n    sideButtonCreator(targetParent, form, 'project');\n  }\n\n  const buildNewProjectForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projectformdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add a new Project';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'projectname', 'Name:'));\n    form.appendChild(inputCreator('date', 'projectdate', 'Due date:'));\n    form.appendChild(radioCreator('projectpriority', projectPriorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleNewProjectFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  }\n\n  const buildAddProjectToDoForm = (_e:MouseEvent, iD:number, toDoDiv:HTMLDivElement) => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'projecttodosformdiv');\n    formDiv.style.display = 'block';\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.classList.add('formheading');\n    formHeading.textContent = 'Add new ToDos to Project';\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    if (toDoManipulator.getToDoAry().length > 0) {\n    const form:HTMLFormElement = document.createElement('form');\n    const project: Project = toDoManipulator.findProject(iD) as Project;\n    const inputDiv = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('projectcheckboxdiv', 'Select ToDos:'))\n    const toDoIdAry = toDoManipulator.getToDoAry().map(a => a.iD);\n    const toDoFormDiv:HTMLDivElement = document.createElement('div');\n    toDoFormDiv.classList.add('projectcheckboxdiv');\n    toDoIdAry.forEach((iD:number) => {\n      const toDoCheckbox:HTMLInputElement = document.createElement('input');\n      toDoCheckbox.setAttribute('type', 'checkbox');\n      toDoCheckbox.setAttribute('id', `todocheckbox${iD}`);\n      toDoCheckbox.setAttribute('value', `${iD}`);\n      toDoCheckbox.setAttribute('name', 'projectcheckbox');\n      if ((project.getToDos() as ToDo[]).filter(toDo => toDo.iD === iD).length > 0) {\n        toDoCheckbox.setAttribute('checked', 'true');\n      }\n      const toDoLabel:HTMLLabelElement = document.createElement('label');\n      toDoLabel.setAttribute('for', `todocheckbox${iD}`);\n      const toDoHeading = document.createElement('div');\n      toDoHeading.textContent = (toDoManipulator.findTodDo(iD) as ToDo).heading;\n      const toDoDate = document.createElement('div');\n      toDoDate.classList.add('formtododate');\n      toDoDate.innerHTML = `<span class=\"material-symbols-outlined\">calendar_month</span> \n          ${dateConverter.convertToString((toDoManipulator.findTodDo(iD) as ToDo).date)}`\n      toDoLabel.appendChild(toDoHeading);\n      toDoLabel.appendChild(toDoDate);\n      toDoFormDiv.appendChild(toDoCheckbox);\n      toDoFormDiv.appendChild(toDoLabel);\n    });\n    inputDiv.appendChild(toDoFormDiv);\n    form.appendChild(inputDiv);\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => {\n      formHandler.handleAddProjectToDosFormSubmission(e, iD);\n      content.classList.remove('blurred');\n      const projectToDoDiv = document.createElement('div');\n      projectToDoDiv.style.display = 'block';\n      projectToDoDiv.classList.add('projecttododiv');\n      projectToDoDiv.setAttribute('objectid', iD.toString());\n      const newToDosDiv = domManipulator.createToDosDiv(iD);\n      projectToDoDiv.appendChild(newToDosDiv);\n      (toDoDiv.parentElement as HTMLDivElement).replaceChild(projectToDoDiv, toDoDiv);\n    });\n  } else {\n    const noToDos:HTMLDivElement = document.createElement('div');\n    noToDos.textContent = 'There are no ToDos to add to this Project.';\n    formDiv.appendChild(noToDos);\n  }\n    return formDiv;\n  }\n\n  return { \n    buildForm, \n    buildToDoEditForm,\n    buildProjectEditForm,\n    buildNewProjectForm, \n    buildAddProjectToDoForm \n  };\n})()\n\nexport default formBuilder;","import dateConverter from './dateconverter';\nimport toDoManipulator from './todomanipulator';\nimport formBuilder from './formbuilder';\n\nconst domManipulator = (() => {\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  \n  // Subfunctions for helper functions\n  const getPriorityColor = (priority:string) => {\n    switch (priority) {\n      case 'High':\n        return 'red';\n      case 'Standard':\n        return 'orange';\n      case 'Low':\n        return 'green';\n      case 'Normal':\n        return 'skyblue';\n      case 'Urgent':\n        return 'crimson';\n     default:\n        return 'gray';\n    }\n  }\n  \n  const createDateString = (date:Date, toDoDateDiv: HTMLElement) => {\n  const toDoDate:HTMLDivElement = document.createElement('div');\n    const dayDifference:number = dateConverter.getDayDifference(date);\n    if (dayDifference === 1) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' day left)';  \n    } else if (dayDifference >= 0) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' days left)';  \n    } else if (dayDifference === -1) {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' day ago)';\n    } else {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' days ago)';\n    }\n    return toDoDate;\n  }\n\n  const buildElementDate = (date: Date) => {\n    const toDoDateDiv:HTMLDivElement = document.createElement('div');\n    toDoDateDiv.classList.add('tododate');\n    const toDoDateIcon:HTMLDivElement = document.createElement('div');\n    toDoDateIcon.innerHTML = '<span class=\"material-symbols-outlined\">calendar_month</span>';\n    toDoDateDiv.appendChild(toDoDateIcon);\n    toDoDateDiv.appendChild(createDateString(date, toDoDateDiv));\n    return toDoDateDiv;\n  };\n\n  const createPriorityCircle = (priority: string) => {\n    const priorityCircle:HTMLDivElement = document.createElement('div');\n    priorityCircle.classList.add('prioritycircle');\n    priorityCircle.style.backgroundColor = getPriorityColor(priority);\n    return priorityCircle;\n  };\n  \n  const createPriorityDiv = (priority: string) => {\n    const priorityDiv:HTMLDivElement = document.createElement('div');\n    priorityDiv.classList.add('todopriority');\n    priorityDiv.appendChild(createPriorityCircle(priority));\n    const priorityText:HTMLDivElement = document.createElement('div');\n    priorityText.textContent = priority + ' priority';\n    priorityDiv.appendChild(priorityText);\n    return priorityDiv;\n  }\n\n  const createNoToDosButton = (iD: number, toDosDiv: HTMLDivElement, length: number) => {\n    const div = document.createElement('div');\n    div.classList.add('notodosdiv');\n    if (length === 0) {\n      const noToDosDiv:HTMLDivElement = document.createElement('div');\n      noToDosDiv.classList.add('notodos');\n      noToDosDiv.textContent = 'No ToDos for this project yet';\n      div.appendChild(noToDosDiv);\n    }\n    const noToDosButton:HTMLButtonElement = document.createElement('button');\n    noToDosButton.classList.add('addtodobutton');\n    noToDosButton.textContent = 'Add/Remove ToDos';\n    noToDosButton.addEventListener('click', (e) => {\n      content.appendChild(formBuilder.buildAddProjectToDoForm(e, iD, toDosDiv));\n      content.classList.add('blurred');\n    });\n    div.appendChild(noToDosButton);\n    return div\n  }\n\n  const createToDosDiv = (iD: number) => { \n    const toDosDiv:HTMLDivElement = document.createElement('div');\n    toDosDiv.classList.add('projecttodoscontainer');\n    const toDosAry = (toDoManipulator.findProject(iD) as Project).getToDos() as ToDo[];\n      toDosDiv.appendChild(createNoToDosButton(iD, toDosDiv, toDosAry.length));\n      toDosAry.forEach((toDo) => {\n        projectToDoBuilder(toDo, toDosDiv);\n    });\n    return toDosDiv;\n  }\n\n  const createEditButton = (iD: string, type: string) => {\n    const editButton:HTMLButtonElement = document.createElement('button');\n      editButton.classList.add('editbutton');\n      editButton.setAttribute('objectid', iD);\n      editButton.innerHTML = '<span class=\"material-symbols-outlined\">edit</span>';\n      editButton.addEventListener(('click'), (e) => {\n        if (type === 'project') {\n          formBuilder.buildProjectEditForm(e);\n        } else if (type === 'todo') {\n          formBuilder.buildToDoEditForm(e, 'todo');\n        } else {\n          formBuilder.buildToDoEditForm(e, 'done');\n        }\n      });\n      return editButton;\n  }\n\n  const createDeleteButton = (iD: string, type: string) => {\n    const deleteButton:HTMLButtonElement = document.createElement('button');\n      deleteButton.classList.add('deletebutton');\n      deleteButton.setAttribute('objectid', iD);\n      deleteButton.innerHTML = '<span class=\"material-symbols-outlined\">delete</span>';\n      deleteButton.addEventListener(('click'), (e) => {\n        const target = (<HTMLElement>e.target);\n        const iD = Number(target.getAttribute('objectid'));\n        if (confirm('Are you sure you want to delete that?\\n(This is an irreversible operation)')) {\n          toDoManipulator.deleteItem(iD)\n          if (type === 'project') {\n           displayProjects(toDoManipulator.getProjectAry());\n          } else if (type === 'todo') {\n          displayToDos(toDoManipulator.getToDoAry());  \n        } else {\n          displayDoneToDos(toDoManipulator.getDoneAry());\n        }\n      }});\n      return deleteButton;\n  };\n  \n  // Helper functions that are not returned\n  const addRevert = () => {\n    const revert:HTMLDivElement = document.createElement('div');\n    revert.classList.add('checkbox');\n    revert.innerHTML = '&#8617';\n    revert.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const doneDiv = (<HTMLElement>targetParent.parentNode);\n      const doneDiviD = Number(doneDiv.id);\n      toDoManipulator.revertDone(doneDiviD);\n      displayDoneToDos(toDoManipulator.getDoneAry());\n    });\n    return revert;\n  }\n  \n  const addCheckBox = () => {\n    const checkbox:HTMLDivElement = document.createElement('div');\n    checkbox.classList.add('checkbox');\n    checkbox.innerHTML = '&#10003';\n    checkbox.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const toDoDiv = (<HTMLElement>targetParent.parentNode);\n      const toDoDiviD = Number(toDoDiv.id);\n      toDoManipulator.moveToDone(toDoDiviD);\n      displayToDos(toDoManipulator.getToDoAry());\n      });\n    return checkbox;\n  };\n\n  const addNewButtonEventListener = () => {\n    const addNewButton:HTMLButtonElement = document.getElementById('addnewbutton') as HTMLButtonElement;\n    const formDiv:HTMLDivElement = document.getElementById('formdiv') as HTMLDivElement;\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n  }\n\n  const addLabelStripe = (priority: string) => {\n    const labelStripe:HTMLDivElement = document.createElement('div');\n    labelStripe.classList.add('labelstripe');\n    labelStripe.style.backgroundColor = getPriorityColor(priority);\n    return labelStripe;\n  };\n\n  const addNavListeners = () => {\n    const navItems = document.querySelectorAll('.navitem') as NodeListOf<HTMLDivElement>;\n    navItems.forEach((element: HTMLDivElement) => {\n      element.addEventListener(('click'), (e:MouseEvent) => {\n        const iD = (<HTMLElement>(e.target)).id;\n        switch (iD) {\n          case 'homelink':\n            domManipulator.homePageBuilder();\n            break;\n          case 'donelink':\n            domManipulator.donePageBuilder();\n            break;\n          case 'projectslink':\n            domManipulator.projectPageBuilder();\n            break;\n        } \n      });\n    });\n  };\n\n  const buildElement = (type: string, object: object, propName: string) => {\n    const toDoElement:HTMLDivElement = document.createElement('div');\n    toDoElement.classList.add(`${type}${propName}`);\n    toDoElement.textContent = object[propName as keyof object];\n    return toDoElement;\n  };\n\n  const buildContent = (type: string, object: generalObject, propAry: string[]) => {\n    const content:HTMLDivElement = document.createElement('div');\n    content.classList.add(`${type}content`);\n    propAry.forEach((prop) => {\n      if (prop === 'date') {\n        content.appendChild(buildElementDate(object.date as Date))\n      } else if (prop === 'priority') {\n        content.appendChild(createPriorityDiv(object.priority as string))\n      } else {\n        content.appendChild(buildElement(type, object, prop));\n      }\n    });\n    return content;\n  } \n\n  const buildLogo = () => {\n    const logodiv:HTMLDivElement = document.createElement('div');\n    logodiv.setAttribute('id', 'logodiv');\n    const checkmark:HTMLDivElement = document.createElement('div');\n    checkmark.setAttribute('id', 'checkmark');\n    checkmark.innerHTML = '&#10003';\n    const logo:HTMLDivElement = document.createElement('div');\n    logo.setAttribute('id', 'logo');\n    logo.textContent = 'To Do';\n    logodiv.appendChild(checkmark);\n    logodiv.appendChild(logo);\n    return logodiv;\n  }\n\n  const buildLink = (linkName: string, linkIcon: string) => {\n    const link:HTMLDivElement = document.createElement('div');\n    link.classList.add('navitem');\n    link.setAttribute('id', `${linkName}link`);\n    const capitalizedLinkName = linkName.charAt(0).toUpperCase() + linkName.slice(1); \n    link.innerHTML = `<span class=\"material-symbols-outlined\">${linkIcon}</span> ${capitalizedLinkName}`;\n    return link\n  }\n  \n  const buildNavigationDiv = () => {\n    const navigationDiv:HTMLDivElement = document.createElement('div');\n    navigationDiv.setAttribute('id', 'navigationdiv');\n    navigationDiv.appendChild(buildLink('home', 'house'));\n    navigationDiv.appendChild(buildLink('done', 'done'));\n    navigationDiv.appendChild(buildLink('projects', 'assignment'));\n    return navigationDiv;\n  }\n\n  const clearContent = () => {\n    content.textContent = '';\n  }\n  \n  const clearToDoDiv = () => {\n    const toDoDiv:HTMLDivElement = document.getElementById('tododiv') as HTMLDivElement;\n    toDoDiv.textContent = '';\n  }\n\n  const clearDoneDiv = () => {\n    const toDoDiv:HTMLDivElement = document.getElementById('donediv') as HTMLDivElement;\n    toDoDiv.textContent = '';\n  }\n\n  const clearProjectDiv = () => {\n    const toDoDiv:HTMLDivElement = document.getElementById('projectdiv') as HTMLDivElement;\n    toDoDiv.textContent = '';\n  }\n\n  const createButtons = (iD: string, type: string) => {\n    const buttons:HTMLDivElement = document.createElement('div');\n    buttons.classList.add('buttondiv');\n    buttons.appendChild(createEditButton(iD, type));\n    buttons.appendChild(createDeleteButton(iD, type));\n    return buttons;\n  }\n\n  const createExpandButton = (iD:number) => {\n      const expandButton:HTMLDivElement = document.createElement('div');\n      expandButton.classList.add('expandbutton');\n      expandButton.setAttribute('objectid', iD.toString());\n      expandButton.innerHTML = '<span class=\"material-symbols-outlined\">expand_more</span>';\n      expandButton.addEventListener(('click'), () => {\n        const projectDiv:HTMLDivElement = document.getElementById(iD.toString()) as HTMLDivElement;\n        const toDosDiv = (<HTMLElement>(projectDiv.nextSibling));\n        toDosDiv.textContent = '';\n        toDosDiv.appendChild(createToDosDiv(iD));\n        if (toDosDiv.style.display === 'none') {\n          toDosDiv.textContent = '';\n          toDosDiv.appendChild(createToDosDiv(iD));\n          toDosDiv.style.display = 'block'\n        } else {\n          toDosDiv.style.display = 'none';\n        } \n        projectDiv.classList.toggle('expanded');\n\n      });\n      return expandButton;\n  }\n\n  const buildAddNewButton = () => {\n      const addNewButton:HTMLButtonElement = document.createElement('button');\n      addNewButton.setAttribute('id', 'addnewbutton');\n      addNewButton.textContent = 'Add ToDo';\n      return addNewButton;\n  }\n\n  const buildHeader = () => {\n      const header:HTMLElement = document.createElement('header');\n      header.setAttribute('id', 'header');\n      header.appendChild(buildLogo());\n      header.appendChild(buildNavigationDiv());\n      header.appendChild(buildAddNewButton());\n      return header\n  }\n\n  const buildNewProjectButtonDiv = () => {\n      const newProjectButtonDiv:HTMLDivElement = document.createElement('div');\n      newProjectButtonDiv.setAttribute('id', 'newprojectbuttondiv');\n      const newProjectButton:HTMLButtonElement = document.createElement('button');\n      newProjectButton.setAttribute('id', 'newprojectbutton');\n      newProjectButton.textContent = 'Add a new project';\n      newProjectButtonDiv.appendChild(newProjectButton);\n      return newProjectButtonDiv;\n  }\n\n  const buildProjectMiddleDiv = (projectObject: Project) => {\n      const middleDiv:HTMLDivElement = document.createElement('div');\n      middleDiv.classList.add('middlediv');\n      const chechboxDiv:HTMLDivElement = document.createElement('div');\n      chechboxDiv.classList.add('checkboxdiv');\n      chechboxDiv.appendChild(addCheckBox());\n      middleDiv.appendChild(chechboxDiv);\n      middleDiv.appendChild(buildContent('project', projectObject as unknown as generalObject, ['name', 'date', 'priority']));\n      middleDiv.appendChild(createButtons(projectObject.iD.toString(), 'project'));\n      return middleDiv;\n  }\n\n  const buildProjectToDoDiv = (projectObject: Project) => {\n      const projectToDoDiv = document.createElement('div');\n      projectToDoDiv.classList.add('projecttododiv');\n      projectToDoDiv.setAttribute('objectid', projectObject.iD.toString());\n      projectToDoDiv.style.display = 'none';\n      return projectToDoDiv;\n  }\n\n  const pageBuilder = (contentType: string, linkName:string) => {\n      clearContent();\n      content.appendChild(buildHeader());\n      const div:HTMLDivElement = document.createElement('div');\n      div.setAttribute('id', `${contentType}div`);\n      content.appendChild(div);\n      content.appendChild(formBuilder.buildForm());\n      addNewButtonEventListener();\n      (document.getElementById(`${linkName}link`) as HTMLDivElement).classList.add('active');\n      addNavListeners();\n  }\n\n  // Main functions to be returned\n  const homePageBuilder = () => {\n    pageBuilder('todo', 'home');\n    displayToDos(toDoManipulator.getToDoAry());\n  }\n\n  const donePageBuilder = () => {\n    pageBuilder('done', 'done');\n    displayDoneToDos(toDoManipulator.getDoneAry());\n  }\n\n  const projectPageBuilder = () => {\n    clearContent();\n    const projectDiv:HTMLDivElement = document.createElement('div');\n    projectDiv.setAttribute('id', 'projectdiv');\n    content.appendChild(buildHeader());\n    if (toDoManipulator.getProjectAry().length > 0) {\n      content.appendChild(buildNewProjectButtonDiv());\n    }\n    content.appendChild(projectDiv);\n    content.appendChild(formBuilder.buildForm());\n    content.appendChild(formBuilder.buildNewProjectForm());\n    addNewButtonEventListener();\n    if (toDoManipulator.getProjectAry().length > 0) {\n      const addNewProjectButton:HTMLButtonElement = document.getElementById('newprojectbutton') as HTMLButtonElement;\n      const projectFormDiv:HTMLElement = document.getElementById('projectformdiv') as HTMLDivElement;\n      addNewProjectButton.addEventListener(('click'), () => {\n        projectFormDiv.style.display = 'block';\n        content.classList.add('blurred');\n    });\n  }\n    (document.getElementById('projectslink') as HTMLDivElement).classList.add('active');\n    addNavListeners();\n    displayProjects(toDoManipulator.getProjectAry());\n  }\n\n  const toDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement, done = false) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    done ? toDo.classList.add('donetodo') : toDo.classList.add('todo');\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    const middleDiv:HTMLDivElement = document.createElement('div');\n    middleDiv.classList.add('middlediv');\n    const chechboxDiv:HTMLDivElement = document.createElement('div');\n    chechboxDiv.classList.add('checkboxdiv');\n    done ? chechboxDiv.appendChild(addRevert()) : chechboxDiv.appendChild(addCheckBox());\n    middleDiv.appendChild(chechboxDiv);\n    middleDiv.appendChild(buildContent('todo', toDoObject as unknown as generalObject, ['heading', 'text', 'date', 'priority']));\n    done ? middleDiv.appendChild(createButtons(toDoID, 'done')) : middleDiv.appendChild(createButtons(toDoID, 'todo'));\n    toDo.appendChild(middleDiv);\n    toDoDiv.appendChild(toDo);\n  }\n\n  const projectToDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement) => {\n    const toDoID:string = toDoObject.iD.toString()\n    const toDo:HTMLDivElement = document.createElement('div');\n    toDo.classList.add('projecttodo');\n    toDo.setAttribute('id', toDoID);\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    toDo.appendChild(buildContent('todo', toDoObject as unknown as generalObject, ['heading', 'text', 'date', 'priority']));\n    toDoDiv.appendChild(toDo);\n  }\n\n  const projectBuilder = (projectObject: Project, projectDiv:HTMLElement) => {\n    const projectContainer:HTMLDivElement = document.createElement('div');\n    projectContainer.classList.add('projectcontainer');\n    const project:HTMLDivElement = document.createElement('div');\n    project.classList.add('project');\n    project.setAttribute('id', projectObject.iD.toString());\n    project.appendChild(addLabelStripe(projectObject.priority));\n    project.appendChild(buildProjectMiddleDiv(projectObject));\n    project.appendChild(createExpandButton(projectObject.iD));\n    projectContainer.appendChild(project);\n    projectContainer.appendChild(buildProjectToDoDiv(projectObject));\n    projectDiv.appendChild(projectContainer);\n  }\n\n  const displayToDos = ( toDoAry:ToDo[] ) => {\n    const toDoDiv:HTMLElement = (document.getElementById('tododiv') || document.createElement('tododiv'));\n    clearToDoDiv();\n    if (toDoAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew') as HTMLSpanElement;\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLDivElement = document.getElementById('formdiv') as HTMLDivElement;\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      })\n      toDoDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:ToDo[] = toDoAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, toDoDiv));\n  }\n\n  const displayDoneToDos = (doneAry:ToDo[] ) => {\n    clearDoneDiv()\n    const doneDiv:HTMLDivElement = document.getElementById('donediv') as HTMLDivElement;\n    if (doneAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos marked as done.';\n      doneDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:ToDo[] = doneAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, doneDiv, true));\n  }\n\n  const displayProjects = (projectAry:Project[]) => {\n    clearProjectDiv();\n    const projectDiv = document.getElementById('projectdiv') as HTMLDivElement;\n    if (projectAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No Projects yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan: HTMLSpanElement = actionDiv.querySelector('#addnew') as HTMLSpanElement;\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLDivElement = document.getElementById('projectformdiv') as HTMLDivElement;\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      });\n      projectDiv.appendChild(actionDiv);\n      return;\n    }\n    const resultAry:Project[] = projectAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((project:Project) => projectBuilder(project, projectDiv));\n  }\n\n  return { homePageBuilder, donePageBuilder, projectPageBuilder, displayToDos, displayDoneToDos, displayProjects, createToDosDiv };\n})();\n\nexport default domManipulator;","import domManipulator from './dom-manipulator';\nimport toDoManipulator from './todomanipulator';\n\ntoDoManipulator.loadArys();\ndomManipulator.homePageBuilder();\n"],"names":["date","getDate","getMonth","getFullYear","toDoDate","currentDate","Date","timeDifference","getTime","Math","floor","day","String","padStart","month","heading","text","priority","id","projectiDs","done","doneStatus","iD","markAsDone","getDoneStatus","name","toDos","toDosAry","addToDo","toDo","push","clearToDos","getToDos","setToDos","newToDos","iDsAry","JSON","parse","localStorage","getItem","generateID","randID","random","includes","setItem","stringify","freeID","index","indexOf","splice","dateString","toDoAry","doneAry","projectAry","deleteToDo","find","x","length","forEach","projectiD","project","findIndex","deleteProject","createToDo","newToDo","modifyToDo","newHeading","newText","newDate","newPriority","modifyDone","getToDoAry","loadArys","todo","getDoneAry","moveToDone","doneToDo","console","log","revertDone","undoneToDo","findTodDo","findDoneToDo","createProject","newProject","modifyProject","newName","getProjectAry","findProject","updateProjectAry","deleteItem","deleteDone","e","preventDefault","target","targetParent","formData","FormData","data","Object","fromEntries","reset","style","display","todotitle","todocontent","tododate","todopriority","type","toDoDiv","parentNode","Number","todotitleedit","todocontentedit","tododateedit","todopriorityedit","projectname","projectdate","projectpriority","projectToDoIds","getAll","map","value","remove","toDoId","projectDiv","projectnameedit","projectdateedit","projectpriorityedit","toDoPriorities","projectPriorities","content","document","getElementById","createElement","createCloseButton","formDiv","closeButtonDiv","setAttribute","closeButton","innerHTML","addEventListener","classList","appendChild","labelCreator","forElement","labelText","label","textContent","radioCreator","radioName","radioOptions","checkedValue","inputDiv","add","radioDiv","option","radioButton","radioLabel","toUpperCase","substring","prepareContent","contentDiv","sideButtonCreator","form","cancelButton","acceptButton","createSubmitButton","submitButton","inputCreator","fieldType","fieldName","required","fieldValue","field","inputFieldCreator","editInputCreator","querySelector","buildForm","formHeading","buildToDoEditForm","toDoContent","getAttribute","headerContent","dateContent","priorityContent","buildProjectEditForm","projectContent","nameContent","buildNewProjectForm","buildAddProjectToDoForm","_e","toDoIdAry","a","toDoFormDiv","toDoCheckbox","filter","toDoLabel","toDoHeading","projectToDoDiv","toString","newToDosDiv","parentElement","replaceChild","noToDos","domManipulator","getPriorityColor","createToDosDiv","toDosDiv","div","noToDosDiv","noToDosButton","createNoToDosButton","projectToDoBuilder","addCheckBox","checkbox","toDoDiviD","displayToDos","addNewButtonEventListener","addNewButton","addLabelStripe","labelStripe","backgroundColor","addNavListeners","querySelectorAll","element","homePageBuilder","donePageBuilder","projectPageBuilder","buildContent","object","propAry","prop","toDoDateDiv","toDoDateIcon","dayDifference","abs","createDateString","buildElementDate","priorityDiv","priorityCircle","createPriorityCircle","priorityText","createPriorityDiv","propName","toDoElement","buildElement","buildLink","linkName","linkIcon","link","capitalizedLinkName","charAt","slice","clearContent","createButtons","buttons","editButton","createEditButton","deleteButton","confirm","displayProjects","displayDoneToDos","createDeleteButton","buildHeader","header","logodiv","checkmark","logo","buildLogo","navigationDiv","buildNavigationDiv","buildAddNewButton","pageBuilder","contentType","toDoBuilder","toDoObject","toDoID","middleDiv","chechboxDiv","revert","doneDiv","doneDiviD","addRevert","actionDiv","sort","b","projectObject","projectContainer","buildProjectMiddleDiv","expandButton","toggle","createExpandButton","buildProjectToDoDiv","projectBuilder","newProjectButtonDiv","newProjectButton","buildNewProjectButtonDiv","addNewProjectButton","projectFormDiv"],"sourceRoot":""}