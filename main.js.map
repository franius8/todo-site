{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-site/./src/dateconverter.ts","webpack://todo-site/./src/todo.ts","webpack://todo-site/./src/idgenerator.ts","webpack://todo-site/./src/datefixer.ts","webpack://todo-site/./src/todomanipulator.ts","webpack://todo-site/./src/formgetter.ts","webpack://todo-site/./src/formhandler.ts","webpack://todo-site/./src/formbuilder.ts","webpack://todo-site/./src/dom-manipulator.ts","webpack://todo-site/./src/index.ts"],"sourcesContent":["const dateConverter = (() => {\n  const convertToString = (date: Date) => {\n    let result = '';\n  let day = date.getDate();\n  let month = date.getMonth() + 1;\n  let year = date.getFullYear();\n  result = day + '.' + month + '.' + year;\n  return result;\n  }\n  const convertToInputFormat = (date: Date) => {\n    let result = '';\n    let day = String(date.getDate()).padStart(2, '0');\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    result = year + '-' + month + '-' + day;\n    return result;\n  }\n\n  const getDayDifference = (date: Date) => {\n    const toDoDate = date;\n    const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n    const timeDifference = toDoDate.getTime() - currentDate.getTime();\n    const dayDifference = Math.floor(timeDifference / (1000 * 3600 * 24));\n    return dayDifference;\n  }\n  return { convertToString, getDayDifference, convertToInputFormat };\n})();\n\nexport default dateConverter;\n","const toDo = (heading: string, text: string, date: Date, priority: string, id:number) => {\n  const iD:number = id;\n  let done:Boolean = false;\n  const markAsDone = () => done = !done;\n  const getDoneStatus = () => done;\n  return { heading, text, date, priority, iD, markAsDone, getDoneStatus };\n};\n\nexport default toDo;","const idGenerator = (() => {\n  const iDsAry:number[] = JSON.parse(localStorage.getItem(\"idsary\") || \"[]\");\n  const generateID = () => {\n    while (true) {\n      let randID:number = Math.floor(Math.random() * (10000));\n      if (!iDsAry.includes(randID)) {\n        iDsAry.push(randID);\n        localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n        return randID;\n      }\n    }\n  }\n  const freeID = (id:number) => {\n    const index = iDsAry.indexOf(id);\n    iDsAry.splice(index, 1);\n    localStorage.setItem('idsary', (JSON.stringify(iDsAry)));\n  }\n  return { generateID, freeID }\n})();\n\nexport default idGenerator;\n","const dateFixer = (() => {\n  const fixDates = (dateString: string) => {\n    return new Date (dateString);\n  }\n  return { fixDates };\n})();\n\nexport default dateFixer;","import toDo from \"./todo\";\nimport idGenerator from \"./idgenerator\";\nimport dateFixer from \"./datefixer\";\n\nconst toDoManipulator = (() => {\n  interface ToDo {\n    heading: string;\n    text: string;\n    date: any;\n    priority: string;\n    iD: number;\n    markAsDone: Function;\n    getDoneStatus: Function;\n  }\n\n  let toDoAry:ToDo[] = [];\n  let doneAry:ToDo[] = [];\n\n  const loadToDoAry = () => {\n    let rawToDoAry = JSON.parse(localStorage.getItem(\"todoary\") || \"[]\");\n    rawToDoAry.forEach((todo: ToDo) => {\n    todo.date = dateFixer.fixDates(todo.date);\n    toDoAry.push(toDo(todo.heading, todo.text, todo.date, todo.priority, todo.iD));\n    });\n  }\n\n  const loadDoneAry = () => {\n    doneAry = JSON.parse(localStorage.getItem(\"doneary\") || \"[]\");\n    doneAry.forEach((todo: ToDo) => {\n      todo.date = dateFixer.fixDates(todo.date);\n      });\n  }\n\n  const loadArys = () => {\n    loadToDoAry();\n    loadDoneAry();\n  }\n\n  const createToDo = (heading: string, text: string, date: Date, priority: string) => {\n    const iD = idGenerator.generateID();\n    const newToDo:ToDo = toDo(heading, text, date, priority, iD);\n    toDoAry.push(newToDo);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    return newToDo;\n  }\n  const modifyToDo = (id:number, heading: string = null, text: string = null, date: Date = null, priority: string = null) => {\n    const toDo:ToDo = toDoAry.find(x => x.iD === id);\n    if (heading !== null) {\n      toDo.heading = heading;\n    }\n    if (text !== null) {\n      toDo.text = text;\n    }\n    if (date !== null) {\n      toDo.date = date;\n    }\n    if (priority !== null) {\n      toDo.priority = priority;\n    }\n  }\n  const deleteToDo = ( id:number ) => {\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    toDoAry.splice(index, 1);\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    idGenerator.freeID(id);\n  }\n\n  const findTodDo = (id:number) => {\n    return toDoAry.find(x => x.iD === id);\n  }\n\n  const moveToDone = (id:number) => {\n    const index:number = toDoAry.findIndex(x => x.iD === id);\n    const doneToDo = toDoAry.splice(index, 1)[0];\n    console.log(doneToDo);\n    doneToDo.markAsDone();\n    localStorage.setItem('todoary', (JSON.stringify(toDoAry)));\n    toDoAry.push(doneToDo);\n    localStorage.setItem('doneary', (JSON.stringify(toDoAry)));\n  }\n\n  const getToDoAry = () => toDoAry;\n  const getDoneAry = () => doneAry;\n  return { createToDo, modifyToDo, deleteToDo, getToDoAry, loadArys, getDoneAry, moveToDone, findTodDo }\n})();\n\nexport default toDoManipulator;","const formGetter = (() => {\n  const getFormData = (e:SubmitEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const targetParent = (<HTMLDivElement>(target.parentNode));\n    const toDoTitle:string = (<HTMLInputElement>(document.getElementById('todotitle'))).value;\n    const toDoContent:string = (<HTMLInputElement>(document.getElementById('todocontent'))).value;\n    const toDoDate:Date = new Date((<HTMLInputElement>(document.getElementById('tododate'))).value);\n    const toDoPriority:string = (<HTMLInputElement>(document.querySelector('input[name=\"todopriority\"]:checked'))).value;\n    target.reset();\n    targetParent.style.display = 'none';\n    const toDoData:[string, string, Date, string] = [toDoTitle, toDoContent, toDoDate, toDoPriority]\n    return toDoData;\n  }\n  return { getFormData }\n})();\n\nexport default formGetter;","import formGetter from \"./formgetter\";\nimport domManipulator from \"./dom-manipulator\";\nimport toDoManipulator from \"./todomanipulator\";\n\nconst formHandler =(() => {\n  const handleFormSubmission = (e:SubmitEvent) => {\n    const toDoData = formGetter.getFormData(e);\n    toDoManipulator.createToDo(toDoData[0], toDoData[1], toDoData[2], toDoData[3]);\n    domManipulator.displayToDos(toDoManipulator.getToDoAry());\n  }\n  return {handleFormSubmission}\n})();\n\nexport default formHandler","import toDoManipulator from \"./todomanipulator\";\nimport formHandler from \"./formhandler\";\nimport toDo from \"./todo\";\nimport dateConverter from \"./dateconverter\";\n\nconst formBuilder = (() => {\n  const priorities:string[] = ['Low', 'Standard', 'High'];\n\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  const createCloseButton = (formDiv:HTMLDivElement) => {\n    const closeButtonDiv:HTMLDivElement = document.createElement('div');\n    closeButtonDiv.setAttribute('id', 'closebuttondiv');\n    const closeButton:HTMLButtonElement = document.createElement('button');\n    closeButton.setAttribute('id', 'closebutton');\n    closeButton.innerHTML = '<span class=\"material-symbols-outlined\">close</span>';\n    closeButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'none';\n      content.classList.remove('blurred');\n    });\n    closeButtonDiv.appendChild(closeButton);\n    return closeButtonDiv;\n  }\n  const labelCreator = (forElement: string, labelText: string) => {\n    const label:HTMLLabelElement = document.createElement('label');\n    label.setAttribute('for', forElement);\n    label.textContent = labelText;\n    return label;\n  }\n  const inputFieldCreator = (fieldType: string, fieldName: string, fieldValue:string = 'empty', required:boolean) => {\n    const field:HTMLInputElement = document.createElement('input');\n    field.setAttribute('type', fieldType);\n    field.setAttribute('name', fieldName);\n    field.setAttribute('id', fieldName);\n    if (required === true) {\n      field.setAttribute('required', 'true');\n    }\n    if (fieldValue !== 'empty') {\n      field.setAttribute('value', fieldValue);\n    }\n    return field;\n  }\n  const radioCreator = (radioName: string, radioOptions: string[], checkedValue:string = null) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator('radiocontainer', 'Priority:'));\n    const radioDiv:HTMLDivElement = document.createElement('div');\n    radioDiv.setAttribute('id', 'radiocontainer');\n    radioOptions.forEach((option) => {\n      const radioButton:HTMLInputElement = document.createElement('input');\n      radioButton.setAttribute('type', 'radio');\n      radioButton.setAttribute('name', radioName);\n      radioButton.setAttribute('value', option);\n      radioButton.setAttribute('id', option);\n      if (option === checkedValue) {\n        radioButton.setAttribute('checked', 'checked');\n      }\n      const radioLabel:HTMLLabelElement = document.createElement('label');\n      radioLabel.setAttribute('for', option);\n      radioLabel.textContent = option[0].toUpperCase() + option.substring(1);\n      radioDiv.appendChild(radioButton);\n      radioDiv.appendChild(radioLabel);\n    })\n    inputDiv.appendChild(radioDiv);\n    return inputDiv\n  }\n  const createSubmitButton = () => {\n    const submitButton:HTMLButtonElement = document.createElement('button');\n    submitButton.setAttribute('type', 'submit');\n    submitButton.setAttribute('id', 'todosubmit');\n    submitButton.textContent = 'Add';\n    return submitButton;\n  }\n  const inputCreator = (fieldType: string, fieldName: string, labelText: string, required:boolean = true) => {\n    const inputDiv:HTMLDivElement = document.createElement('div');\n    inputDiv.classList.add('inputdiv');\n    inputDiv.appendChild(labelCreator(fieldName, labelText));\n    inputDiv.appendChild(inputFieldCreator(fieldType, fieldName, 'empty', required));\n    return inputDiv;\n  }\n  const editInputCreator = (fieldType: string, fieldName: string, labelText: string, required:boolean = true, fieldValue: any) => {\n    const field:HTMLDivElement = inputCreator(fieldType, fieldName, labelText, required);\n    const inputField:HTMLInputElement = field.querySelector(`#${fieldName}`);\n    inputField.value = fieldValue;\n    return field;\n  }\n  const buildForm = () => {\n    const formDiv:HTMLDivElement = document.createElement('div');\n    formDiv.setAttribute('id', 'formdiv');\n    const formHeading:HTMLHeadingElement = document.createElement('h2');\n    formHeading.setAttribute('id', 'formheading');\n    formHeading.textContent = 'Add a new ToDo';\n    const form:HTMLFormElement = document.createElement('form');\n    form.appendChild(inputCreator('text', 'todotitle', 'Title:'));\n    form.appendChild(inputCreator('text', 'todocontent', 'Content (optional):', false))\n    form.appendChild(inputCreator('date', 'tododate', 'Due date:'));\n    form.appendChild(radioCreator('todopriority', priorities));\n    form.appendChild(createSubmitButton());\n    formDiv.appendChild(createCloseButton(formDiv));\n    formDiv.appendChild(formHeading);\n    formDiv.appendChild(form);\n    form.addEventListener(('submit'), (e) => { \n      formHandler.handleFormSubmission(e);\n      content.classList.remove('blurred');\n    });\n    return formDiv;\n  };\n  const buildEditForm = (e:MouseEvent) => {\n    const target:HTMLElement = e.target as HTMLElement;\n    const targetParent:HTMLElement = (<HTMLElement>(target.parentNode));\n    const toDoDiv:HTMLElement = (<HTMLElement>(targetParent.parentNode));\n    const toDoContent:HTMLElement = toDoDiv.querySelector('.todocontent');\n    const toDo = toDoManipulator.findTodDo(Number(toDoDiv.id));\n    const headerContent:string = toDo.heading;\n    const textContent:string = toDo.text;\n    const dateContent:Date = toDo.date\n    const priorityContent:string = toDo.priority;\n    toDoContent.innerHTML = '';\n    toDoContent.appendChild(editInputCreator('text', 'todotitleedit', 'Title:', true, headerContent));\n    toDoContent.appendChild(editInputCreator('text', 'todocontentedit', 'Content (optional):', false, textContent));\n    toDoContent.appendChild(editInputCreator('date', 'tododateedit', 'Due date:', true, dateConverter.convertToInputFormat(dateContent)));\n    toDoContent.appendChild(radioCreator('todopriorityedit', priorities, priorityContent));\n  }\n  return { buildForm, buildEditForm };\n})()\n\nexport default formBuilder;","import dateConverter from './dateconverter';\nimport toDoManipulator from './todomanipulator';\nimport formBuilder from './formbuilder';\n\ninterface ToDo {\n  heading: string;\n  text: string;\n  date: Date;\n  priority: string;\n  iD:number;\n  markAsDone: Function;\n  getDoneStatus: Function;\n}\n\nconst domManipulator = (() => {\n  const content:HTMLElement = (document.getElementById('content') || document.createElement('content'));\n  // Subfunctions for helper functions\n  const createToDoDate = (date: Date) => {\n    const toDoDateDiv:HTMLDivElement = document.createElement('div');\n    toDoDateDiv.classList.add('tododate');\n    const toDoDateIcon:HTMLDivElement = document.createElement('div');\n    toDoDateIcon.innerHTML = '<span class=\"material-symbols-outlined\">calendar_month</span>';\n    const toDoDate:HTMLDivElement = document.createElement('div');\n    const dayDifference:number = dateConverter.getDayDifference(date);\n    if (dayDifference >= 0) {\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + dateConverter.getDayDifference(date) + ' days left)';  \n    } else {\n      toDoDateDiv.classList.add('missedtodo');\n      toDoDate.textContent = dateConverter.convertToString(date) + ' (' + Math.abs(dateConverter.getDayDifference(date)) + ' days ago)';\n    }\n    toDoDateDiv.appendChild(toDoDateIcon);\n    toDoDateDiv.appendChild(toDoDate);\n    return toDoDateDiv;\n  };\n\n  const createPriorityDiv = (priority: string) => {\n    const priorityDiv:HTMLDivElement = document.createElement('div');\n    priorityDiv.classList.add('todopriority');\n    const priorityCircle:HTMLDivElement = document.createElement('div');\n    priorityCircle.classList.add('prioritycircle');\n    if (priority === 'Standard') {\n      priorityCircle.style.backgroundColor = 'orange';\n    } else if (priority === 'Low') {\n      priorityCircle.style.backgroundColor = 'blue';\n    } else if (priority === 'High') {\n      priorityCircle.style.backgroundColor = 'red';\n    };\n    const priorityText:HTMLDivElement = document.createElement('div');\n    priorityText.textContent = priority + ' priority';\n    \n    priorityDiv.appendChild(priorityCircle);\n    priorityDiv.appendChild(priorityText);\n    return priorityDiv;\n  }\n  \n  // Helper functions that are not returned\n  const addCheckBox = () => {\n    const checkbox:HTMLDivElement = document.createElement('div');\n    checkbox.classList.add('checkbox');\n    checkbox.innerHTML = '&#10003';\n    checkbox.addEventListener('click', (e) => {\n      const target = (<HTMLElement>e.target);\n      const targetParent = (<HTMLElement>(target).parentNode);\n      const newField = target.cloneNode(true);\n      targetParent.replaceChild(newField, target);\n      const toDoDiv = (<HTMLElement>targetParent.parentNode);\n      const toDoDiviD:number = Number(toDoDiv.id);\n      toDoManipulator.moveToDone(toDoDiviD);\n      toDoDiv.remove();\n      toDoDiv.classList.remove('todo');\n      toDoDiv.classList.add('donetodo');\n      const doneDiv:HTMLElement = document.getElementById('donediv');\n      doneDiv.appendChild(toDoDiv);\n      });\n    return checkbox;\n  };\n\n  const addLabelStripe = (priority: string) => {\n    const labelStripe:HTMLDivElement = document.createElement('div');\n    labelStripe.classList.add('labelstripe');\n    if (priority === 'Standard') {\n      labelStripe.style.backgroundColor = 'orange';\n    } else if (priority === 'Low') {\n      labelStripe.style.backgroundColor = 'blue';\n    } else if (priority === 'High') {\n      labelStripe.style.backgroundColor = 'red';\n    };\n    return labelStripe;\n  }\n  const buildToDoConent = (toDoObject: ToDo) => {\n    const toDoContent:HTMLDivElement = document.createElement('div');\n    toDoContent.classList.add('todocontent')\n    const toDoHeader:HTMLDivElement = document.createElement('div');\n    toDoHeader.classList.add('todoheader');\n    toDoHeader.textContent = toDoObject.heading;\n    const toDoText:HTMLDivElement = document.createElement('div');\n    toDoText.classList.add('todotext');\n    toDoText.textContent = toDoObject.text;\n    toDoContent.appendChild(toDoHeader);\n    toDoContent.appendChild(toDoText);\n    toDoContent.appendChild(createToDoDate(toDoObject.date));\n    toDoContent.appendChild(createPriorityDiv(toDoObject.priority));\n    return toDoContent;\n  }\n\n  const buildLogo = () => {\n    const logodiv:HTMLDivElement = document.createElement('div');\n    logodiv.setAttribute('id', 'logodiv');\n    const checkmark:HTMLDivElement = document.createElement('div');\n    checkmark.setAttribute('id', 'checkmark');\n    checkmark.innerHTML = '&#10003';\n    const logo:HTMLDivElement = document.createElement('div');\n    logo.setAttribute('id', 'logo');\n    logo.textContent = 'To Do';\n    logodiv.appendChild(checkmark);\n    logodiv.appendChild(logo);\n    return logodiv;\n  }\n\n  const clearToDoDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('tododiv');\n    toDoDiv.textContent = '';\n  }\n\n  const clearDoneDiv = () => {\n    const toDoDiv:HTMLElement = document.getElementById('donediv');\n    toDoDiv.textContent = '';\n  }\n\n    const createToDoButtons = () => {\n      const buttonDiv:HTMLDivElement = document.createElement('div');\n      buttonDiv.classList.add('buttondiv');\n      const editButton:HTMLButtonElement = document.createElement('button');\n      editButton.classList.add('editbutton');\n      editButton.innerHTML = '<span class=\"material-symbols-outlined\">edit</span>'\n      editButton.addEventListener(('click'), (e) => {\n        formBuilder.buildEditForm(e);\n      });\n      const deleteButton:HTMLButtonElement = document.createElement('button');\n      deleteButton.classList.add('deletebutton');\n      deleteButton.innerHTML = '<span class=\"material-symbols-outlined\">delete</span>';\n      deleteButton.addEventListener(('click'), (e) => {\n        const target = (<HTMLElement>e.target);\n        const toDo = (<HTMLElement>(<HTMLElement>(target).parentNode).parentNode);\n        const iD:number = Number(toDo.id);\n        if (confirm('Are you sure you want to delete that?\\n(This is an irreversible operation)')) {\n          toDoManipulator.deleteToDo(iD);\n          displayToDos(toDoManipulator.getToDoAry());  \n        };\n      });\n      buttonDiv.appendChild(editButton);\n      buttonDiv.appendChild(deleteButton);\n      return buttonDiv;\n    }\n  // Main functions to be returned\n  const homePageBuilder = () => {\n    const header:HTMLDivElement = document.createElement('div');\n    header.setAttribute('id', 'header');\n    const toDoDiv:HTMLDivElement = document.createElement('div');\n    toDoDiv.setAttribute('id', 'tododiv');\n    header.appendChild(buildLogo());\n    const addNewButton:HTMLButtonElement = document.createElement('button');\n    addNewButton.setAttribute('id', 'addnewbutton');\n    addNewButton.textContent = 'Add ToDo';\n    header.appendChild(addNewButton);\n    const doneHeader:HTMLDivElement = document.createElement('div');\n    doneHeader.setAttribute('id', 'doneheader');\n    doneHeader.textContent = 'Done';\n    const doneDiv:HTMLDivElement = document.createElement('div');\n    doneDiv.setAttribute('id', 'donediv');\n    content.appendChild(header);\n    content.appendChild(toDoDiv);\n    content.appendChild(doneHeader);\n    content.appendChild(doneDiv);\n    content.appendChild(formBuilder.buildForm());\n    const formDiv:HTMLElement = document.getElementById('formdiv');\n    addNewButton.addEventListener(('click'), () => {\n      formDiv.style.display = 'block';\n      content.classList.add('blurred');\n    });\n  }\n  const toDoBuilder = (toDoObject: ToDo, toDoDiv:HTMLElement, done:boolean = false) => {\n    const toDo:HTMLDivElement = document.createElement('div');\n    if (done === false) {\n      toDo.classList.add('todo');\n    } else {\n      toDo.classList.add('donetodo')\n    }\n    toDo.setAttribute('id', toDoObject.iD.toString());\n    toDo.appendChild(addLabelStripe(toDoObject.priority));\n    const chechboxDiv:HTMLDivElement = document.createElement('div');\n    chechboxDiv.classList.add('checkboxdiv');\n    chechboxDiv.appendChild(addCheckBox());\n    toDo.appendChild(chechboxDiv);\n    toDo.appendChild(buildToDoConent(toDoObject));\n    toDo.appendChild(createToDoButtons());\n    toDoDiv.appendChild(toDo);\n  }\n  const displayToDos = ( toDoAry:ToDo[] ) => {\n    const toDoDiv:HTMLElement = (document.getElementById('tododiv') || document.createElement('tododiv'));\n    clearToDoDiv();\n    if (toDoAry.length === 0) {\n      const actionDiv:HTMLDivElement = document.createElement('div');\n      actionDiv.setAttribute('id', 'actiondiv');\n      actionDiv.innerHTML = 'No ToDos yet. Time to <span id=\"addnew\">add a new one</span>.';\n      const addNewSpan = actionDiv.querySelector('#addnew');\n      addNewSpan.addEventListener(('click'), () => {\n        const formDiv:HTMLElement = document.getElementById('formdiv');\n        formDiv.style.display = 'block';\n        content.classList.add('blurred');\n      })\n      toDoDiv.appendChild(actionDiv);\n      return;\n    }\n    let resultAry:ToDo[] = toDoAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, toDoDiv));\n  }\n  const displayDoneToDos = (doneAry:ToDo[] ) => { //Needs to be finished\n    clearDoneDiv()\n    const doneDiv = document.getElementById('donediv');\n    let resultAry:ToDo[] = doneAry.sort((a,b) => a.date.getTime() - b.date.getTime());\n    resultAry.forEach((toDo:ToDo) => toDoBuilder(toDo, doneDiv, true));\n  }\n  return { homePageBuilder, toDoBuilder, displayToDos, displayDoneToDos };\n})();\n\nexport default domManipulator;","import domManipulator from './dom-manipulator';\nimport toDo from './todo';\nimport toDoManipulator from './todomanipulator';\n\ninterface ToDo {\n  heading: string;\n  text: string;\n  date: Date;\n  priority: string;\n  iD: number;\n  markAsDone: Function;\n  getDoneStatus: Function;\n}\n\ndomManipulator.homePageBuilder();\ntoDoManipulator.loadArys();\ndomManipulator.displayToDos(toDoManipulator.getToDoAry());\ndomManipulator.displayDoneToDos(toDoManipulator.getDoneAry());"],"names":["date","getDate","getMonth","getFullYear","toDoDate","currentDate","Date","timeDifference","getTime","Math","floor","day","String","padStart","month","heading","text","priority","id","done","iD","markAsDone","getDoneStatus","iDsAry","JSON","parse","localStorage","getItem","generateID","randID","random","includes","push","setItem","stringify","freeID","index","indexOf","splice","dateString","toDoAry","doneAry","createToDo","newToDo","modifyToDo","toDo","find","x","deleteToDo","findIndex","getToDoAry","loadArys","forEach","todo","getDoneAry","moveToDone","doneToDo","console","log","findTodDo","e","preventDefault","target","targetParent","toDoTitle","document","getElementById","value","toDoContent","toDoPriority","querySelector","reset","style","display","toDoData","priorities","content","labelCreator","radioCreator","inputCreator","editInputCreator","createElement","forElement","labelText","label","setAttribute","textContent","radioName","radioOptions","checkedValue","inputDiv","classList","add","appendChild","radioDiv","option","radioButton","radioLabel","toUpperCase","substring","fieldType","fieldName","required","fieldValue","field","inputFieldCreator","buildForm","formDiv","formHeading","submitButton","form","closeButtonDiv","closeButton","innerHTML","addEventListener","remove","createCloseButton","buildEditForm","toDoDiv","Number","headerContent","dateContent","priorityContent","domManipulator","toDoBuilder","toDoObject","labelStripe","toString","backgroundColor","checkbox","chechboxDiv","parentNode","newField","cloneNode","replaceChild","toDoDiviD","toDoHeader","toDoText","toDoDateDiv","toDoDateIcon","abs","createToDoDate","priorityDiv","priorityCircle","priorityText","createPriorityDiv","buildToDoConent","buttonDiv","editButton","deleteButton","confirm","displayToDos","createToDoButtons","length","actionDiv","sort","a","b","homePageBuilder","header","logodiv","checkmark","logo","buildLogo","addNewButton","doneHeader","doneDiv","displayDoneToDos"],"sourceRoot":""}